{"version":3,"sources":["services/api.js","redux/userDuck.js","components/text/index.js","redux/appDuck.js","components/common/AuthNav.jsx","components/common/Navbar.jsx","components/common/Footer.jsx","components/auth/LoginForm.jsx","components/auth/Login.jsx","components/auth/registerComponents/AgentData.jsx","components/auth/registerComponents/BasicData.jsx","components/auth/registerComponents/ProviderData.jsx","components/auth/RegisterFormLayout.jsx","components/auth/forgotPassword/ForgotPassword.jsx","components/auth/forgotPassword/ForgotPasswordToken.jsx","redux/dataDuck.js","components/home/Profile.jsx","components/home/chooseHouseComponents/ChooseHouseMap.jsx","components/home/ChooseHouse.jsx","components/home/buyHouseComponents/BuyHouseMap.jsx","components/home/BuyHouse.jsx","components/home/UserData.jsx","redux/adminDuck.js","components/admin/AddHouse.jsx","components/home/Documentation.jsx","components/home/Finance.jsx","components/home/financeProfiles/FinantialProfilesData.jsx","components/home/financeProfiles/FinancialForm.jsx","components/home/InteriorDesign.jsx","components/home/PropietaryService.jsx","components/home/FAQ.jsx","components/home/Help.jsx","components/home/faqComponents/FaqInfo.jsx","Routes.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["url","token","data","axios","post","initialData","fetching","info","error","logged","Cookies","get","tokenSent","validCode","passwordChanged","reducer","state","action","type","payload","signupAction","signupData","dispatch","then","res","set","maxAge","userInfo","email","catch","err","response","logoutAction","remove","roles","buyer","english","español","seller","agent","serviceProvider","form","required","forgotPassword","forgotPasswordLink","register","registerLink","button","send","next","login","return","update","continue","returnCaps","approve","save","preview","print","messages","missingFields","missingSelection","incorrectEmail","incorrectPassword","repeatedPasswordError","consent","wrongPassword","requestError","enterTokenError","dataUpdated","responses","yes","no","navbar","index","aboutUs","amenities","contact","portalTitle","portalSubtitle","emailPlaceholder","passwordPlaceholder","portalSubtitleBuyer","portalSubtitleSeller","portalSubtitleAgent","portalSubtitleProvider","loginLink","firstName","lastName","secondLastName","company","phone","beneficiary","beneficiaryTitle","beneficiaryEmail","beneficiaryPhone","selectAgent","password","repeatPassword","confirm","allowNewsletter","signLinkBuyer","signLinkAgent","signLinkProvider","forgotSubtitle","wantFinance","recoverPassword","title","message","successEmail","successToken","recoverMessage","enterToken","enterNewPassword","pwdIndicator","pwdError","pwdSuccess","redirect","sidebar","profile","chooseHouse","buyHouse","documentation","financing","interiorDesign","propietaryService","faq","help","sidebarSubtitle","country","birthDate","inputLotNumber","inputLotSize","inputLotModel","addLot","forSale","occupied","titlePrice","available","notAvailable","bedrooms","bathrooms","cars","price","remember","docsDescription","doc1","doc2","doc3","doc4","approveTitle","approvalDescription","firstApproval","secondApproval","activeProcess","userData","ssn","civilStatus","occupation","position","officePhone","occupationEx","companyEx","positionEx","mbText","blowseButon","firstDoc","inst","secondDoc","thirdDoc","nationalSalaried","nationalIndependent","northAmericanSalaried","northAmericanIndependent","foreign","putDataTitle","viewDocsButton","changeProfile","nationalSalariedDocs","nationalIndependentDocs","americanSalariedDocs","americanIndependentDocs","foreignDocs","companyDocs","financingForm","referenceTitle","fillInputs","homePhone","rfc","cellPhone","livingTime","livesInHouse","address","companyName","companyField","companyAddress","companyTime","functionsDescription","companyRole","academicLevel","economicDependants","height","weight","carBrand","carValue","realStateNumber","realStateValue","contactName","contactAddress","contactPhone","propietaryServices","hoa","houseCleaning","manteinanceServices","cable","publicServices","area","options","kitchen","livingRoom","floor","walls","language","changeLangAction","getState","app","connect","toggleLanguage","logout","withRouter","location","className","src","alt","onClick","to","pathname","text","indexOf","user","useState","activeBurger","setActiveBurger","isDesktop","useMediaQuery","query","menu","Item","key","overlay","trigger","isActive","buttonWidth","history","setData","handleData","e","target","name","value","useEffect","status","push","initialValues","onFinish","test","toLowerCase","warning","rules","onChange","placeholder","Password","loading","htmlType","signup","checked","length","warn","Option","Select","customerAgent","defaultValue","match","params","sendToken","setEmail","handleSubmit","onKeyPress","checkCode","changePassword","setToken","setPassword","handleNewPassword","success","setTimeout","fetchingData","fetchingHouse","house","updateUserAction","additionalData","completeData","handleInfoAction","event","getDataAction","id","getData","handleInfo","updateUser","setConsent","size","userType","format","disabledDate","current","moment","endOf","showToday","ChooseHouseMap","model","ReactImageMagnify","smallImage","isFluidWidth","largeImage","width","enlargedImageContainerDimensions","EnvironmentOutlined","href","lotModel","setLotModel","additionalLotData","setAdditionalLotData","additionalLot","setAdditionalLot","lotSize","setLotSize","additionalLotSize","setAdditionalLotSize","handleAdditionalLotData","additionalLotModel","lotNumber","parseInt","handleLotSize","suffix","handleAdditionalLotSize","additionalLotNumber","BuyHouseMap","mainImage","selectedImage","setSelectedImage","setFirstApproval","setSecondApproval","otherImages","map","imageLink","ix","toLocaleString","style","currency","getHouse","getHouseData","houseId","disabled","houseData","houseUploaded","admin","addHouse","handleHouseData","englishDescription","españolDescription","berdrooms","Dragger","Upload","uploaded","setUploaded","handleUpload","number","console","log","file","fileList","accept","setType","typeInput","economicProfile","setLoading","doc","contact1Name","contact1Address","contact1Phone","contact2Name","contact2Address","contact2Phone","contact3Name","contact3Address","contact3Phone","contact4Name","contact4Address","contact4Phone","marginBottom","TextArea","rows","Panel","Collapse","defaultActiveKey","header","PrivateRoute","path","component","remainingProps","AdminRoute","AuthRoute","checkSession","jwt","Login","RegisterFormLayout","exact","ForgotPassword","ForgotPasswordToken","Profile","ChooseHouse","BuyHouse","UserData","Documentation","Finance","FinantialProfilesData","FinancialForm","InteriorDesign","PropietaryService","FAQ","FaqInfo","Help","AddHouse","Content","Layout","App","Boolean","window","hostname","rootReducer","combineReducers","appReducer","userReducer","dataReducer","adminReducer","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","thunk","process","createStore","applyMiddleware","store","generateStore","WithRouter","WithStore","WithCookies","CookiesProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.160dc355.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nlet url = 'http://localhost:3000'\r\n// let url = 'https://app.puntapiedra.com'\r\n\r\n// AUTH\r\nexport let signup = data => axios.post(`${url}/auth/signup`, data)\r\nexport let login = data => axios.post(`${url}/auth/login`, data)\r\nexport let token = data => axios.post(`${url}/auth/token`, data)\r\nexport let checkCode = data => axios.post(`${url}/auth/checkCode`, data)\r\nexport let changePassword = data => axios.post(`${url}/auth/changePassword`, data)\r\nexport let updateUser = data => axios.post(`${url}/auth/updateUser`, data)\r\nexport let logout = () => axios.get(`${url}/auth/logout`)\r\n\r\n// ADMIN\r\nexport let addHouse = data => axios.post(`${url}/admin/addHouse`, data)\r\nexport let getHouse = data => axios.post(`${url}/admin/getHouse`, data)\r\n\r\n// DATA\r\nexport let getData = data => axios.post(`${url}/data/getData`, data)\r\nexport let getHouseData = data => axios.post(`${url}/data/getHouse`, data)","import { signup, login, logout, token, checkCode, changePass, changePassword} from \"../services/api\"\r\nimport { Cookies } from \"react-cookie\"\r\n\r\nlet initialData = {\r\n    fetching: true,\r\n    info: {},\r\n    error: {},\r\n    logged: new Cookies().get('id') ? true : false,\r\n    tokenSent: false,\r\n    validCode: false,\r\n    passwordChanged: false\r\n}\r\n\r\nlet LOGIN = 'LOGIN'\r\nlet LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nlet LOGIN_ERROR = 'LOGIN_ERROR'\r\n\r\nlet SIGNUP = 'SIGNUP'\r\nlet SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nlet SIGNUP_ERROR = 'SIGNUP_ERROR'\r\n\r\nlet SEND_TOKEN = 'SEND_TOKEN'\r\nlet SEND_TOKEN_SUCCESS = 'SEND_TOKEN_SUCCESS'\r\nlet SEND_TOKEN_ERROR = 'SEND_TOKEN_ERROR'\r\n\r\nlet CHECK_CODE = 'CHECK_CODE'\r\nlet CHECK_CODE_SUCCESS = 'CHECK_CODE_SUCCESS'\r\nlet CHECK_CODE_ERROR = 'CHECK_CODE_ERROR'\r\n\r\nlet CHANGE_PASSWORD = 'CHANGE_PASSWORD'\r\nlet CHANGE_PASSWORD_SUCCESS = 'CHANGE_PASSWORD_SUCCESS'\r\nlet CHANGE_PASSWORD_ERROR = 'CHANGE_PASSWORD_ERROR'\r\n\r\nlet LOGOUT = 'LOGOUT'\r\n\r\nlet CHECK_SESSION = 'CHECK_SESSION'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n\r\n        case LOGIN:\r\n            return {...state, fetching: true, info: initialData.info, error: {}}\r\n        case LOGIN_SUCCESS:\r\n            return {...state, fetching: false}\r\n        case LOGIN_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case SIGNUP:\r\n            return {...state, fetching: true, info: initialData.info, error: {}}\r\n        case SIGNUP_SUCCESS:\r\n            return {...state, fetching: false}\r\n        case SIGNUP_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case SEND_TOKEN:\r\n            return {...state, tokenSent: false, fetching: true, error: {}}\r\n        case SEND_TOKEN_SUCCESS:\r\n            return {...state, tokenSent: true, fetching: false}\r\n        case SEND_TOKEN_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case CHECK_CODE:\r\n            return {...state, validCode: false, fetching: true, error: {}}\r\n        case CHECK_CODE_SUCCESS:\r\n            return {...state, validCode: true, fetching: false}\r\n        case CHECK_CODE_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case CHANGE_PASSWORD:\r\n            return {...state, passwordChanged: false, fetching: true, error: {}}\r\n        case CHANGE_PASSWORD_SUCCESS:\r\n            return {...state, passwordChanged: true, fetching: false}\r\n        case CHANGE_PASSWORD_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case LOGOUT:\r\n            return {...state, info: initialData.info, logged: false}\r\n\r\n        case CHECK_SESSION:\r\n            return {...state, logged: action.payload.logged, info: action.payload.info, fetching: action.payload.fetching}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let changePasswordAction = password => dispatch => {\r\n    let email = new Cookies().get('recoveryEmail')\r\n    if(!email) dispatch({\r\n        type: CHANGE_PASSWORD_ERROR,\r\n        payload: {status: 404}\r\n    })\r\n    dispatch({\r\n        type: CHANGE_PASSWORD\r\n    })\r\n    changePassword({...email, password})\r\n        .then(res => dispatch({\r\n            type: CHANGE_PASSWORD_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: CHANGE_PASSWORD_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let checkTokenAction = token => dispatch => {\r\n    let email = new Cookies().get('recoveryEmail')\r\n    if(!email) dispatch({\r\n        type: CHECK_CODE_ERROR,\r\n        payload: {status: 404}\r\n    })\r\n    dispatch({\r\n        type: CHECK_CODE\r\n    })\r\n    checkCode({token})\r\n        .then(res => dispatch({\r\n            type: CHECK_CODE_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: CHECK_CODE_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let sendTokenAction = email => dispatch => {\r\n    new Cookies().set('recoveryEmail', email, {maxAge: 60 * 60 * 2})\r\n    dispatch({\r\n        type: SEND_TOKEN\r\n    })\r\n    token({email})\r\n        .then(res => dispatch({\r\n            type: SEND_TOKEN_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: SEND_TOKEN_ERROR,\r\n            payload: err.response\r\n        }))\r\n} \r\n\r\nexport let signupAction = signupData => dispatch => {\r\n    dispatch({\r\n        type: SIGNUP\r\n    })\r\n    signup(signupData)\r\n        .then(res => {\r\n            let { data } = res\r\n            new Cookies().set('id', data.token, {maxAge: 60 * 60 * 24})\r\n            new Cookies().set('user', data.userInfo, {maxAge: 60 * 60 * 24})\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS\r\n            })\r\n            dispatch({\r\n                type: CHECK_SESSION,\r\n                payload: {logged: true, info: data.userInfo, fetching: false}\r\n            })\r\n            token({email: signupData.email})\r\n        })\r\n        .catch(err => dispatch({\r\n            type: SIGNUP_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let checkSessionAction = () => dispatch => {\r\n    let jwt = new Cookies().get('id')\r\n    let user = new Cookies().get('user')\r\n    if(jwt){ \r\n        user && dispatch({\r\n            type: CHECK_SESSION,\r\n            payload: {logged: true, info: user, fetching: false}\r\n        })\r\n        return\r\n    }\r\n    return dispatch({\r\n        type: CHECK_SESSION,\r\n        payload: {logged: false, info: {}, fetching: false}\r\n    })\r\n}\r\n\r\nexport let loginAction = userData => dispatch => {\r\n    dispatch({\r\n        type: LOGIN\r\n    })\r\n    login(userData)\r\n        .then(res => {\r\n            let { data } = res\r\n            new Cookies().set('id', data.token, {maxAge: 60 * 60 * 24})\r\n            new Cookies().set('user', data.userInfo, {maxAge: 60 * 60 * 24})\r\n            dispatch({\r\n                type: LOGIN_SUCCESS\r\n            })\r\n            dispatch({\r\n                type: CHECK_SESSION,\r\n                payload: {logged: true, info: data.userInfo, fetching: false}\r\n            })\r\n        })\r\n        .catch(err => dispatch({\r\n            type: LOGIN_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let logoutAction = () => dispatch => {\r\n    logout()\r\n    new Cookies().remove('id')\r\n    new Cookies().remove('user')\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}","export default {\r\n    roles: {\r\n        buyer: {\r\n            english: 'BUYER',\r\n            español: 'COMPRADOR'\r\n        },\r\n        seller: {\r\n            english: 'SELLER',\r\n            español: 'VENDEDOR'\r\n        },\r\n        agent: {\r\n            english: 'AGENT',\r\n            español: 'REPRESENTANTE'\r\n        },\r\n        serviceProvider: {\r\n            english: 'SERVICE PROVIDER',\r\n            español: 'PROVEEDOR DE SERVICIO'            \r\n        }\r\n    },\r\n    form: {\r\n        required: {\r\n            english: 'Required',\r\n            español: 'Requerido'\r\n        },\r\n        forgotPassword: {\r\n            english: 'FORGOT YOUR PASSWORD?',\r\n            español: '¿OLVIDASTE TU CONTRASEÑA?'\r\n        },\r\n        forgotPasswordLink: {\r\n            english: 'CLICK HERE',\r\n            español: 'HAZ CLICK AQUÍ'\r\n        },\r\n        register: {\r\n            english: \"STILL DON'T HAVE AN ACCOUNT?\",\r\n            español: '¿AÚN NO TIENES UNA CUENTA?'\r\n        },\r\n        registerLink: {\r\n            english: 'REGISTER HERE',\r\n            español: 'REGÍSTRATE AQUÍ'\r\n        }\r\n    },\r\n    button: {\r\n        send: {\r\n            english: 'SEND',\r\n            español: 'ENVIAR'\r\n        },\r\n        next: {\r\n            english: 'NEXT',\r\n            español: 'SIGUIENTE'\r\n        },\r\n        login: {\r\n            english: 'LOGIN',\r\n            español: 'INICIAR SESIÓN'\r\n        },\r\n        register: {\r\n            english: 'REGISTER',\r\n            español: 'REGISTRARME'\r\n        },\r\n        return: {\r\n            english: 'Return',\r\n            español: 'Regresar'\r\n        },\r\n        update: {\r\n            english: 'UPDATE',\r\n            español: 'ACTUALIZAR'\r\n        },\r\n        continue: {\r\n            english: 'CONTINUE',\r\n            español: 'CONTINUAR'\r\n        },\r\n        returnCaps: {\r\n            english: 'RETURN',\r\n            español: 'REGRESAR'\r\n        },\r\n        approve: {\r\n            english: 'APPROVE',\r\n            español: 'APROBAR'\r\n        },\r\n        save: {\r\n            english: 'SAVE',\r\n            español: 'GUARDAR'\r\n        },\r\n        preview: {\r\n            english: 'PREVIEW',\r\n            español: 'VISTA PREVIA'\r\n        },\r\n        print: {\r\n            english: 'PRINT',\r\n            español: 'IMPRIMIR'\r\n        }\r\n    },\r\n    messages: {\r\n        missingFields: {\r\n            english: 'You must fill all the inputs',\r\n            español: 'Debes llenar todos los campos'\r\n        },\r\n        missingSelection: {\r\n            english: 'You must select an option',\r\n            español: 'Debes seleccionar una opción'\r\n        },\r\n        incorrectEmail: {\r\n            english: 'Please type a valid email',\r\n            español: 'Por favor ingresa un correo válido'\r\n        },\r\n        incorrectPassword: {\r\n            english: 'Your password must have at least 6 characters and 1 number',\r\n            español: 'Tu contraseña debe tener al menos 6 caracteres y 1 número'\r\n        },\r\n        repeatedPasswordError: {\r\n            english: \"The passwords don't match\",\r\n            español: 'Las contraseñas no coinciden'\r\n        },\r\n        consent: {\r\n            english: 'You must confirm that the information is real',\r\n            español: 'Debes confirmar que tus datos son reales'\r\n        },\r\n        wrongPassword: {\r\n            english: 'Incorrect password',\r\n            español: 'Contraseña incorrecta'\r\n        },\r\n        requestError: {\r\n            english: 'We could not complete your request',\r\n            español: 'No pudimos completar tu solicitud'\r\n        },\r\n        enterTokenError: {\r\n            english: 'Incorrect code',\r\n            español: 'Código incorrecto' \r\n        },\r\n        dataUpdated: {\r\n            english: 'Data updated',\r\n            español: 'Información actualizada'\r\n        }\r\n    },\r\n    responses: {\r\n        yes: {\r\n            english: 'YES',\r\n            español: 'SI'\r\n        },\r\n        no: {\r\n            english: 'NO',\r\n            español: 'NO'\r\n        }\r\n    },\r\n    navbar: {\r\n        index: {\r\n            english: 'HOME',\r\n            español: 'INICIO'\r\n        },\r\n        aboutUs: {\r\n            english: 'ABOUT US',\r\n            español: 'SOBRE NOSOTROS'\r\n        },\r\n        amenities: {\r\n            english: 'AMENITIES',\r\n            español: 'AMENIDADES'\r\n        },\r\n        contact: {\r\n            english: 'CONTACT US',\r\n            español: 'CONTACTO'\r\n        }\r\n    },\r\n    login: {\r\n        portalTitle: {\r\n            english: 'CUSTOMER PORTAL',\r\n            español: 'PORTAL DE CLIENTES'\r\n        },\r\n        portalSubtitle: {\r\n            english: 'LOGIN',\r\n            español: 'INICIAR SESIÓN'\r\n        },\r\n        emailPlaceholder : {\r\n            english: 'WRITE YOUR EMAIL',\r\n            español: 'ESCRIBE TU EMAIL'\r\n        },\r\n        passwordPlaceholder : {\r\n            english: 'WRITE YOUR PASSWORD',\r\n            español: 'ESCRIBE TU CONTRASEÑA'\r\n        },\r\n    },\r\n    register: {\r\n        portalTitle: {\r\n            english: 'CUSTOMER PORTAL',\r\n            español: 'PORTAL DE CLIENTES'\r\n        },\r\n        portalSubtitleBuyer: {\r\n            english: 'BUYER REGISTER',\r\n            español: 'REGISTRO DE COMPRADOR'\r\n        },\r\n        portalSubtitleSeller: {\r\n            english: 'SELLER REGISTER',\r\n            español: 'REGISTRO DE VENDEDOR'\r\n        },\r\n        portalSubtitleAgent: {\r\n            english: 'AGENT REGISTER',\r\n            español: 'REGISTRO DE AGENTE'\r\n        },\r\n        portalSubtitleProvider: {\r\n            english: 'SERVICE PROVIDER REGISTER',\r\n            español: 'REGISTRO DE PROVEEDOR DE SERVICIOS'\r\n        },\r\n        login: {\r\n            english: \"HAVE AN ACCOUNT?\",\r\n            español: '¿YA TIENES UNA CUENTA?'\r\n        },\r\n        loginLink: {\r\n            english: 'LOGIN',\r\n            español: 'INICIA SESIÓN'\r\n        },\r\n        firstName: {\r\n            english: 'NAME',\r\n            español: 'NOMBRE'\r\n        },\r\n        lastName: {\r\n            english: 'LAST NAME',\r\n            español: 'APELLIDO PATERNO'\r\n        },\r\n        secondLastName : {\r\n            español: 'APELLIDO MATERNO'\r\n        },\r\n        company: {\r\n            english: 'WRITE THE NAME OF THE COMPANY YOU REPRESENT',\r\n            español: 'ESCRIBE EL NOMBRE DE LA COMPAÑÍA QUE REPRESENTAS'\r\n        },\r\n        email: {\r\n            english: 'WRITE YOUR EMAIL',\r\n            español: 'ESCRIBE TU EMAIL'\r\n        },\r\n        phone: {\r\n            english: 'WRITE YOUR PHONE',\r\n            español: 'ESCRUBE TU TELÉFONO'\r\n        },\r\n        beneficiary: {\r\n            english: 'DO YOU WANT TO ADD A BENEFICIARY?',\r\n            español: '¿DESEAS AÑADIR UN BENEFICIARIO?'\r\n        },\r\n        beneficiaryTitle: {\r\n            english: 'BENEFICIARY DATA',\r\n            español: 'DATOS DEL BENEFICIARIO'\r\n        },\r\n        beneficiaryEmail: {\r\n            english: 'EMAIL',\r\n            español: 'SU EMAIL'\r\n        },\r\n        beneficiaryPhone: {\r\n            english: 'PHONE',\r\n            español: 'TELÉFONO'\r\n        },\r\n        selectAgent: {\r\n            english: 'SELECT YOUR AGENT',\r\n            español: 'SELECCIONA TU AGENTE'\r\n        },\r\n        password: {\r\n            english: 'CHOOSE A SECURE PASSWORD',\r\n            español: 'ELIGE UNA CONTRASEÑA SEGURA'\r\n        },\r\n        repeatPassword: {\r\n            english: 'REPEAT YOUR PASSWORD',\r\n            español: 'REPITE TU CONTRASEÑA'\r\n        },\r\n        confirm: {\r\n            english: 'I CONFIRM THAT MY INFORMATION IS REAL',\r\n            español: 'CONFIRMO QUE MIS DATOS SON REALES'\r\n        },\r\n        allowNewsletter: {\r\n            english: 'I WANT TO RECEIVE NEWS BY EMAIL',\r\n            español: 'QUIERO RECIBIR NOVEDADES POR EMAIL'\r\n        },\r\n        signLinkBuyer: {\r\n            english: 'REGISTER AS A BUYER',\r\n            español: 'REGISTRARME COMO COMPRADOR'\r\n        },\r\n        signLinkAgent: {\r\n            english: 'REGISTER AS AN AGENT',\r\n            español: 'REGISTRARME COMO AGENTE'\r\n        },\r\n        signLinkProvider: {\r\n            english: 'REGISTER AS A SERVICE PROVIDER',\r\n            español: 'REGISTRARME COMO PROVEEDOR DE SERVICIOS'\r\n        },\r\n        forgotSubtitle: {\r\n            english: 'RECOVER PASSWORD',\r\n            español: 'RECUPERAR CONTRASEÑA'\r\n        },\r\n        wantFinance: {\r\n            english: 'ARE YOU LOOKING FOR FINANCING?',\r\n            español: '¿BUSCAS FINANCIAMIENTO?'\r\n        }\r\n    },\r\n    recoverPassword: {\r\n        title: {\r\n            english: 'TROUBLE TO SIGN IN?',\r\n            español: '¿PROBLEMAS PARA INGRESAR?'\r\n        },\r\n        message: {\r\n            english: 'ENTER YOUR EMAIL AND WE WILL SEND YOU INSTRUCTIONS TO RECOVER YOUR PASSWORD',\r\n            español: 'CONFIRMA TU EMAIL Y TE ENVIAREMOS INSTRUCCIONES PARA REESTABLECER TU CONTRASEÑA'\r\n        },\r\n        successEmail: {\r\n            english: 'Email sent, please check your inbox',\r\n            español: 'Email enviado, por favor revisa tu bandeja de entrada'\r\n        },\r\n        successToken: {\r\n            english: 'Valid code',\r\n            español: 'Código válido'\r\n        },\r\n        recoverMessage: {\r\n            english: 'RECOVER PASSWORD',\r\n            español: 'RECUPERAR CONTRASEÑA'\r\n        },\r\n        enterToken: {\r\n            english: 'ENTER THE 4 DIGIT CODE',\r\n            español: 'INGRESA EL CÓDIGO DE 4 DÍGITOS'\r\n        },\r\n        enterNewPassword: {\r\n            english: 'ENTER YOUR NEW PASSWORD',\r\n            español: 'ESCRIBE TU NUEVA CONTRASEÑA'\r\n        },\r\n        pwdIndicator: {\r\n            english: 'The password must have at least 6 characters and 1 number',\r\n            español: 'La contraseña debe tener al menos 6 caracteres y 1 número'\r\n        },\r\n        pwdError: {\r\n            english: 'Enter a valid password',\r\n            español: 'Ingresa una contraseña válida'\r\n        },\r\n        pwdSuccess: {\r\n            english: 'Password changed successfully',\r\n            español: 'Contraseña actualizada correctamente'\r\n        },\r\n        redirect: {\r\n            english: 'Redirecting to login...',\r\n            español: 'Redirigiendo al inicio de sesión...'\r\n        }\r\n    },\r\n    sidebar: {\r\n        profile: {\r\n            english: 'Profile',\r\n            español: 'Perfil'\r\n        },\r\n        chooseHouse: {\r\n            english: 'Choose house',\r\n            español: 'Elegir casa'\r\n        },\r\n        buyHouse: {\r\n            english: 'Buy house',\r\n            español: 'Comprar casa'\r\n        },\r\n        data: {\r\n            english: 'Data',\r\n            español: 'Datos'\r\n        },\r\n        documentation: {\r\n            english: 'Documentation',\r\n            español: 'Documentación'\r\n        },\r\n        financing: {\r\n            english: 'Financing',\r\n            español: 'Financiamiento'\r\n        },\r\n        interiorDesign: {\r\n            english: 'Interior design',\r\n            español: 'Diseño del interior'\r\n        },\r\n        propietaryService: {\r\n            english: 'Propietary service',\r\n            español: 'Servicios para propietarios'\r\n        },\r\n        faq: {\r\n            english: 'FAQs',\r\n            español: 'Preguntas frecuentes'\r\n        },\r\n        help: {\r\n            english: 'Help',\r\n            español: 'Ayuda'\r\n        }\r\n    },\r\n    sidebarSubtitle: {\r\n        profile: {\r\n            english: \"Let's start updating your profile\",\r\n            español: '¿Comenzamos a configurar tu perfil?'\r\n        },\r\n        chooseHouse: {\r\n            english: \"It's time to choose your new house\",\r\n            español: 'Es momento de elegir tu nueva casa'\r\n        },\r\n        buyHouse: {\r\n            english: \"Let's acquire your new property\",\r\n            español: 'Vamos a adquirir tu neuvo inmueble'\r\n        },\r\n        data: {\r\n            english: \"finish your profile\",\r\n            español: 'termina tu perfil'\r\n        },\r\n        documentation: {\r\n            english: 'Register your info and documents',\r\n            español: 'Registra tus datos y documentos'\r\n        },\r\n        financing: {\r\n            english: 'Choose your economic profile',\r\n            español: 'Elige tu perfil económico'\r\n        },\r\n        interiorDesign: {\r\n            english: 'Choose your new house options',\r\n            español: 'Elige las opciones de tu nueva casa'\r\n        },\r\n        propietaryService: {\r\n            english: 'Propietary service',\r\n            español: 'Servicios para propietarios'\r\n        },\r\n        faq: {\r\n            english: 'FAQs',\r\n            español: 'Preguntas frecuentes'\r\n        },\r\n        help: {\r\n            english: 'Help',\r\n            español: 'Ayuda'\r\n        }\r\n    },\r\n    profile: {\r\n        beneficiaryTitle: {\r\n            english: 'BENEFICIARY 1 (LEAVE EMPTY IF NOT APPLICABLE)',\r\n            español: 'BENEFICIARIO 1 (DEJA EN BLANCO SI NO APLICA)'\r\n        },\r\n        country: {\r\n            english: 'COUNTRY',\r\n            español: 'PAÍS'\r\n        },\r\n        state: {\r\n            english: 'STATE',\r\n            español: 'ESTADO'\r\n        },\r\n        birthDate:{\r\n            english: 'BIRTH DATE',\r\n            español: 'FECHA DE NACIMIENTO'\r\n        }\r\n    },\r\n    chooseHouse: {\r\n        inputLotNumber: {\r\n            english: 'LOT NUMBER',\r\n            español: 'NÚMERO DE LOTE'\r\n        },\r\n        inputLotSize: {\r\n            english: 'LOT SIZE',\r\n            español: 'TAMAÑO DE LOTE'\r\n        },\r\n        inputLotModel: {\r\n            english: 'CHOOSE A MODEL',\r\n            español: 'ELIGE MODELO DE CASA'\r\n        },\r\n        addLot: {\r\n            english: 'ADDITIONAL LOT',\r\n            español: 'LOTE ADICIONAL'\r\n        },\r\n        forSale: {\r\n            english: 'HOMES FOR SALE',\r\n            español: 'CASAS EN VENTA'\r\n        },\r\n        occupied: {\r\n            english: 'SOLD',\r\n            español: 'VENDIDO'\r\n        }\r\n    },\r\n    buyHouse: {\r\n        titlePrice: {\r\n            english: 'From',\r\n            español: 'Desde'\r\n        },\r\n        available: {\r\n            english: 'AVAILABLE',\r\n            español: 'DISPONIBLE'\r\n        },\r\n        notAvailable: {\r\n            english: 'NOT AVAILABLE',\r\n            español: 'NO DISPONIBLE'\r\n        },\r\n        bedrooms: {\r\n            english: 'bedrooms',\r\n            español: 'recámaras'    \r\n        },\r\n        bathrooms: {\r\n            english: 'bathrooms',\r\n            español: 'baños'    \r\n        },\r\n        cars: {\r\n            english: 'cars',\r\n            español: 'automóviles'    \r\n        },\r\n        price: {\r\n            english: 'Price',\r\n            español: 'Precio'\r\n        },\r\n        remember: {\r\n            english: 'REMEMBER',\r\n            español: 'RECUERDA'\r\n        },\r\n        docsDescription: {\r\n            english: 'Before the purchase, check that you have the following documents at hand:',\r\n            español: 'Antes de comenzar tu compra verifica que tengas al alcance estos datos y documentos:'\r\n        },\r\n        doc1: {\r\n            english: 'Passport',\r\n            español: 'Pasaporte'\r\n        },\r\n        doc2: {\r\n            english: \"Driver licence\",\r\n            español: 'Licencia de manejo'\r\n        },\r\n        doc3: {\r\n            english: 'Proof of address',\r\n            español: 'Comprobante de domicilio'\r\n        },\r\n        doc4: {\r\n            english: 'Social Security Number',\r\n            español: 'Número de seguridad social'\r\n        },\r\n        approveTitle: {\r\n            english: 'MANDATORY APPROVAL',\r\n            español: 'APROBACIONES NECESARIAS'\r\n        },\r\n        approvalDescription: {\r\n            english: 'You must approve the next elements to continue:',\r\n            español: 'Para continuar necesitas aprobar los siguientes elementos:'\r\n        },\r\n        firstApproval: {\r\n            english: 'Yes, I approve the blueprint',\r\n            español: 'Sí, apruebo los planos'\r\n        },\r\n        secondApproval: {\r\n            english: 'Yes, I approve the price',\r\n            español: 'Sí, apruebo este precio'\r\n        },\r\n        activeProcess: {\r\n            english: 'THIRD-PARTY ACTIVE PROCESS:',\r\n            español: 'PROCESOS ACTIVOS DE TERCEROS:'\r\n        }\r\n    },\r\n    userData: {\r\n        ssn: {\r\n            english: \"WRITE YOUR SSN\",\r\n            español: 'ESCRIBE TU NÚMERO DE SEGURIDAD SOCIAL'\r\n        },\r\n        civilStatus: {\r\n            english: 'CIVIL STATUS',\r\n            español: 'ESTADO CIVIL'\r\n        },\r\n        occupation: {\r\n            english: 'OCCUPATION',\r\n            español: 'OCUPACIÓN'\r\n        },\r\n        position: {\r\n            english: 'POSITION',\r\n            español: 'POSICIÓN'\r\n        },\r\n        company: {\r\n            english: 'COMPANY (CLARIFY IF SELF EMPLOYED)',\r\n            español: 'EMPRESA (ACLARAR SI ES AUTOEMPLEADO)'\r\n        },\r\n        officePhone: {\r\n            english: 'OFFICE PHONE',\r\n            español: 'TELÉFONO DE LA OFICINA'\r\n        },\r\n        occupationEx: {\r\n            english: 'Example: \"Civil Engineer\"',\r\n            español: 'Ejemplo: \"Ingeniero Civil\"'\r\n        },\r\n        companyEx: {\r\n            english: 'Example: \"Company Inc.\" or \"Self employed\"',\r\n            español: 'Ejemplo: \"Empresa S.A. de C.V. o Autoempleado\"'\r\n        },\r\n        positionEx: {\r\n            english: 'Example: \"Operations Director\"',\r\n            español: 'Ejemplo: \"Director de Operaciones\"'\r\n        }\r\n    },\r\n    documentation: {\r\n        mbText: {\r\n            english: 'The file must be less than 10MB',\r\n            español: 'El archivo no debe pesar más de 10MB'\r\n        },\r\n        blowseButon: {\r\n            english: 'BROWSE',\r\n            español: 'BUSCAR'\r\n        },\r\n        firstDoc: {\r\n            title: {\r\n                english: 'PASSPORT',\r\n                español: 'PASAPORTE'\r\n            },\r\n            inst: {\r\n                english: 'Drop here an image or PDF of your passport.',\r\n                español: 'Arrastra aquí una imagen o PDF de tu pasaporte.'\r\n            }\r\n        },\r\n        secondDoc: {\r\n            title: {\r\n                english: \"DRIVERS LICENSE\",\r\n                español: 'LICENCIA DE MANEJO'\r\n            },\r\n            inst: {\r\n                english: 'Drop here an image or PDF of your divers licence.',\r\n                español: 'Arrastra aquí una imagen o PDF de tu licencia de manejo.'\r\n            }\r\n        },\r\n        thirdDoc: {\r\n            title: {\r\n                english: 'PROOF OF ADDRESS',\r\n                español: 'COMPROBANTE DE DOMICILIO'\r\n            },\r\n            inst: {\r\n                english: 'Drop here an image or PDF of your proof of address.',\r\n                español: 'Arrastra aquí una imagen o PDF de tu comprobante de domicilio.'\r\n            }\r\n        }\r\n    },\r\n    financing: {\r\n        nationalSalaried: {\r\n            english: 'NATIONAL ECONOMY (SALARIED)',\r\n            español: 'ECONOMÍA NACIONAL (ASALARIADO)'\r\n        },\r\n        nationalIndependent: {\r\n            english: 'NATIONAL ECONOMY (INDEPENDENT)',\r\n            español: 'ECONOMÍA NACIONAL (INDEPENDIENTE)'\r\n        },\r\n        northAmericanSalaried: {\r\n            english: 'AMERICAN ECONOMY (SALARIED)',\r\n            español: 'ECONOMÍA AMERICANA (ASALARIADO)'\r\n        },\r\n        northAmericanIndependent: {\r\n            english: 'AMERICAN ECONOMY (SALARIED)',\r\n            español: 'ECONOMÍA AMERICANA (ASALARIADO)'\r\n        },\r\n        foreign: {\r\n            english: 'FOREIGN, WANTS TO BUY IN MEXICO',\r\n            español: 'EXTRANJERO, QUIERE COMPRAR EN MÉXICO'\r\n        },\r\n        company: {\r\n            english: 'COMANY OR CORPORATE',\r\n            español: 'EMPRESA O CORPORATIVO'\r\n        },\r\n        putDataTitle: {\r\n            english: 'PUT YOUR FINANCIAL DATA',\r\n            español: 'COLOCA TUS DATOS FINANCIEROS'\r\n        },\r\n        viewDocsButton: {\r\n            english: 'VIEW DOCUMENTS',\r\n            español: 'VER DOCUMENTOS'\r\n        },\r\n        changeProfile: {\r\n            english: 'Change my financial profile',\r\n            español: 'Cambiar mi perfi financiero'\r\n        },\r\n        nationalSalariedDocs: [\r\n            {\r\n                english: 'Last 3 months payroll',\r\n                español: 'Las nóminas de los últimos 3 meses'\r\n            },\r\n            {\r\n                english: 'Last 3 statements, where your payroll is deposited',\r\n                español: 'Los últimos 3 estados de cuenta, donde le depositan su nómina'\r\n            },\r\n            {\r\n                english: 'Credit report (Valid for no more than 1 month)',\r\n                español: 'Reporte de crédito (Vigencia no mayor a 1 mes)'\r\n            },\r\n        ],\r\n        nationalIndependentDocs: [\r\n            {\r\n                english: 'Proof of fiscal situation (tax registration with current printing, no more than 2 months) that has at least 3 years in the activity reported in the certificate',\r\n                español: 'Constancia de situacion fiscal (alta de hacienda con impresión vigente,no mayor a 2 meses) que por lo menos tenga 3 años en la actividad que reporta en la constancia'\r\n            },\r\n            {\r\n                english: 'Statements of the last 6 months, if you have multiple accounts It does not matter since there must be 6 of each account that reports',\r\n                español: 'Estados de cuenta de los últimos 6 meses, si tiene varias cuentas no importa ya que deben de ser 6 de cada cuenta que reporte'\r\n            },\r\n            {\r\n                english: 'Annual return for the immediately preceding year, if you are a merchant and pay taxes bimonthly for the last 6.',\r\n                español: 'Declaración anual del año anterior inmediato, si es comerciante y paga impuestos de forma bimestral los últimos 6.'\r\n            },\r\n        ],\r\n        americanSalariedDocs: [\r\n            {\r\n                english: 'Last 3 months payroll',\r\n                español: 'Las nóminas de los últimos 3 meses'\r\n            },\r\n            {\r\n                english: 'Last 3 statements, where your payroll is deposited',\r\n                español: 'Los últimos 3 estados de cuenta, donde le depositan su nómina'\r\n            },\r\n            {\r\n                english: 'Credit report with Fico Score (valid for no more than one month), deals with any of these: TRANSUNION, CREDIT KARMA or EQUIFAX EXPERIAN; The one with the highest score will be used, in Mexico it must be greater than 640 score for a capacity of 70% of credit, the higher the score, the more capacity it can receive from the banks.',\r\n                español: 'Reporte de crédito con Fico Score (vigencia no mayor a un mes), se ocupa alguno de estos: TRANSUNION, CREDIT KARMA o EQUIFAX EXPERIAN; se utilizará aquel que tenga el score más alto, en México debe ser mayor al 640 de score para un aforo del 70% de credito, entre más alto el score más aforo puede recibir de los bancos.'\r\n            },\r\n        ],\r\n        americanIndependentDocs: [\r\n            {\r\n                english: 'Permit of your business or activity updated by the state where you reside',\r\n                español: 'Permiso de su negocio o actividad actualizado por parte del estado donde radique'\r\n            },\r\n            {\r\n                english: 'Statements of the last 6 months, if you have multiple accounts It does not matter since there must be 6 of each account that reports',\r\n                español: 'Estados de cuenta de los últimos 6 meses, si tiene varias cuentas no importa ya que deben de ser 6 de cada cuenta que reporte'\r\n            },\r\n            {\r\n                english: 'Credit report with Fico Score (valid for no more than one month), deals with any of these: TRANSUNION, CREDIT KARMA or EQUIFAX EXPERIAN; The one with the highest score will be used, in Mexico it must be greater than 640 score for a capacity of 70% of credit, the higher the score, the more capacity it can receive from the banks.',\r\n                español: 'Reporte de crédito con Fico Score (vigencia no mayor a un mes), se ocupa alguno de estos: TRANSUNION, CREDIT KARMA o EQUIFAX EXPERIAN; se utilizará aquel que tenga el score más alto, en México debe ser mayor al 640 de score para un aforo del 70% de credito, entre más alto el score más aforo puede recibir de los bancos.'\r\n            },\r\n        ],\r\n        foreignDocs: [\r\n            {\r\n                english: 'Temporary or permanent residence.',\r\n                español: 'Residencia temporal o permanente.'\r\n            },\r\n            {\r\n                english: 'Proof of income.',\r\n                español: 'Comprobante de ingresos.'\r\n            },\r\n            {\r\n                english: 'In case you do not have the residence, you can make a trust so that you can buy, in the border area it is required to do so by the laws of the coast and borders, for this you have to ask the client if he wants to have the residence, to process it Secretary of Foreign Relations, we have managers who can help (at cost to the client), since if it is not subject to credit, it is unnecessary to do the other procedures.',\r\n                español: 'En caso de que no tenga la residencia se puede hacer un fideicomiso para que pueda comprar, en la zona fronteriza es obligado hacerlo por las leyes de litorales y fronteras, para ello hay que preguntarle al cliente si desea tener la residencia, a tramitar ante la Secretaria de Relaciones Exteriores, contamos con gestores que pueden ayudar (con costo para el cliente), ya que si no es sujeto a crédito es innecesario hacer los demas tramites.'\r\n            },\r\n        ],\r\n        companyDocs: [\r\n            {\r\n                english: 'Articles of Incorporation',\r\n                español: 'Artículos de incorporación'\r\n            },\r\n            {\r\n                english: 'Business permit.',\r\n                español: 'Permiso del negocio.'\r\n            },\r\n            {\r\n                english: 'Last 2 years of income tax of the company.',\r\n                español: 'Últimos 2 años de Income tax de la empresa.'\r\n            },\r\n            {\r\n                english: 'Account statements for the last 6 months of the company.',\r\n                español: 'Estados de cuenta de los últimos 6 meses de la empresa.'\r\n            },\r\n        ]\r\n    },\r\n    financingForm: {\r\n        title: {\r\n            english: 'CREDIT REQUEST, EACH PARTICIPANT WILL SIGN THE FORMAT TO AUTHORIZE FOR THE CONSULTATION TO THE CREDIT BUREAU BY DUPLICATE AND REFERENCE FORMAT',\r\n            español: 'SOLICITUD DE CREDITO, CADA PARTICIPANTE FIRMARA EL FORMATO PARA AUTORIZAR PARA LA CONSULTA AL BURO DE CREDITO POR DUPLICADO Y FORMATO DE REFERENCIAS'\r\n        },\r\n        referenceTitle: {\r\n            english: 'PERSONAL REFERENCES 2 FAMILY MEMBERS AND 2 FRIENDSHIPS MUST BE TELEPHONES FROM MEXICO',\r\n            español: 'REFERENCIAS PERSONALES 2 FAMILIARES Y 2 AMISTADES DEBEN SER TELEFONOS DE MEXICO'\r\n        },\r\n        fillInputs: {\r\n            english: 'FILL THE NEXT INPUTS',\r\n            español: 'LLENAR LOS SIGUIENTES ESPACIOS'\r\n        },\r\n        officePhone: {\r\n            english: 'WORK PHONE',\r\n            español: 'TEL. TRABAJO'\r\n        },\r\n        homePhone: {\r\n            english: 'HOME PHONE',\r\n            español: 'TEL. CASA'\r\n        },\r\n        rfc: {\r\n            english: 'RFC',\r\n            español: 'RFC'\r\n        },\r\n        cellPhone: {\r\n            english: 'CELL PHONE',\r\n            español: 'CELULAR'\r\n        },\r\n        email: {\r\n            english: 'EMAIL',\r\n            español: 'EMAIL'\r\n        },\r\n        livingTime: {\r\n            english: 'TIME LIVING IN YOUR HOUSE',\r\n            español: 'TIEMPO HABITANDO SU CASA'\r\n        },\r\n        occupation: {\r\n            english: 'OCCUPATION',\r\n            español: 'PROFESIÓN'\r\n        },\r\n        livesInHouse: {\r\n            english: 'LIVES IN HOUSE',\r\n            español: 'VIVE EN CASA'\r\n        },\r\n        address: {\r\n            english: 'ADDRESS',\r\n            español: 'DOMICILIO PARTICULAR'\r\n        },\r\n        companyName: {\r\n            english: 'COMPANY NAME',\r\n            español: 'NOMBRE DE LA EMPRESA'\r\n        },\r\n        companyField: {\r\n            english: 'COMPANY FIELD',\r\n            español: 'GIRO DE LA EMPRESA'\r\n        },\r\n        companyAddress: {\r\n            english: 'COMPANY ADDRESS',\r\n            español: 'DOMICILIO DE LA EMPRESA'\r\n        },\r\n        companyTime: {\r\n            english: 'YEARS IN THE COMPANY',\r\n            español: 'AÑOS EN LA EMPRESA'\r\n        },\r\n        functionsDescription: {\r\n            english: 'DESCRIBE BRIEFLY YOUR FUNCTIONS',\r\n            español: 'DESCRIBE BREVEMENTE TUS FUNCIONES'\r\n        },\r\n        companyRole: {\r\n            english: 'COMPANY ROLE',\r\n            español: 'PUESTO TRABAJO'\r\n        },\r\n        academicLevel: {\r\n            english: 'ACADEMIC LEVEL',\r\n            español: 'NIVEL ACADÉMICO'\r\n        },\r\n        economicDependants: {\r\n            english: 'ECONOMIC DEPENDANTS',\r\n            español: 'DEPENDIENTES ECONÓMICOS'\r\n        },\r\n        height: {\r\n            english: 'HEIGHT (FT)',\r\n            español: 'ESTATURA (CM)'\r\n        },\r\n        weight: {\r\n            english: 'WEIGHT',\r\n            español: 'PESO'\r\n        },\r\n        ssn: {\r\n            english: 'SSN',\r\n            español: 'NO. IMSS'\r\n        },\r\n        carBrand: {\r\n            english: 'CAR BRAND',\r\n            español: 'AUTOMÓVIL (MARCA)'\r\n        },\r\n        carValue: {\r\n            english: 'ESTIMATED CAR(S) VALUE',\r\n            español: 'VALOR ESTIMADO AUTO(S)'\r\n        },\r\n        realStateNumber: {\r\n            english: 'REAL STATE OWNED (HOUSES, APARTMENTS)',\r\n            español: 'INMUEBLES A SU NOMBRE (CASAS, DEPTOS)'\r\n        },\r\n        realStateValue: {\r\n            english: 'REAL STATE VALUE',\r\n            español: 'VALOR ESTIMADO INMUEBLES'\r\n        },\r\n        contactName: {\r\n            english: 'COMPLETE NAME',\r\n            español: 'NOMBRE COMPLETO'\r\n        },\r\n        contactAddress: {\r\n            english: 'ADDRESS',\r\n            español: 'DIRECCIÓN'\r\n        },\r\n        contactPhone: {\r\n            english: 'PHONE',\r\n            español: 'TELÉFONO'\r\n        },\r\n    },\r\n    propietaryServices: {\r\n        hoa: {\r\n            english: 'HOA',\r\n            español: 'HOA'\r\n        },\r\n        houseCleaning: {\r\n            english: 'HOUSE CLEANING',\r\n            español: 'LIMPIEZA DE CASA'\r\n        },\r\n        manteinanceServices: {\r\n            english: 'MANTEINANCE SERVICES',\r\n            español: 'SERVICIOS DE MANTENIMIENTO'\r\n        },\r\n        cable: {\r\n            english: 'CABLE / INTERNET',\r\n            español: 'CABLE / INTERNET'\r\n        },\r\n        publicServices: {\r\n            english: 'PUBLIC SERVICES',\r\n            español: 'SERVICIOS PÚBLICOS'\r\n        },\r\n        interiorDesign: {\r\n            english: 'INTERIOR DECORATION',\r\n            español: 'DECORACIÓN DE INTERIORES'\r\n        }\r\n    },\r\n    help: {\r\n        title: {\r\n            english: 'DESCRIBE YOUR PROBLEM AND WE WILL BE IN TOUCH',\r\n            español: 'DESCRIBE TU PROBLEMA Y NOS PONDREMOS EN CONTACTO CONTIGO'\r\n        }\r\n    },\r\n    interiorDesign: {\r\n        area: {\r\n            english: 'AREA',\r\n            español: 'AREA'\r\n        },\r\n        options: {\r\n            english: 'OPTIONS',\r\n            español: 'OPCIONES'\r\n        },\r\n        kitchen: {\r\n            english: 'KITCHEN',\r\n            español: 'COCINA'\r\n        },\r\n        livingRoom: {\r\n            english: 'LIVINGROOM',\r\n            español: 'SALA'\r\n        },\r\n        floor: {\r\n            english: 'FLOOR',\r\n            español: 'PISO'\r\n        },\r\n        walls: {\r\n            english: 'WALLS',\r\n            español: 'MUROS'\r\n        }\r\n    }\r\n}","import { Cookies } from \"react-cookie\"\r\n\r\nlet initialData = {\r\n    language: new Cookies().get('language') || 'english'\r\n}\r\n\r\nlet CHANGE_LANG = 'CHANGE_LANG'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        case CHANGE_LANG:\r\n            return {...state, language: action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let changeLangAction = () => (dispatch, getState) => {\r\n    let { language } = getState().app\r\n    new Cookies().set('language', language === 'english' ? 'español' : 'english')\r\n    dispatch({\r\n        type: CHANGE_LANG,\r\n        payload: language === 'english' ? 'español' : 'english'\r\n    })\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { changeLangAction } from '../../redux/appDuck'\r\nimport { logoutAction } from '../../redux/userDuck'\r\nimport { withRouter } from 'react-router-dom'\r\nimport text from '../text'\r\n\r\nconst AuthNav = ({location, language, toggleLanguage, logout}) => {\r\n    return (\r\n        <div className='auth-nav'>\r\n            <div className=\"top-nav\">\r\n                <img src=\"/img/navbar/lupa.svg\" alt=\"lupa\"/>\r\n                <img src=\"/img/navbar/notify.svg\" alt=\"notify\"/>\r\n                <img onClick={logout} src=\"/img/navbar/profile.svg\" alt=\"profile\"/>\r\n                <p className='language-selector' onClick={toggleLanguage}>\r\n                    {language}\r\n                </p>\r\n            </div>\r\n            <div className=\"left-nav\">\r\n                <img className='sidebar-logo' src=\"/img/common/logo-dark.png\" alt=\"PP logo black\"/>\r\n                <div className=\"sidebar-nav\">\r\n                    <Link to='/profile' className={`sidebar-element${location.pathname === '/profile' || location.pathname === '/' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/profile${location.pathname === '/profile' || location.pathname ===  '/' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.profile[language]}</p>\r\n                    </Link>\r\n                    <Link to='/choose' className={`sidebar-element${location.pathname === '/choose' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/choose${location.pathname === '/choose' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.chooseHouse[language]}</p>\r\n                    </Link>\r\n                    <Link to='/financing' className={`sidebar-element${location.pathname.indexOf('/financing') !== -1 ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/finance${location.pathname.indexOf('/financing') !== -1 ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.financing[language]}</p>\r\n                    </Link>\r\n                    <Link to='/buy' className={`sidebar-element${location.pathname === '/buy' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/buy${location.pathname === '/buy' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.buyHouse[language]}</p>\r\n                    </Link>\r\n                    <Link to='/data' className={`sidebar-element${location.pathname === '/data' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/data${location.pathname === '/data' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.data[language]}</p>\r\n                    </Link>\r\n                    <Link to='/documentation' className={`sidebar-element${location.pathname === '/documentation' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/documents${location.pathname === '/documentation' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.documentation[language]}</p>\r\n                    </Link>\r\n                    <Link to='/interior-design' className={`sidebar-element${location.pathname === 'interior-design' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/intDesign${location.pathname === '/interior-design' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.interiorDesign[language]}</p>\r\n                    </Link>\r\n                    <Link to='propietary-service' className={`sidebar-element${location.pathname === 'propietary-service' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/ownerServ${location.pathname === '/propietary-service' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.propietaryService[language]}</p>\r\n                    </Link>\r\n                    <Link to='/faq' className={`sidebar-element${location.pathname.indexOf('/faq') !== -1 ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/faq${location.pathname.indexOf('/faq') !== -1 ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.faq[language]}</p>\r\n                    </Link>\r\n                    <Link to='/help' className={`sidebar-element${location.pathname === '/help' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/help${location.pathname === '/help' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.help[language]}</p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        toggleLanguage: changeLangAction,\r\n        logout: logoutAction\r\n    }\r\n)(withRouter(AuthNav))\r\n","import React, { useState } from 'react'\r\nimport { Dropdown, Menu, PageHeader } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { logoutAction } from '../../redux/userDuck'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\nimport { changeLangAction } from '../../redux/appDuck'\r\nimport { HamburgerCollapse } from 'react-animated-burgers'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport AuthNav from './AuthNav'\r\n\r\nconst Navbar = ({logged, language, logout, toggleLanguage}) => {\r\n\r\n    let [activeBurger, setActiveBurger] = useState(false)\r\n\r\n    let isDesktop = useMediaQuery({query: '(min-device-width: 950px)'})\r\n    let menu = (\r\n        <Menu>\r\n            <Menu.Item key='0'>\r\n                <Link to='/'>{text.navbar.index[language]}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='1'>\r\n                <Link to='/us'>{text.navbar.aboutUs[language]}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='2'>\r\n                <Link to='/amenities'>{text.navbar.amenities[language]}</Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    let loggedMenu = (\r\n        <Menu>\r\n            <Menu.Item key='0'>\r\n                <li onClick={logout}>Logout</li>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !logged ?  \r\n                    <PageHeader className='navbar-container'>\r\n                        <Link to='/'><img src=\"/logo.png\" alt=\"Logo\"/></Link>\r\n                        {\r\n                            isDesktop ?\r\n                                <div className='right-nav'>\r\n                                    <ul>\r\n                                        <li><Link to='/'>{text.navbar.index[language]}</Link></li>\r\n                                        <li><Link to='/us'>{text.navbar.aboutUs[language]}</Link></li>\r\n                                        <li><Link to='/amenities'>{text.navbar.amenities[language]}</Link></li>\r\n                                        <li><Link to='/contact'>{text.navbar.contact[language]}</Link></li>\r\n                                    </ul>\r\n                                    <p className='language-selector' onClick={toggleLanguage}>\r\n                                        {language}\r\n                                    </p>\r\n                                </div>\r\n                            :\r\n                                <div className='mobile-right-nav'>\r\n                                    <p className='language-selector' onClick={toggleLanguage}>\r\n                                        {language}\r\n                                    </p>\r\n                                    <Dropdown overlay={menu} trigger={['click']}>\r\n                                        <HamburgerCollapse isActive={activeBurger} onClick={() => setActiveBurger(!activeBurger)} className='hamburger' buttonWidth={30}/>\r\n                                    </Dropdown>\r\n                                </div>\r\n                        }\r\n                    </PageHeader>\r\n                :\r\n                    <AuthNav/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {logged}, \r\n    app: {language}\r\n}) => ({\r\n    logged, \r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        logout: logoutAction,\r\n        toggleLanguage: changeLangAction\r\n    }\r\n)(Navbar)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\n\r\nconst Footer = ({language}) => {\r\n    return (\r\n        <div className='footer-container'>\r\n            <div className=\"footer-left\">\r\n               <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam similique corporis eligendi nostrum perspiciatis dolores nobis, officiis dolorem. Iure cumque tempora ab officia officiis assumenda qui, doloremque cupiditate fugiat suscipit?</p>\r\n            </div>\r\n            <div className=\"footer-right\">\r\n                <img src=\"/img/common/logo-compact.svg\" alt=\"Punta Piedra\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n\r\n    }\r\n)(Footer)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Input, Form, message } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { loginAction } from '../../redux/userDuck'\r\nimport text from '../text'\r\n\r\nlet LoginForm = ({history, language, info, fetching, error, login}) => {\r\n\r\n    let [data, setData] = useState({})\r\n\r\n    let onFinish = () => {\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if(!data.email || !rex.test(data.email.toLowerCase())) return message.warning(text.messages.incorrectEmail[language])\r\n        if(!data.password) return message.error(text.messages.incorrectPassword[language])\r\n        login(data)\r\n    }\r\n\r\n    let handleData = e => setData({...data, [e.target.name]: e.target.value})\r\n\r\n    useEffect(() => {\r\n        if(error.status === 403) return message.error(text.messages.wrongPassword[language])\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n        if(info.name) history.push('/profile')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[info, error])\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: text.form.required[language],\r\n                },\r\n                ]}\r\n            >\r\n                <Input name='email' onChange={handleData} placeholder={text.login.emailPlaceholder[language]}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: text.form.required[language],\r\n                },\r\n                ]}\r\n            >\r\n                <Input.Password name='password' onChange={handleData} placeholder={text.login.passwordPlaceholder[language]}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button loading={fetching} className='nav-button' type=\"primary\" htmlType=\"submit\">\r\n                    {text.button.login[language]}\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapState = ({\r\n    user: {info, fetching, error},\r\n    app: {language}\r\n}) => ({\r\n    language,\r\n    info,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState, \r\n    {\r\n        login: loginAction\r\n    }\r\n)(LoginForm)\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport LoginForm from './LoginForm'\r\nimport text from '../text'\r\n\r\nlet Login = ({language}) => {\r\n    return (\r\n        <div className='padded-container'>\r\n            <div className='auth-container'>\r\n                <div className=\"left-register register-bg\">\r\n                    <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n                </div>\r\n                <div className=\"auth-right-content\">\r\n                    <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                    <p className='title'>{text.login.portalTitle[language]}</p>\r\n                    <p className='subtitle'>{text.login.portalSubtitle[language]}</p>\r\n                    <br/>\r\n                    <LoginForm/>\r\n                    <div className=\"auth-bottom-text\">\r\n                        <p>{text.form.forgotPassword[language]} <Link to='/recover-password'>{text.form.forgotPasswordLink[language]}</Link></p>\r\n                        <p>{text.form.register[language]} <Link to='/register/buyer'>{text.form.registerLink[language]}</Link></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        \r\n    }\r\n)(Login)","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, message, Select, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signupAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nlet AgentData = ({fetching, language, error, info, signup, history}) => {\r\n\r\n    let [data, setData] = useState({\r\n        type: 'agent'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'español') ||\r\n             !data.company ||\r\n             !data.email ||\r\n             !data.phone\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        if(!data.consent) return message.warn(text.messages.consent[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/profile')\r\n    }, [error, info])\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                {language === 'español' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n            </div>\r\n            <Input onChange={handleData} value={data.company} name='company' placeholder={text.register.company[language]}/>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                <Input className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n            </div>\r\n            <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n            <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.consent}\r\n                    onChange={e => setData({...data, consent: e.target.checked})}\r\n                >\r\n                    {text.register.confirm[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.allowNewsletter}\r\n                    onChange={e => setData({...data, allowNewsletter: e.target.checked})}\r\n                >\r\n                    {text.register.allowNewsletter[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n            <div className=\"auth-bottom-text\">\r\n                <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language}\r\n}) => ({\r\n    fetching,\r\n    error, \r\n    info,\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction\r\n    }\r\n)(AgentData)","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, message, Select, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signupAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\nlet { Option } = Select\r\n\r\nlet BasicData = ({fetching, language, error, info, signup, history}) => {\r\n\r\n    let [data, setData] = useState({\r\n        type: 'buyer'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'español') ||\r\n             !data.email ||\r\n             !data.phone\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        if(!data.consent) return message.warn(text.messages.consent[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/profile')\r\n    }, [error, info])\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                {language === 'español' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n            </div>\r\n            {/* <Input onChange={handleData} value={data.company} name='company' placeholder={text.register.company[language]}/> */}\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                <Input className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n            </div>\r\n            {/* <div className=\"selector-input\">\r\n                <p>{text.register.beneficiary[language]}</p>\r\n                <Select onChange={value => setData({...data, beneficiary: value})} value={data.beneficiary} defaultValue='no'>\r\n                    <Option value='yes'>{text.responses.yes[language]}</Option>\r\n                    <Option value='no'>{text.responses.no[language]}</Option>\r\n                </Select>\r\n            </div>\r\n            {\r\n                data.beneficiary === 'yes' &&\r\n                    <>\r\n                        <small className='beneficiary-title'>{text.register.beneficiaryTitle[language]}</small>\r\n                        <div className=\"multiple-inputs\">\r\n                            <Input onChange={handleData} value={data.beneficiaryName} name='beneficiaryName' placeholder={text.register.firstName[language]}/>\r\n                            <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.beneficiaryLastName} name='beneficiaryLastName' placeholder={text.register.lastName[language]}/>\r\n                            {language === 'español' && <Input onChange={handleData} value={data.beneficiarySecondLastName} name='beneficiarySecondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n                        </div>\r\n                        <div className=\"multiple-inputs\">\r\n                            <Input onChange={handleData} value={data.beneficiaryEmail} name='beneficiaryEmail' placeholder={text.register.beneficiaryEmail[language]}/>\r\n                            <Input className='last-input' onChange={handleData} value={data.beneficiaryPhone} name='beneficiaryPhone' placeholder={text.register.beneficiaryPhone[language]}/>             \r\n                        </div>\r\n                    </>\r\n            } */}\r\n            {/* ------------ MAP AGENTS FOR THIS FIELD -------------*/}\r\n            <Select className='agent-selector' onChange={value => setData({...data, customerAgent: value})} placeholder={text.register.selectAgent[language]} value={data.customerAgent} defaultValue={data.customerAgent}>\r\n                <Option value='agent1'>Gerardo Jiménez</Option>\r\n            </Select>\r\n            <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n            <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n            <div className=\"align-checkbox\">\r\n                <div className=\"checkbox-input\">\r\n                    <Checkbox\r\n                        checked={data.wantFinance}\r\n                        onChange={e => setData({...data, wantFinance: e.target.checked})}\r\n                    >\r\n                        {text.register.wantFinance[language]}\r\n                    </Checkbox>\r\n                </div>\r\n                <div className=\"checkbox-input\">\r\n                    <Checkbox\r\n                        checked={data.consent}\r\n                        onChange={e => setData({...data, consent: e.target.checked})}\r\n                    >\r\n                        {text.register.confirm[language]}\r\n                    </Checkbox>\r\n                </div>\r\n                <div className=\"checkbox-input\">\r\n                    <Checkbox\r\n                        checked={data.allowNewsletter}\r\n                        onChange={e => setData({...data, allowNewsletter: e.target.checked})}\r\n                    >\r\n                        {text.register.allowNewsletter[language]}\r\n                    </Checkbox>\r\n                </div>\r\n            </div>\r\n            <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n            <div className=\"auth-bottom-text\">\r\n                <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language}\r\n}) => ({\r\n    fetching,\r\n    error, \r\n    info,\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction\r\n    }\r\n)(BasicData)","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, message, Select, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signupAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nlet ProviderData = ({fetching, language, error, info, signup, history}) => {\r\n\r\n    let [data, setData] = useState({\r\n        type: 'provider'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'español') ||\r\n             !data.company ||\r\n             !data.email ||\r\n             !data.phone\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        if(!data.consent) return message.warn(text.messages.consent[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/profile')\r\n    }, [error, info])\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                {language === 'español' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n            </div>\r\n            <Input onChange={handleData} value={data.company} name='company' placeholder={text.register.company[language]}/>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                <Input className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n            </div>\r\n            <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n            <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.consent}\r\n                    onChange={e => setData({...data, consent: e.target.checked})}\r\n                >\r\n                    {text.register.confirm[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.allowNewsletter}\r\n                    onChange={e => setData({...data, allowNewsletter: e.target.checked})}\r\n                >\r\n                    {text.register.allowNewsletter[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n            <div className=\"auth-bottom-text\">\r\n                <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language}\r\n}) => ({\r\n    fetching,\r\n    error, \r\n    info,\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction\r\n    }\r\n)(ProviderData)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\nimport AgentData from './registerComponents/AgentData'\r\nimport BasicData from './registerComponents/BasicData'\r\nimport ProviderData from './registerComponents/ProviderData'\r\n\r\nlet RegisterForm = ({match, language}) => {\r\n    \r\n    let { params } = match\r\n    \r\n    return (\r\n        <div className='padded-container register-container'>\r\n            <div className=\"left-register register-form-bg\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register-block\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>\r\n                    {params.type === 'buyer' && text.register.portalSubtitleBuyer[language]}\r\n                    {params.type === 'agent' && text.register.portalSubtitleAgent[language]}\r\n                    {params.type === 'provider' && text.register.portalSubtitleProvider[language]}\r\n                </p>\r\n                {params.type === 'buyer' && <BasicData/>}\r\n                {params.type === 'agent' && <AgentData/>}\r\n                {params.type === 'provider' && <ProviderData/>}\r\n                {/* <div className=\"auth-bottom-text\">\r\n                    {params.type !== 'buyer' && <p><Link to='/register/buyer'>{text.register.signLinkBuyer[language]}</Link></p>}\r\n                    {params.type !== 'agent' && <p><Link to='/register/agent'>{text.register.signLinkAgent[language]}</Link></p>}\r\n                    {params.type !== 'provider' && <p><Link to='/register/provider'>{text.register.signLinkProvider[language]}</Link></p>}\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n\r\n    }\r\n)(RegisterForm)","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { sendTokenAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nconst ForgotPassword = ({history, language, tokenSent, fetching, error, sendToken}) => {\r\n\r\n    let [email, setEmail] = useState('')\r\n\r\n    let handleSubmit = () => {\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if(!email || !rex.test(email.toLowerCase())) return message.warning(text.messages.incorrectEmail[language])\r\n        sendToken({email})\r\n    }\r\n\r\n    let checkEnter = e => e.key === 'Enter' && handleSubmit()\r\n\r\n    useEffect(() => {\r\n        if(tokenSent) return history.push('/recover-password/token')\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n    }, [tokenSent, error])\r\n\r\n    return (\r\n        <div className='padded-container register-container'>\r\n            <div className=\"left-register register-bg\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>{text.register.forgotSubtitle[language]}</p>\r\n                <div className=\"recover-password-text\">\r\n                    <h2>{text.recoverPassword.title[language]}</h2>\r\n                    <h3>{text.recoverPassword.message[language]}</h3>\r\n                </div>        \r\n                <div className=\"recover-password-input\">\r\n                    <Input onKeyPress={checkEnter} onChange={e => setEmail(e.target.value)} value={email} placeholder={text.login.emailPlaceholder[language]}/>\r\n                    <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.next[language]}</Button>\r\n                </div>\r\n                <div className=\"auth-bottom-text\">\r\n                    <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n                    <p>{text.form.register[language]} <Link to='/register/buyer'>{text.form.registerLink[language]}</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {tokenSent, fetching, error} \r\n}) => ({\r\n    language,\r\n    tokenSent,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        sendToken: sendTokenAction\r\n    }\r\n)(ForgotPassword)\r\n","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Cookies } from 'react-cookie'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { changePasswordAction, checkTokenAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nconst ForgotPasswordToken = ({history, language, validCode, passwordChanged, fetching, error, checkCode, changePassword}) => {\r\n\r\n    let [token, setToken] = useState('')\r\n    let [password, setPassword] = useState('')\r\n    let email = new Cookies().get('recoveryEmail')\r\n\r\n    let handleSubmit = () => {\r\n        if(!email) return history.push('/recover-password')\r\n        if(!token) return message.warning(text.messages.enterTokenError[language])\r\n        checkCode(token)\r\n    }\r\n\r\n    let handleNewPassword = () => {\r\n        if(!email) return history.push('/recover-password')\r\n        if(!password || password.length < 6 || !/\\d/.test(password)) return message.warning(text.recoverPassword.pwdError[language])\r\n        changePassword(password)\r\n    }\r\n\r\n    let checkEnter = e => e.key === 'Enter' && handleSubmit()\r\n    let checkEnterPassword = e => e.key === 'Enter' && handleNewPassword()\r\n\r\n    useEffect(() => {\r\n        if(passwordChanged){\r\n            message.success(text.recoverPassword.pwdSuccess[language])\r\n            setTimeout(() => {\r\n                history.push('/login')\r\n            }, 3000)\r\n        }\r\n        if(validCode) return message.success(text.recoverPassword.successToken[language])\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n    }, [passwordChanged, validCode, error])\r\n\r\n    return (\r\n        <div className='padded-container register-container'>\r\n            <div className=\"left-register register-bg\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>{text.register.portalSubtitle[language]}</p>\r\n                {\r\n                    !validCode ? \r\n                        <>\r\n                            <div className=\"recover-password-text\">\r\n                                <h2>{text.recoverPassword.recoverMessage[language]}</h2>\r\n                                <h3>{text.recoverPassword.successEmail[language]}</h3>\r\n                                <small>{}</small>\r\n                            </div>        \r\n                            <div className=\"recover-password-input\">\r\n                                <Input onKeyPress={checkEnter} onChange={e => setToken(e.target.value)} value={token} placeholder={text.recoverPassword.enterToken[language]}/>\r\n                                <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.next[language]}</Button>\r\n                            </div>\r\n                        </>\r\n                    :\r\n                        <>\r\n                            <div className=\"recover-password-text\">\r\n                                <h2>{text.recoverPassword.recoverMessage[language]}</h2>\r\n                                <h3>{text.recoverPassword.pwdIndicator[language]}</h3>\r\n                            </div>        \r\n                            <div className=\"recover-password-input\">\r\n                                <Input onKeyPress={checkEnterPassword} onChange={e => setPassword(e.target.value)} value={password} placeholder={text.recoverPassword.enterNewPassword[language]}/>\r\n                                <Button loading={fetching} onClick={handleNewPassword} className='nav-button'>{text.button.send[language]}</Button>\r\n                                {passwordChanged && <small>{text.recoverPassword.redirect[language]}</small>}\r\n                            </div>\r\n                        </>\r\n                }\r\n                \r\n                <div className=\"auth-bottom-text\">\r\n                    <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n                    <p>{text.form.register[language]} <Link to='/register/buyer'>{text.form.registerLink[language]}</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {validCode, passwordChanged,  fetching, error} \r\n}) => ({\r\n    language,\r\n    validCode,\r\n    passwordChanged,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        checkCode: checkTokenAction,\r\n        changePassword: changePasswordAction\r\n    }\r\n)(ForgotPasswordToken)\r\n","import { Cookies } from \"react-cookie\"\r\nimport { getData, getHouseData, updateUser } from \"../services/api\"\r\n\r\nlet initialData = {\r\n    info: {},\r\n    fetchingData: false,\r\n    fetchingHouse: true,\r\n    error: {},\r\n    dataUpdated: false,\r\n    house: {}\r\n}\r\n\r\nlet GET_DATA = 'GET_DATA'\r\nlet GET_DATA_SUCCESS = 'GET_DATA_SUCCESS'\r\nlet GET_DATA_ERROR = 'GET_DATA_ERROR'\r\n\r\nlet GET_HOUSE = 'GET_HOUSE'\r\nlet GET_HOUSE_SUCCESS = 'GET_HOUSE_SUCCESS'\r\nlet GET_HOUSE_ERROR = 'GET_HOUSE_ERROR'\r\n\r\nlet UPDATE_USER = 'UPDATE_USER'\r\nlet UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\r\nlet UPDATE_USER_ERROR = 'UPDATE_USER_ERROR'\r\n\r\nlet HANDLE_INFO = 'HANDLE_INFO'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        case GET_DATA:\r\n            return {...state, dataUpdated: false, fetchingData: true, info: {}, error: {}}\r\n        case GET_DATA_SUCCESS:\r\n            return {...state, fetchingData: false, info: action.payload}\r\n        case GET_DATA_ERROR:\r\n            return {...state, fetchingData: false, error: action.payload}\r\n\r\n        case GET_HOUSE:\r\n            return {...state, fetchingHouse: true, house: {}, error: {}}\r\n        case GET_HOUSE_SUCCESS:\r\n            return {...state, fetchingHouse: false, house: action.payload}\r\n        case GET_HOUSE_ERROR:\r\n            return {...state, fetchingHouse: false, error: action.payload}\r\n\r\n        case UPDATE_USER:\r\n            return {...state, dataUpdated: false, fetching: true, error: {}}\r\n        case UPDATE_USER_SUCCESS:\r\n            return {...state, dataUpdated: true, fetching: false}\r\n        case UPDATE_USER_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case HANDLE_INFO:\r\n            return {...state, info: action.payload}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let getHouseDataAction = data => (dispatch, getState) => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: GET_HOUSE_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: GET_HOUSE\r\n    })\r\n    // CHANGE ID TO THE REAL HOUSE ID --pp site id 5f912218f624e1b7e2b3a63f\r\n    getHouseData({id, houseId: '5f90f20eaed8c340881f547a'})\r\n        .then(res => dispatch({\r\n            type: GET_HOUSE_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_HOUSE_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let updateUserAction = additionalData => (dispatch, getState) => {\r\n    dispatch({\r\n        type: UPDATE_USER\r\n    })\r\n    let { info } = getState().data\r\n    let completeData = {...info, ...additionalData}\r\n    updateUser(completeData)\r\n        .then(res => dispatch({\r\n            type: UPDATE_USER_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: UPDATE_USER_ERROR,\r\n            payload: err.response\r\n        }))\r\n    return 'done'\r\n}\r\n\r\nexport let handleInfoAction = event => (dispatch, getState) => {\r\n    let { info } = getState().data\r\n    let { target } = event\r\n    if(target) {\r\n        dispatch({\r\n            type: HANDLE_INFO,\r\n            payload: { ...info, [event.target.name]:event.target.value }\r\n        })\r\n        return\r\n    }\r\n    dispatch({\r\n        type: HANDLE_INFO,\r\n        payload: { ...info, birthDate:event }\r\n    })\r\n}\r\n\r\nexport let getDataAction = () => dispatch => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: GET_DATA_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: GET_DATA\r\n    })\r\n    getData({id})\r\n        .then(res => dispatch({\r\n            type: GET_DATA_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_DATA_ERROR,\r\n            payload: err.response\r\n        }))\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Button, Checkbox, DatePicker, Input, message, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInfoAction, updateUserAction } from '../../redux/dataDuck'\r\nimport moment from 'moment'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Profile = ({info, fetching, dataUpdated, language, getData, handleInfo, updateUser}) => {\r\n\r\n    let [consent, setConsent] = useState(false)\r\n\r\n    let handleSubmit = () => {\r\n        if(!info.country || !info.state || !info.birthDate) return message.warning(text.messages.missingFields[language])\r\n        if(!consent) return message.warning(text.messages.consent[language])\r\n        updateUser()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated) {\r\n            setConsent(false)\r\n            return message.success(text.messages.dataUpdated[language])\r\n        }\r\n    }, [dataUpdated])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/profile.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.profile[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.profile[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleInfo} value={info.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                                {language === 'español' && <Input required onChange={handleInfo} value={info.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n                            </div>\r\n                            {info.userType !== 'buyer' && <Input id='company-app' onChange={handleInfo} value={info.company} name='company' placeholder={text.register.company[language]}/>}\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.email} name='email' placeholder={text.register.email[language]}/>\r\n                                <Input className='last-input' onChange={handleInfo} value={info.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.country} name='country' placeholder={text.profile.country[language]}/>\r\n                                <Input className='last-input' onChange={handleInfo} value={info.state} name='state' placeholder={text.profile.state[language]}/>\r\n                                <DatePicker\r\n                                    format='YYYY-MM-DD'\r\n                                    disabledDate={current => current > moment().endOf('day')}\r\n                                    showToday={false}\r\n                                    placeholder={text.profile.birthDate[language]}\r\n                                    onChange={handleInfo}\r\n                                    value={moment(info.birthDate)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"checkbox-input\">\r\n                                <Checkbox\r\n                                    checked={consent}\r\n                                    onChange={() => setConsent(!consent)}\r\n                                >\r\n                                    {text.register.confirm[language]}\r\n                                </Checkbox>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple-buttons\">\r\n                            <Button onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.save[language]}</Button>\r\n                            <Link to='/choose'><Button className='nav-button'>{text.button.continue[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(Profile)\r\n","import React from 'react'\r\nimport { EnvironmentOutlined } from '@ant-design/icons'\r\nimport ReactImageMagnify from 'react-image-magnify'\r\nimport text from '../../text'\r\n\r\nexport const ChooseHouseMap = ({model, language}) => {\r\n    return (\r\n        <>\r\n        <div className='house-map-container'>\r\n            <div className=\"left-house-map\">\r\n                <ReactImageMagnify\r\n                {...{\r\n                    smallImage: {\r\n                        alt: 'Map',\r\n                        isFluidWidth: true,\r\n                        src: '/img/chooseHouse/map.jpg'\r\n                    },\r\n                    largeImage: {\r\n                        src: '/img/chooseHouse/map.jpg',\r\n                        width: 1200,\r\n                        height: 1800\r\n                    },\r\n                    enlargedImageContainerDimensions: {\r\n                        width: 300,\r\n                        height: '100%'\r\n                    }\r\n                }} \r\n                />\r\n            </div>\r\n            <div className=\"right-house-map\">\r\n                <div className=\"right-house-map--img\">\r\n                    {model ? <img src=\"/img/chooseHouse/house.jpg\" alt=\"house model\"/> : <div className=\"no-image\"/>}\r\n                </div>\r\n                <div>\r\n                    <div className=\"map-color-description\">\r\n                        <div className=\"occupied-box\"/>\r\n                        <p>{text.chooseHouse.forSale[language]}</p>\r\n                    </div>\r\n                    <div className=\"map-color-description\">\r\n                        <div className=\"available-box\"/>\r\n                        <p>{text.chooseHouse.occupied[language]}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"map-link\">\r\n            <EnvironmentOutlined />\r\n            <a href=\"/choose\">https://goo.gl/maps/a3F4y3CTu1jfENMH7</a>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Input, message, Select, Spin } from 'antd'\r\nimport { Option } from 'antd/lib/mentions'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getDataAction, handleInfoAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { ChooseHouseMap } from './chooseHouseComponents/ChooseHouseMap'\r\n\r\nconst ChooseHouse = ({history, language, fetching, info, dataUpdated, getData, handleInfo, updateUser}) => {\r\n\r\n    let [lotModel, setLotModel] = useState(null)\r\n    let [additionalLotData, setAdditionalLotData] = useState({})\r\n    let [additionalLot, setAdditionalLot] = useState(false)\r\n    let [lotSize, setLotSize] = useState('')\r\n    let [additionalLotSize, setAdditionalLotSize] = useState('')\r\n\r\n    let handleSubmit = () => {\r\n        if(!info.lotNumber || !lotModel) return message.warning(text.messages.missingFields[language])\r\n        if(additionalLot){\r\n            if(!additionalLotData.lotNumber || !additionalLotData.lotModel) return message.warning(text.messages.missingFields[language])\r\n            return updateUser(additionalLotData)\r\n        }\r\n        updateUser({lotModel})\r\n    }\r\n\r\n    let handleAdditionalLotData = e => {\r\n        let { target } = e\r\n        if(target) return setAdditionalLotData({...additionalLotData, [e.target.name]:e.target.value})\r\n        setAdditionalLotData({...additionalLotData, additionalLotModel: e})\r\n    }\r\n\r\n    let handleLotSize = value => {\r\n        if(value) return setLotSize(parseInt(value) * 100)\r\n        setLotSize('')\r\n    }\r\n\r\n    let handleAdditionalLotSize = value => {\r\n        if(value) return setAdditionalLotSize(parseInt(value) * 100)\r\n        setLotSize('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        // CHECK THIS COMING FROM PROFILE, IT'S REDIRECTING\r\n        if(info.lotNumber && dataUpdated) return history.push('/financing')\r\n    }, [dataUpdated])\r\n    \r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(info.lotModel && !lotModel) setLotModel(info.lotModel)\r\n    }, [info])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n            {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/choose.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.chooseHouse[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.chooseHouse[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"multiple-inputs map-inputs\">\r\n                                <Input onChange={e => {handleInfo(e); handleLotSize(e.target.value)}} value={info.lotNumber} name='lotNumber' placeholder={text.chooseHouse.inputLotNumber[language]}/>\r\n                                <Input value={lotSize} suffix={language === 'english' ? <small>yd<sup>2</sup></small> : <small>m<sup>2</sup></small>} name='lotSize' placeholder={text.chooseHouse.inputLotSize[language]}/>\r\n                                <Select className='select-input' onChange={value => setLotModel(value)} value={info.lotModel} placeholder={text.chooseHouse.inputLotModel[language]}>\r\n                                    <Option value='Model 1'>Model 1</Option>\r\n                                    <Option value='Model 2'>Model 2</Option>\r\n                                    <Option value='Model 3'>Model 3</Option>\r\n                                </Select>\r\n                                {!additionalLot && <Button onClick={() => setAdditionalLot(true)} className='solid-button'>+ {text.chooseHouse.addLot[language]}</Button>}\r\n                            </div>\r\n                            {\r\n                                additionalLot ? \r\n                                    <div className=\"multiple-inputs map-inputs\">\r\n                                        <Input onChange={e => {handleAdditionalLotData(e); handleAdditionalLotSize(e.target.value)}} value={info.additionalLotNumber} name='additionalLotNumber' placeholder={text.chooseHouse.inputLotNumber[language]}/>\r\n                                        <Input value={additionalLotSize} suffix={language === 'english' ? <small>yd<sup>2</sup></small> : <small>m<sup>2</sup></small>} name='lotSize' placeholder={text.chooseHouse.inputLotSize[language]}/>\r\n                                        <Select className='select-input' onChange={handleAdditionalLotData} value={info.additionalLotModel} placeholder={text.chooseHouse.inputLotModel[language]}>\r\n                                            <Option value='Model 1'>Model 1</Option>\r\n                                            <Option value='Model 2'>Model 2</Option>\r\n                                            <Option value='Model 3'>Model 3</Option>\r\n                                        </Select>\r\n                                        <Button onClick={() => setAdditionalLot(false)} className='solid-button'>- {text.chooseHouse.addLot[language]}</Button>\r\n                                    </div>\r\n                                :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                        <ChooseHouseMap language={language} model={lotModel}/>\r\n                        <div className='multiple-buttons'>\r\n                            <Link to='/profile'><Button loading={fetching} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(ChooseHouse)\r\n","import React, { useState } from 'react'\r\nimport { Button, Checkbox } from 'antd'\r\nimport ReactImageMagnify from 'react-image-magnify'\r\nimport text from '../../text'\r\n\r\nexport const BuyHouseMap = ({language, house}) => {\r\n\r\n    let [selectedImage, setSelectedImage] = useState(house.mainImage)\r\n    let [firstApproval, setFirstApproval] = useState(false)\r\n    let [secondApproval, setSecondApproval] = useState(false)\r\n\r\n    return (\r\n        <div className='buy-map-container'>\r\n            <div className=\"left-buy-map\">\r\n                <div className=\"description-thumbs\">\r\n                    <img className={selectedImage === house.mainImage ? 'thumb-img-active' : 'thumb-img'} onClick={() => setSelectedImage(house.mainImage)} src={house.mainImage} alt=\"mainimage\"/>\r\n                    {\r\n                        house.otherImages.map((imageLink, ix) => \r\n                            <img key={ix} className={selectedImage === imageLink ? 'thumb-img-active' : 'thumb-img'} /*onClick={() => setSelectedImage(imageLink)}*/ src={imageLink} alt='thumb'/>\r\n                        )\r\n                    }\r\n                </div>\r\n                <ReactImageMagnify\r\n                className=\"description-big-image\"\r\n                {...{\r\n                    smallImage: {\r\n                        alt: 'Map',\r\n                        isFluidWidth: true,\r\n                        src: selectedImage\r\n                    },\r\n                    largeImage: {\r\n                        src: selectedImage,\r\n                        width: 1200,\r\n                        height: 1800\r\n                    },\r\n                    enlargedImageContainerDimensions: {\r\n                        width: 400,\r\n                        height: '100%'\r\n                    }\r\n                }} \r\n                />\r\n                <div className=\"description-attributes\">\r\n                    <div className=\"attributes-title-container\">\r\n                        <div className=\"house-title\">\r\n                            <h2>{house.name}</h2>\r\n                            <p>{text.buyHouse.titlePrice[language]}: {house.price.toLocaleString('en-US', {style: 'currency', currency: 'USD'})}</p>\r\n                        </div>\r\n                        <div className=\"house-availability\">\r\n                            <p>{house.available ? text.buyHouse.available[language] : text.buyHouse.notAvailable[language]}</p>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"house-properties-container\">\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/ruler.svg\" alt=\"ruler\"/>\r\n                            <p>{house.lotSize} {language === 'english' ? 'yd' : 'm'}<sup>2</sup></p>\r\n                        </div>\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/bed.svg\" alt=\"ruler\"/>\r\n                            <p>{house.bedrooms} {text.buyHouse.bedrooms[language]}</p>\r\n                        </div>\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/bathtub.svg\" alt=\"ruler\"/>\r\n                            <p>{house.bathrooms} {text.buyHouse.bathrooms[language]}</p>\r\n                        </div>\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/car.svg\" alt=\"ruler\"/>\r\n                            <p>{house.cars} {text.buyHouse.cars[language]}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"house-description\">\r\n                        <p>\r\n                            {house[`${language}Description`]}\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Temporibus quae hic porro perspiciatis vel similique nam consequatur accusamus delectus fugiat recusandae tempore, illum amet numquam fuga vitae reiciendis in. A.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"price\">\r\n                        <p>{text.buyHouse.price[language]}</p>\r\n                        <h2>{house.price.toLocaleString('en-US', {style: 'currency', currency: 'USD'})} USD</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-buy-map\">\r\n                <div className=\"remember-container\">\r\n                    <div className=\"remember-title\">\r\n                        <img src=\"/img/buyHouse/bulb.svg\" alt=\"bulb\"/>\r\n                        <p>{text.buyHouse.remember[language]}</p>\r\n                    </div>\r\n                    <div className=\"remember-description\">\r\n                        <p>{text.buyHouse.docsDescription[language]}</p>\r\n                        <ul>\r\n                            <li>{text.buyHouse.doc1[language]}</li>\r\n                            <li>{text.buyHouse.doc2[language]}</li>\r\n                            <li>{text.buyHouse.doc3[language]}</li>\r\n                            <li>{text.buyHouse.doc4[language]}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"remember-container\">\r\n                    <div className=\"remember-title\">\r\n                        <img src=\"/img/buyHouse/bulb.svg\" alt=\"bulb\"/>\r\n                        <p>{text.buyHouse.approveTitle[language]}</p>\r\n                    </div>\r\n                    <div className=\"remember-description\">\r\n                        <p>{text.buyHouse.approvalDescription[language]}</p>\r\n                    </div>\r\n                    <div className=\"checkbox-input\">\r\n                        <Checkbox\r\n                            onChange={() => setFirstApproval(!firstApproval)}\r\n                            value={firstApproval}\r\n                        >\r\n                            {text.buyHouse.firstApproval[language]}\r\n                        </Checkbox>\r\n                    </div>\r\n                    <div className=\"checkbox-input\">\r\n                        <Checkbox\r\n                            onChange={() => setSecondApproval(!secondApproval)}\r\n                            value={secondApproval}\r\n                        >\r\n                            {text.buyHouse.secondApproval[language]}\r\n                        </Checkbox>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, getHouseDataAction } from '../../redux/dataDuck'\r\nimport { Button, Input, Spin } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\nimport { BuyHouseMap } from './buyHouseComponents/BuyHouseMap'\r\n\r\nconst BuyHouse = ({history,info, language, fetchingData, fetchingHouse, house, getHouse, getData}) => {\r\n\r\n\r\n    let handleSubmit = () => {\r\n        history.push('/data')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getHouse()\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n            {\r\n                fetchingData || fetchingHouse ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/buy.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.buyHouse[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.buyHouse[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"multiple-inputs map-inputs\">\r\n                                <Input disabled value={house.lotNumber}/>\r\n                                <Input disabled value={house.lotSize} suffix={language === 'english' ? <small>yd<sup>2</sup></small> : <small>m<sup>2</sup></small>}/>\r\n                                <Input disabled value={info.lotModel} />\r\n                            </div>\r\n                        </div>\r\n                        <BuyHouseMap language={language} house={house}/>\r\n                        <div className='multiple-buttons'>\r\n                            <Link to='/choose'><Button loading={false} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button onClick={handleSubmit} loading={false} className='nav-button'>{text.button.approve[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {fetchingData, info, house, fetchingHouse}\r\n}) => ({\r\n    language,\r\n    fetchingData,\r\n    fetchingHouse,\r\n    house,\r\n    info\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        getHouse: getHouseDataAction\r\n    }\r\n)(BuyHouse)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Checkbox, DatePicker, Input, message, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInfoAction, updateUserAction } from '../../redux/dataDuck'\r\nimport moment from 'moment'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserData = ({history, info, fetching, dataUpdated, language, getData, handleInfo, updateUser}) => {\r\n\r\n    let [consent, setConsent] = useState(false)\r\n\r\n    let handleSubmit = () => {\r\n        // if(!consent) return message.warning(text.messages.consent[language])\r\n        // updateUser()\r\n        history.push('/documentation')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated) {\r\n            setConsent(false)\r\n            return message.success(text.messages.dataUpdated[language])\r\n        }\r\n    }, [dataUpdated])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/data.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.data[language]}</p>\r\n                            </div>\r\n                        <h2>{info.name}, {text.sidebarSubtitle.data[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">    \r\n                                    <Input onChange={handleInfo} value={info.ssn} name='ssn' placeholder={text.userData.ssn[language]}/>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.civilStatus} name='civilStatus' placeholder={text.userData.civilStatus[language]}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.occupation} name='occupation' placeholder={text.userData.occupation[language]}/>\r\n                                    <p>{text.userData.occupationEx[language]}</p>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.company} name='company' placeholder={text.userData.company[language]}/>\r\n                                    <p>{text.userData.companyEx[language]}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.position} name='position' placeholder={text.userData.position[language]}/>\r\n                                    <p>{text.userData.positionEx[language]}</p>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.officePhone} name='officePhone' placeholder={text.userData.officePhone[language]}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"checkbox-input\">\r\n                                <Checkbox\r\n                                    checked={consent}\r\n                                    onChange={() => setConsent(!consent)}\r\n                                >\r\n                                    {text.register.confirm[language]}\r\n                                </Checkbox>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple-buttons\">\r\n                            <Link to='/buy'><Button className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(UserData)\r\n","import { addHouse } from \"../services/api\"\r\nimport { Cookies } from 'react-cookie'\r\n\r\nlet initialData = {\r\n    houseData: {},\r\n    fetching: false,\r\n    error: {},\r\n    houseUploaded: false\r\n}\r\n\r\nlet ADD_HOUSE = 'ADD_HOUSE'\r\nlet ADD_HOUSE_SUCCESS = 'ADD_HOUSE_SUCCESS'\r\nlet ADD_HOUSE_ERROR = 'ADD_HOUSE_ERROR'\r\n\r\nlet HANDLE_DATA = 'HANDLE_DATA'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        case ADD_HOUSE:\r\n            return {...state, houseUploaded: false, fetching: true, error: {}}\r\n        case ADD_HOUSE_SUCCESS:\r\n            return {...state, fetching: false, houseUploaded: true, houseData: {}}\r\n        case ADD_HOUSE_ERROR:\r\n            return {...state, fetching: false, error: action.payload}\r\n\r\n        case HANDLE_DATA:\r\n            return {...state, houseData: action.payload}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let addHouseAction = () => (dispatch, getState) => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: ADD_HOUSE_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: ADD_HOUSE\r\n    })\r\n    let { houseData } = getState().admin\r\n    addHouse({id, houseData})\r\n        .then(res => dispatch({\r\n            type: ADD_HOUSE_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: ADD_HOUSE_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let handleHouseDataAction = event => (dispatch, getState) => {\r\n    let { houseData } = getState().admin\r\n    dispatch({\r\n        type: HANDLE_DATA,\r\n        payload: { ...houseData, [event.target.name]:event.target.value}\r\n    })\r\n}","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addHouseAction, handleHouseDataAction } from '../../redux/adminDuck'\r\n\r\nconst AddHouse = ({houseData, fetching, error, houseUploaded, addHouse, handleHouseData}) => {\r\n\r\n    useEffect(() => {\r\n        if(houseUploaded) return message.success('HOUSE UPLOADED')\r\n    }, [houseUploaded])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n            <div className=\"application-content no-justify admin-container\">\r\n                <h2>ADD A HOUSE</h2>\r\n                <p>Lot number</p>\r\n                <Input onChange={handleHouseData} value={houseData.lotNumber} name='lotNumber'/>\r\n                <p>Name</p>\r\n                <Input onChange={handleHouseData} value={houseData.name} name='name'/>\r\n                <p>Lot size</p>\r\n                <Input onChange={handleHouseData} value={houseData.lotSize} name='lotSize'/>\r\n                <p>Price</p>\r\n                <Input type='number' onChange={handleHouseData} value={houseData.price} name='price'/>\r\n                <p>English Description</p>\r\n                <Input onChange={handleHouseData} value={houseData.englishDescription} name='englishDescription'/>\r\n                <p>Spanish Description</p>\r\n                <Input onChange={handleHouseData} value={houseData.españolDescription} name='españolDescription'/>\r\n                <p>Bathrooms</p>\r\n                <Input onChange={handleHouseData} value={houseData.bathrooms} name='bathrooms'/>\r\n                <p>Bedrooms</p>\r\n                <Input onChange={handleHouseData} value={houseData.berdrooms} name='bedrooms'/>\r\n                <p>Cars</p>\r\n                <Input onChange={handleHouseData} value={houseData.cars} name='cars'/>\r\n                <p>Main Image</p>\r\n                <Input onChange={handleHouseData} value={houseData.mainImage} name='mainImage'/>\r\n                <Button onClick={addHouse}>Add house</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    admin: {houseData, fetching, error, houseUploaded}\r\n}) => ({\r\n    houseData, \r\n    fetching, \r\n    error, \r\n    houseUploaded\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        addHouse: addHouseAction,\r\n        handleHouseData: handleHouseDataAction\r\n    }\r\n)(AddHouse)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, message, Spin, Upload } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInfoAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nlet { Dragger } = Upload\r\n\r\nconst Documentation = ({info, fetching, dataUpdated, language, getData, handleInfo, updateUser}) => {\r\n\r\n    let [uploaded, setUploaded] = useState({\r\n        firstDoc: false,\r\n        secondDoc: false,\r\n        thirdDoc: false\r\n    })\r\n\r\n    let handleUpload = (info, number) => {\r\n        console.log(info)\r\n        const { status } = info.file;\r\n        console.log(status)\r\n        if (status !== 'uploading') {\r\n            console.log(info.file, info.fileList);\r\n        }\r\n        if (status === 'done') {\r\n            message.success(`${info.file.name}`);\r\n        } else if (status === 'error') {\r\n            message.error(`${info.file.name}`);\r\n        }\r\n        switch(number){\r\n            case 'firstDoc':\r\n                return setUploaded({...uploaded, firstDoc: true})\r\n            case 'secondDoc':\r\n                return setUploaded({...uploaded, secondDoc: true})\r\n            case 'thirdDoc':\r\n                return setUploaded({...uploaded, thirdDoc: true})\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/documents.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.documentation[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.documentation[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"documents-box-container\">\r\n                                <div className=\"doc-box\">\r\n                                    <Dragger\r\n                                        accept='image/png, image/jpeg, .pdf'\r\n                                        onChange={info => handleUpload(info, 'firstDoc')}\r\n                                        fileList={[]}\r\n                                    >\r\n                                        <div className='doc-box-elements'>\r\n                                            <p className='doc-box-title'>{text.documentation.firstDoc.title[language]}</p>\r\n                                            <img src={`/img/documentation/upload${uploaded.firstDoc ? 'ed' : ''}.png`} alt=\"upload\"/>\r\n                                            <p className='doc-box-instructions'>{text.documentation.firstDoc.inst[language]}</p>\r\n                                            <p className='doc-box-mb'>{text.documentation.mbText[language]}</p>\r\n                                            <Button className='upload-button'> <img src='/img/documentation/folder.svg' alt='folder'/> {text.documentation.blowseButon[language]}</Button>\r\n                                        </div>\r\n                                    </Dragger>\r\n                                </div>\r\n                                <div className=\"doc-box\">\r\n                                    <Dragger\r\n                                        accept='image/png, image/jpeg, .pdf'\r\n                                        onChange={info => handleUpload(info, 'secondDoc')}\r\n                                        fileList={[]}\r\n                                    >\r\n                                        <div className='doc-box-elements'>\r\n                                            <p className='doc-box-title'>{text.documentation.secondDoc.title[language]}</p>\r\n                                            <img src={`/img/documentation/upload${uploaded.secondDoc ? 'ed' : ''}.png`} alt=\"upload\"/>\r\n                                            <p className='doc-box-instructions'>{text.documentation.secondDoc.inst[language]}</p>\r\n                                            <p className='doc-box-mb'>{text.documentation.mbText[language]}</p>\r\n                                            <Button className='upload-button'> <img src='/img/documentation/folder.svg' alt='folder'/> {text.documentation.blowseButon[language]}</Button>\r\n                                        </div>\r\n                                    </Dragger>\r\n                                </div>\r\n                                <div className=\"doc-box\">\r\n                                    <Dragger\r\n                                        accept='image/png, image/jpeg, .pdf'\r\n                                        onChange={info => handleUpload(info, 'thirdDoc')}\r\n                                        fileList={[]}\r\n                                    >\r\n                                        <div className='doc-box-elements'>\r\n                                            <p className='doc-box-title'>{text.documentation.thirdDoc.title[language]}</p>\r\n                                            <img src={`/img/documentation/upload${uploaded.thirdDoc ? 'ed' : ''}.png`} alt=\"upload\"/>\r\n                                            <p className='doc-box-instructions'>{text.documentation.thirdDoc.inst[language]}</p>\r\n                                            <p className='doc-box-mb'>{text.documentation.mbText[language]}</p>\r\n                                            <Button className='upload-button'> <img src='/img/documentation/folder.svg' alt='folder'/> {text.documentation.blowseButon[language]}</Button>\r\n                                        </div>\r\n                                    </Dragger>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple-buttons\">\r\n                            <Link to='/data'><Button className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button loading={fetching} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(Documentation)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Finance = ({info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n\r\n    let [type, setType] = useState('')\r\n\r\n    let handleSubmit = typeInput => {\r\n        updateUser({economicProfile: typeInput})\r\n        setType(typeInput)\r\n    }\r\n\r\n    useEffect(() => {\r\n            if(!fetching && info.economicProfile) return history.push(`/financing/${info.economicProfile}`)\r\n    }, [info])\r\n\r\n    useEffect(() => {\r\n            if(dataUpdated && type) history.push(`/financing/${type}`)\r\n    }, [dataUpdated])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/finance.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.financing[language]}</p>\r\n                            </div>\r\n                        <h2>{text.sidebarSubtitle.financing[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <p onClick={() => handleSubmit('nat-salaried')} className='economic-profile-selector'>{text.financing.nationalSalaried[language]}</p>\r\n                            <p onClick={() => handleSubmit('nat-independent')} className='economic-profile-selector'>{text.financing.nationalIndependent[language]}</p>\r\n                            <p onClick={() => handleSubmit('ame-salaried')} className='economic-profile-selector'>{text.financing.northAmericanSalaried[language]}</p>\r\n                            <p onClick={() => handleSubmit('ame-independent')} className='economic-profile-selector'>{text.financing.northAmericanIndependent[language]}</p>\r\n                            <p onClick={() => handleSubmit('foreign')} className='economic-profile-selector'>{text.financing.foreign[language]}</p>\r\n                            <p onClick={() => handleSubmit('company')} className='economic-profile-selector'>{text.financing.company[language]}</p>\r\n                        </div>\r\n                        <div className=\"multiple-buttons\">\r\n                            <Link to='/choose'><Button className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(Finance)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, message, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInfoAction, updateUserAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FinanctialProfilesData = ({match, history, info, fetching, dataUpdated, language, getData, handleInfo, updateUser}) => {\r\n\r\n\r\n    let [loading, setLoading] = useState(false)\r\n    // params.profile\r\n    let { params } = match\r\n\r\n    let handleSubmit = () => {\r\n        // updateUser()\r\n        history.push('/financing-form')\r\n    }\r\n\r\n    let changeProfile = () => {\r\n        updateUser({economicProfile: null})\r\n        setLoading(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if( !fetching && info.economicProfile === null) return history.push(`/financing`)\r\n    }, [info])\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated && loading) return history.push('/financing')\r\n    }, [dataUpdated])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/finance.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.financing[language]}</p>\r\n                            </div>\r\n                        <h2>{text.financing.putDataTitle[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                          <p className=\"finance-docs-title\">{\r\n                            params.profile === 'nat-salaried' ? \r\n                                text.financing.nationalSalaried[language]\r\n                            : params.profile === 'nat-independent' ? \r\n                                text.financing.nationalIndependent[language]\r\n                            : params.profile === 'ame-salaried' ? \r\n                                text.financing.northAmericanSalaried[language]\r\n                            : params.profile === 'ame-independent' ? \r\n                                text.financing.northAmericanIndependent[language]\r\n                            : params.profile === 'foreign' ? \r\n                                text.financing.foreign[language]\r\n                            : params.profile === 'company' ? \r\n                                text.financing.company[language]\r\n                            :\r\n                                null\r\n                          }</p>\r\n                          <ol className='finance-docs-list'>\r\n                            {\r\n                                params.profile === 'nat-salaried' ? \r\n                                    text.financing.nationalSalariedDocs.map((doc, ix) => \r\n                                        <li key={ix}>{doc[language]} <input type=\"file\"/></li>\r\n                                    )\r\n                                : params.profile === 'nat-independent' ? \r\n                                    text.financing.nationalIndependentDocs.map((doc, ix) => \r\n                                        <li key={ix}>{doc[language]} <input type=\"file\"/></li>\r\n                                    )\r\n                                : params.profile === 'ame-salaried' ? \r\n                                    text.financing.americanSalariedDocs.map((doc, ix) => \r\n                                        <li key={ix}>{doc[language]} <input type=\"file\"/></li>\r\n                                    )\r\n                                : params.profile === 'ame-independent' ? \r\n                                    text.financing.americanIndependentDocs.map((doc, ix) => \r\n                                        <li key={ix}>{doc[language]} <input type=\"file\"/></li>\r\n                                    )\r\n                                : params.profile === 'foreign' ? \r\n                                    text.financing.foreignDocs.map((doc, ix) => \r\n                                        <li key={ix}>{doc[language]} <input type=\"file\"/></li>\r\n                                    )\r\n                                : params.profile === 'company' ? \r\n                                    text.financing.companyDocs.map((doc, ix) => \r\n                                        <li key={ix}>{doc[language]} <input type=\"file\"/></li>\r\n                                    )\r\n                                :\r\n                                    null\r\n                            }\r\n                          </ol>\r\n                          <p onClick={changeProfile} className='change-financial-profile'>{loading ? <Spin  size='small'/> : text.financing.changeProfile[language]}</p>\r\n                        </div>\r\n                        <div className=\"multiple-buttons small-buttons\">\r\n                            <Link to='/choose'><Button className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button className='nav-button'>{text.financing.viewDocsButton[language]}</Button>\r\n                            <Button onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(FinanctialProfilesData)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Input, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInfoAction, updateUserAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FinancialForm = ({info, dataUpdated, history, fetching, language, getData, updateUser, handleInfo}) => {\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/finance.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.financing[language]}</p>\r\n                            </div>\r\n                            <h2 className='small-title'>{text.financingForm.title[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <p className='finance-form-subtitle1'>{text.financingForm.fillInputs[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.officePhone} name='officePhone' placeholder={text.financingForm.officePhone[language]}/>\r\n                                <Input onChange={handleInfo} value={info.homePhone} name='homePhone' placeholder={text.financingForm.homePhone[language]}/>\r\n                                <Input onChange={handleInfo} value={info.rfc} name='rfc' placeholder={text.financingForm.rfc[language]}/>\r\n                                <Input onChange={handleInfo} value={info.cellPhone} name='cellPhone' placeholder={text.financingForm.cellPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input disabled value={info.email} name='email' placeholder={text.financingForm.email[language]}/>\r\n                                <Input onChange={handleInfo} value={info.livingTime} name='livingTime' placeholder={text.financingForm.livingTime[language]}/>\r\n                                <Input onChange={handleInfo} value={info.occupation} name='occupation' placeholder={text.financingForm.occupation[language]}/>\r\n                            </div>\r\n                            <p className='finance-form-subtitle2'>{text.financingForm.livesInHouse[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.address} name='address' placeholder={text.financingForm.address[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.companyName} name='companyName' placeholder={text.financingForm.companyName[language]}/>\r\n                                <Input onChange={handleInfo} value={info.companyField} name='companyField' placeholder={text.financingForm.companyField[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.companyAddress} name='companyAddress' placeholder={text.financingForm.companyAddress[language]}/>\r\n                                <Input onChange={handleInfo} value={info.companyTime} name='companyTime' placeholder={text.financingForm.companyTime[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.functionsDescription} name='functionsDescription' placeholder={text.financingForm.functionsDescription[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.companyRole} name='companyRole' placeholder={text.financingForm.companyRole[language]}/>\r\n                                <Input onChange={handleInfo} value={info.academicLevel} name='academicLevel' placeholder={text.financingForm.academicLevel[language]}/>\r\n                                <Input onChange={handleInfo} value={info.economicDependants} name='economicDependants' placeholder={text.financingForm.economicDependants[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.height} name='height' placeholder={text.financingForm.height[language]}/>\r\n                                <Input onChange={handleInfo} value={info.weight} name='weight' placeholder={text.financingForm.weight[language]}/>\r\n                                <Input onChange={handleInfo} value={info.ssn} name='ssn' placeholder={text.financingForm.ssn[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.carBrand} name='carBrand' placeholder={text.financingForm.carBrand[language]}/>\r\n                                <Input onChange={handleInfo} value={info.carValue} name='carValue' placeholder={text.financingForm.carValue[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.realStateNumber} name='realStateNumber' placeholder={text.financingForm.realStateNumber[language]}/>\r\n                                <Input onChange={handleInfo} value={info.realStateValue} name='realStateValue' placeholder={text.financingForm.realStateValue[language]}/>\r\n                            </div>\r\n                            <p className='finance-form-subtitle1'>{text.financingForm.referenceTitle[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.contact1Name} name='contact1Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleInfo} value={info.contact1Address} name='contact1Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input onChange={handleInfo} value={info.contact1Phone} name='contact1Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.contact2Name} name='contact2Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleInfo} value={info.contact2Address} name='contact2Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input onChange={handleInfo} value={info.contact2Phone} name='contact2Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.contact3Name} name='contact3Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleInfo} value={info.contact3Address} name='contact3Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input onChange={handleInfo} value={info.contact3Phone} name='contact3Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.contact4Name} name='contac4tName' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleInfo} value={info.contact4Address} name='contactAd4dress' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input onChange={handleInfo} value={info.contact4Phone} name='contact4Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple-buttons small-buttons\">\r\n                            <Button className='nav-button'>{text.button.save[language]}</Button>\r\n                            <Button className='nav-button'>{text.button.preview[language]}</Button>\r\n                            <Button className='nav-button'>{text.button.print[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction,\r\n        handleInfo: handleInfoAction\r\n    }\r\n)(FinancialForm)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Select, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactImageMagnify from 'react-image-magnify'\r\nlet { Option } = Select\r\n\r\nconst InteriorDesign = ({info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n    let handleSubmit = typeInput => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/intDesign.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.interiorDesign[language]}</p>\r\n                            </div>\r\n                        <h2>{text.sidebarSubtitle.interiorDesign[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"int-design-container\">\r\n                                <div className=\"int-design-left\">\r\n                                    <ReactImageMagnify\r\n                                    {...{\r\n                                        smallImage: {\r\n                                            alt: 'Demo',\r\n                                            isFluidWidth: true,\r\n                                            src: '/img/intDesign/design-bg.png'\r\n                                        },\r\n                                        largeImage: {\r\n                                            src: '/img/intDesign/design-bg.png',\r\n                                            width: 1200,\r\n                                            height: 1800\r\n                                        },\r\n                                        enlargedImageContainerDimensions: {\r\n                                            width: 300,\r\n                                            height: '100%'\r\n                                        }\r\n                                    }} \r\n                                    />\r\n                                </div>\r\n                                <div className=\"int-design-right\">\r\n                                    <div className=\"int-design-select\">\r\n                                        <p>{text.interiorDesign.area[language]}: </p>\r\n                                        <Select\r\n                                            defaultValue='1'\r\n                                        >\r\n                                            <Option value='1'>{text.interiorDesign.kitchen[language]}</Option>\r\n                                            <Option value='2'>{text.interiorDesign.livingRoom[language]}</Option>\r\n                                        </Select>\r\n                                    </div>\r\n                                    <div className=\"int-design-select\">\r\n                                        <p>{text.interiorDesign.options[language]}: </p>\r\n                                        <Select\r\n                                            defaultValue='1'\r\n                                        >\r\n                                            <Option value='1'>{text.interiorDesign.floor[language]}</Option>\r\n                                            <Option value='2'>{text.interiorDesign.walls[language]}</Option>\r\n                                        </Select>\r\n                                    </div>\r\n                                    <div className=\"sample-container\">\r\n                                        <img src=\"/img/intDesign/floor1.png\" alt=\"floor\"/>\r\n                                        <img src=\"/img/intDesign/floor2.png\" alt=\"floor\"/>\r\n                                        <img src=\"/img/intDesign/floor3.png\" alt=\"floor\"/>\r\n                                        <img src=\"/img/intDesign/floor4.png\" alt=\"floor\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(InteriorDesign)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PropietaryService = ({info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n    let handleSubmit = typeInput => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div style={{marginBottom: '2rem'}}>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/ownerServ.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.propietaryService[language]}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"propietary-cards-container\">\r\n                                <div className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/HOA.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.hoa[language]}</p>\r\n                                </div>\r\n                                <div className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/housecleaning.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.houseCleaning[language]}</p>\r\n                                </div>\r\n                                <div className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/electricity.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.manteinanceServices[language]}</p>\r\n                                </div>\r\n                                <div className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/cableinternet.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.cable[language]}</p>\r\n                                </div>\r\n                                <div className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/trash.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.publicServices[language]}</p>\r\n                                </div>\r\n                                <div className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/interiordesign.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.interiorDesign[language]}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(PropietaryService)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FAQ = ({info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n    let handleSubmit = typeInput => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/faq-gray.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.faq[language]}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"propietary-cards-container\">\r\n                                <Link to='/faq/faq1' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/housecleaning.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.houseCleaning[language]}</p>\r\n                                </Link>\r\n                                <Link to='/faq/faq2' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/electricity.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.manteinanceServices[language]}</p>\r\n                                </Link>\r\n                                <Link to='/faq/faq3' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/cableinternet.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.cable[language]}</p>\r\n                                </Link>\r\n                                <Link to='/faq/faq4' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/trash.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.publicServices[language]}</p>\r\n                                </Link>\r\n                                <Link to='/faq/faq5' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/interiordesign.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.interiorDesign[language]}</p>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(FAQ)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Input, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Help = ({info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n    let handleSubmit = typeInput => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/help-gray.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.help[language]}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"help-container\">\r\n                                <p className='help-title'>{text.help.title[language]}</p>\r\n                                <Input.TextArea rows='4' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(Help)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Collapse, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\nimport { Link } from 'react-router-dom'\r\nlet { Panel } = Collapse\r\n\r\nconst Faqinfo = ({info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n    let handleSubmit = typeInput => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/faq-gray.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.faq[language]}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <div className=\"accordion-container\">\r\n                                <Collapse defaultActiveKey={['1']}>\r\n                                    <Panel header=\"QUESTION 1\" key=\"1\">\r\n                                        <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aspernatur, tenetur velit. Distinctio possimus veniam dicta error in quas, dolorem est molestias, totam obcaecati ducimus, illum maiores dolorum. Sequi, alias ullam.</p>\r\n                                    </Panel>\r\n                                    <Panel header=\"QUESTION 2\" key=\"2\">\r\n                                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. A cupiditate reprehenderit hic, natus at quisquam aliquam cumque commodi nesciunt porro quaerat laboriosam officia repellendus quidem repudiandae eius exercitationem molestias ad.</p>\r\n                                    </Panel>\r\n                                    <Panel header=\"QUESTION 3\" key=\"3\">\r\n                                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati, iure eius est, eos ab neque minima exercitationem nostrum ut dicta debitis rerum sequi dolore, error vero consectetur quas corrupti. Minima.</p>\r\n                                    </Panel>\r\n                                </Collapse>\r\n                            </div>\r\n                            <Link to='/faq'><Button className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(Faqinfo)\r\n","import React, { useEffect } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { checkSessionAction } from './redux/userDuck'\r\nimport Login from './components/auth/Login'\r\nimport RegisterFormLayout from './components/auth/RegisterFormLayout'\r\nimport ForgotPassword from './components/auth/forgotPassword/ForgotPassword'\r\nimport ForgotPasswordToken from './components/auth/forgotPassword/ForgotPasswordToken'\r\nimport Profile from './components/home/Profile'\r\nimport ChooseHouse from './components/home/ChooseHouse'\r\nimport BuyHouse from './components/home/BuyHouse'\r\nimport UserData from './components/home/UserData'\r\nimport AddHouse from './components/admin/AddHouse'\r\nimport Documentation from './components/home/Documentation'\r\nimport Finance from './components/home/Finance'\r\nimport FinantialProfilesData from './components/home/financeProfiles/FinantialProfilesData'\r\nimport FinancialForm from './components/home/financeProfiles/FinancialForm'\r\nimport InteriorDesign from './components/home/InteriorDesign'\r\nimport PropietaryService from './components/home/PropietaryService'\r\nimport FAQ from './components/home/FAQ'\r\nimport Help from './components/home/Help'\r\nimport FaqInfo from './components/home/faqComponents/FaqInfo'\r\n\r\nlet PrivateRoute = ({logged, path, component, ...remainingProps}) => {\r\n    if(logged) return <Route path={path} component={component} {...remainingProps}/>\r\n    return <Redirect to='/login' {...remainingProps}/>\r\n}\r\n\r\nlet AdminRoute = ({userType, logged, path, component, ...remainingProps}) => {\r\n    if(logged) return <Route path={path} component={component} {...remainingProps}/>\r\n    // ADD SECURITY\r\n    // if(logged && userType === 'agent') return <Route path={path} component={component} {...remainingProps}/>\r\n    return <Redirect to='/login' {...remainingProps}/>\r\n}\r\n\r\nlet AuthRoute = ({logged, path, component, ...remainingProps}) => {\r\n    if(logged) return <Redirect to='/' {...remainingProps}/>\r\n    return <Route path={path} component={component} {...remainingProps}/> \r\n}\r\n\r\nlet Routes = ({info, logged, checkSession}) => {\r\n\r\n    let { userType } = info\r\n\r\n    useEffect(() => {\r\n        checkSession()\r\n        // eslint-disable-next-line\r\n    },[])\r\n\r\n    return <Switch>\r\n        <AuthRoute path='/login' logged={logged} component={Login}/>\r\n        <AuthRoute path='/register/:type' logged={logged} component={RegisterFormLayout}/>\r\n        <AuthRoute exact path='/recover-password' logged={logged} component={ForgotPassword}/>\r\n        <AuthRoute path='/recover-password/token' logged={logged} component={ForgotPasswordToken}/>\r\n        <PrivateRoute exact path='/' logged={logged} component={Profile}/>\r\n        <PrivateRoute path='/profile' logged={logged} component={Profile}/>\r\n        <PrivateRoute path='/choose' logged={logged} component={ChooseHouse}/>\r\n        <PrivateRoute path='/buy' logged={logged} component={BuyHouse}/>\r\n        <PrivateRoute path='/data' logged={logged} component={UserData}/>\r\n        <PrivateRoute path='/documentation' logged={logged} component={Documentation}/>\r\n        <PrivateRoute exact path='/financing' logged={logged} component={Finance}/>\r\n        <PrivateRoute path='/financing/:profile' logged={logged} component={FinantialProfilesData}/>\r\n        <PrivateRoute path='/financing-form' logged={logged} component={FinancialForm}/>\r\n        <PrivateRoute path='/interior-design' logged={logged} component={InteriorDesign}/>\r\n        <PrivateRoute path='/propietary-service' logged={logged} component={PropietaryService}/>\r\n        <PrivateRoute exact path='/faq' logged={logged} component={FAQ}/>\r\n        <PrivateRoute path='/faq/:module' logged={logged} component={FaqInfo}/>\r\n        <PrivateRoute path='/help' logged={logged} component={Help}/>\r\n        <AdminRoute exact path='/admin/addHouse' userType={userType} logged={logged} component={AddHouse}/>\r\n    </Switch>\r\n}\r\n\r\nlet mapState = ({user: {logged, info}}) => ({logged, info})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        checkSession: checkSessionAction\r\n    }\r\n)(Routes)","import React from 'react';\r\nimport Navbar from './components/common/Navbar';\r\nimport Footer from './components/common/Footer';\r\nimport Routes from './Routes';\r\nimport { Layout } from 'antd';\r\nconst { Content } = Layout\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Navbar/>\r\n      <Content>\r\n        <Routes/>\r\n      </Content>\r\n      <Footer/>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport userReducer from './userDuck'\r\nimport appReducer from './appDuck'\r\nimport dataReducer from './dataDuck'\r\nimport adminReducer from './adminDuck'\r\n\r\nlet rootReducer = combineReducers({\r\n    app: appReducer,\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    admin: adminReducer\r\n})\r\n\r\nlet composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nlet middlewares = [thunk]\r\n\r\nlet generateStore = () => createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n)\r\n\r\nlet generateStoreProduction = () => createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middlewares)\r\n)\r\n\r\nexport default process.env.NODE_ENV === 'development' ? generateStore : generateStoreProduction","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { CookiesProvider } from 'react-cookie'\r\nimport { Provider } from 'react-redux'\r\nimport generateStore from './redux/store'\r\nimport 'antd/dist/antd.css';\r\nimport './styles.scss';\r\nlet store = generateStore()\r\n\r\nlet WithRouter = () => <BrowserRouter><App/></BrowserRouter>\r\nlet WithStore = () => <Provider store={store}><WithRouter/></Provider>\r\nlet WithCookies = () => <CookiesProvider><WithStore/></CookiesProvider>\r\n\r\nReactDOM.render(\r\n    <WithCookies/>, document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}