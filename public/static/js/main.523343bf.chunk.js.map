{"version":3,"sources":["services/api.js","redux/userDuck.js","components/text/index.js","redux/appDuck.js","components/common/AuthNav.jsx","components/common/Navbar.jsx","components/common/Footer.jsx","components/auth/LoginForm.jsx","components/auth/Login.jsx","components/auth/registerComponents/AgentData.jsx","components/auth/registerComponents/BasicData.jsx","components/auth/registerComponents/ProviderData.jsx","components/auth/RegisterFormLayout.jsx","components/auth/forgotPassword/ForgotPassword.jsx","components/auth/forgotPassword/ForgotPasswordToken.jsx","redux/dataDuck.js","components/home/Profile.jsx","components/home/chooseHouseComponents/ChooseHouseMap.jsx","components/home/ChooseHouse.jsx","components/home/buyHouseComponents/BuyHouseMap.jsx","components/home/BuyHouse.jsx","components/home/UserData.jsx","redux/adminDuck.js","components/admin/AddHouse.jsx","Routes.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["url","token","data","axios","post","initialData","fetching","info","error","logged","Cookies","get","tokenSent","validCode","passwordChanged","reducer","state","action","type","payload","signupAction","signupData","dispatch","then","res","set","maxAge","userInfo","email","catch","err","response","logoutAction","remove","roles","buyer","english","español","seller","agent","serviceProvider","form","required","forgotPassword","forgotPasswordLink","register","registerLink","button","send","next","login","return","update","continue","returnCaps","messages","missingFields","missingSelection","incorrectEmail","incorrectPassword","repeatedPasswordError","consent","wrongPassword","requestError","enterTokenError","dataUpdated","responses","yes","no","navbar","index","aboutUs","amenities","contact","portalTitle","portalSubtitle","emailPlaceholder","passwordPlaceholder","portalSubtitleBuyer","portalSubtitleSeller","portalSubtitleAgent","portalSubtitleProvider","loginLink","firstName","lastName","secondLastName","company","phone","beneficiary","beneficiaryTitle","beneficiaryEmail","beneficiaryPhone","selectAgent","password","repeatPassword","confirm","allowNewsletter","signLinkBuyer","signLinkAgent","signLinkProvider","recoverPassword","title","message","successEmail","successToken","recoverMessage","enterToken","enterNewPassword","pwdIndicator","pwdError","pwdSuccess","redirect","sidebar","profile","chooseHouse","buyHouse","documentation","financing","interiorDesign","propietaryService","faq","help","sidebarSubtitle","country","birthDate","inputLotNumber","inputLotSize","inputLotModel","addLot","forSale","occupied","titlePrice","available","notAvailable","bedrooms","bathrooms","cars","price","remember","docsDescription","doc1","doc2","doc3","doc4","approveTitle","approvalDescription","firstApproval","secondApproval","activeProcess","startTransaction","secureTransaction","language","changeLangAction","getState","app","connect","toggleLanguage","logout","withRouter","location","className","src","alt","onClick","to","pathname","text","user","useState","activeBurger","setActiveBurger","isDesktop","useMediaQuery","query","menu","Item","key","overlay","trigger","isActive","buttonWidth","userData","history","setData","handleData","e","target","name","value","useEffect","status","push","initialValues","onFinish","test","toLowerCase","warning","rules","onChange","placeholder","Password","loading","htmlType","signup","checked","length","warn","Option","Select","customerAgent","defaultValue","match","params","sendToken","setEmail","handleSubmit","onKeyPress","checkCode","changePassword","setToken","setPassword","handleNewPassword","success","setTimeout","fetchingData","fetchingHouse","house","updateUserAction","additionalData","completeData","handleInfoAction","event","getDataAction","id","getData","handleInfo","updateUser","setConsent","size","userType","format","disabledDate","current","moment","endOf","showToday","ChooseHouseMap","model","ReactImageMagnify","smallImage","isFluidWidth","largeImage","width","height","enlargedImageContainerDimensions","EnvironmentOutlined","href","lotModel","setLotModel","additionalLotData","setAdditionalLotData","additionalLot","setAdditionalLot","lotSize","setLotSize","additionalLotSize","setAdditionalLotSize","handleAdditionalLotData","additionalLotModel","parseInt","handleLotSize","lotNumber","suffix","handleAdditionalLotSize","additionalLotNumber","BuyHouseMap","mainImage","selectedImage","setSelectedImage","setFirstApproval","setSecondApproval","otherImages","map","imageLink","ix","toLocaleString","style","currency","getHouse","getHouseData","houseId","disabled","UserData","houseData","houseUploaded","admin","addHouse","handleHouseData","englishDescription","españolDescription","berdrooms","PrivateRoute","path","component","remainingProps","AdminRoute","AuthRoute","checkSession","jwt","Login","RegisterFormLayout","exact","ForgotPassword","ForgotPasswordToken","Profile","ChooseHouse","BuyHouse","AddHouse","Content","Layout","App","Boolean","window","hostname","rootReducer","combineReducers","appReducer","userReducer","dataReducer","adminReducer","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","thunk","process","createStore","applyMiddleware","store","generateStore","WithRouter","WithStore","WithCookies","CookiesProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.523343bf.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nlet url = 'http://localhost:3000'\r\n\r\n// AUTH\r\nexport let signup = data => axios.post(`${url}/auth/signup`, data)\r\nexport let login = data => axios.post(`${url}/auth/login`, data)\r\nexport let token = data => axios.post(`${url}/auth/token`, data)\r\nexport let checkCode = data => axios.post(`${url}/auth/checkCode`, data)\r\nexport let changePassword = data => axios.post(`${url}/auth/changePassword`, data)\r\nexport let updateUser = data => axios.post(`${url}/auth/updateUser`, data)\r\nexport let logout = () => axios.get(`${url}/auth/logout`)\r\n\r\n// ADMIN\r\nexport let addHouse = data => axios.post(`${url}/admin/addHouse`, data)\r\nexport let getHouse = data => axios.post(`${url}/admin/getHouse`, data)\r\n\r\n// DATA\r\nexport let getData = data => axios.post(`${url}/data/getData`, data)\r\nexport let getHouseData = data => axios.post(`${url}/data/getHouse`, data)","import { signup, login, logout, token, checkCode, changePass, changePassword} from \"../services/api\"\r\nimport { Cookies } from \"react-cookie\"\r\n\r\nlet initialData = {\r\n    fetching: true,\r\n    info: {},\r\n    error: {},\r\n    logged: new Cookies().get('id') ? true : false,\r\n    tokenSent: false,\r\n    validCode: false,\r\n    passwordChanged: false\r\n}\r\n\r\nlet LOGIN = 'LOGIN'\r\nlet LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nlet LOGIN_ERROR = 'LOGIN_ERROR'\r\n\r\nlet SIGNUP = 'SIGNUP'\r\nlet SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nlet SIGNUP_ERROR = 'SIGNUP_ERROR'\r\n\r\nlet SEND_TOKEN = 'SEND_TOKEN'\r\nlet SEND_TOKEN_SUCCESS = 'SEND_TOKEN_SUCCESS'\r\nlet SEND_TOKEN_ERROR = 'SEND_TOKEN_ERROR'\r\n\r\nlet CHECK_CODE = 'CHECK_CODE'\r\nlet CHECK_CODE_SUCCESS = 'CHECK_CODE_SUCCESS'\r\nlet CHECK_CODE_ERROR = 'CHECK_CODE_ERROR'\r\n\r\nlet CHANGE_PASSWORD = 'CHANGE_PASSWORD'\r\nlet CHANGE_PASSWORD_SUCCESS = 'CHANGE_PASSWORD_SUCCESS'\r\nlet CHANGE_PASSWORD_ERROR = 'CHANGE_PASSWORD_ERROR'\r\n\r\nlet LOGOUT = 'LOGOUT'\r\n\r\nlet CHECK_SESSION = 'CHECK_SESSION'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n\r\n        case LOGIN:\r\n            return {...state, fetching: true, info: initialData.info, error: {}}\r\n        case LOGIN_SUCCESS:\r\n            return {...state, fetching: false}\r\n        case LOGIN_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case SIGNUP:\r\n            return {...state, fetching: true, info: initialData.info, error: {}}\r\n        case SIGNUP_SUCCESS:\r\n            return {...state, fetching: false}\r\n        case SIGNUP_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case SEND_TOKEN:\r\n            return {...state, tokenSent: false, fetching: true, error: {}}\r\n        case SEND_TOKEN_SUCCESS:\r\n            return {...state, tokenSent: true, fetching: false}\r\n        case SEND_TOKEN_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case CHECK_CODE:\r\n            return {...state, validCode: false, fetching: true, error: {}}\r\n        case CHECK_CODE_SUCCESS:\r\n            return {...state, validCode: true, fetching: false}\r\n        case CHECK_CODE_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case CHANGE_PASSWORD:\r\n            return {...state, passwordChanged: false, fetching: true, error: {}}\r\n        case CHANGE_PASSWORD_SUCCESS:\r\n            return {...state, passwordChanged: true, fetching: false}\r\n        case CHANGE_PASSWORD_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case LOGOUT:\r\n            return {...state, info: initialData.info, logged: false}\r\n\r\n        case CHECK_SESSION:\r\n            return {...state, logged: action.payload.logged, info: action.payload.info, fetching: action.payload.fetching}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let changePasswordAction = password => dispatch => {\r\n    let email = new Cookies().get('recoveryEmail')\r\n    if(!email) dispatch({\r\n        type: CHANGE_PASSWORD_ERROR,\r\n        payload: {status: 404}\r\n    })\r\n    dispatch({\r\n        type: CHANGE_PASSWORD\r\n    })\r\n    changePassword({...email, password})\r\n        .then(res => dispatch({\r\n            type: CHANGE_PASSWORD_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: CHANGE_PASSWORD_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let checkTokenAction = token => dispatch => {\r\n    let email = new Cookies().get('recoveryEmail')\r\n    if(!email) dispatch({\r\n        type: CHECK_CODE_ERROR,\r\n        payload: {status: 404}\r\n    })\r\n    dispatch({\r\n        type: CHECK_CODE\r\n    })\r\n    checkCode({token})\r\n        .then(res => dispatch({\r\n            type: CHECK_CODE_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: CHECK_CODE_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let sendTokenAction = email => dispatch => {\r\n    new Cookies().set('recoveryEmail', email, {maxAge: 60 * 60 * 2})\r\n    dispatch({\r\n        type: SEND_TOKEN\r\n    })\r\n    token({email})\r\n        .then(res => dispatch({\r\n            type: SEND_TOKEN_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: SEND_TOKEN_ERROR,\r\n            payload: err.response\r\n        }))\r\n} \r\n\r\nexport let signupAction = signupData => dispatch => {\r\n    dispatch({\r\n        type: SIGNUP\r\n    })\r\n    signup(signupData)\r\n        .then(res => {\r\n            let { data } = res\r\n            new Cookies().set('id', data.token, {maxAge: 60 * 60 * 24})\r\n            new Cookies().set('user', data.userInfo, {maxAge: 60 * 60 * 24})\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS\r\n            })\r\n            dispatch({\r\n                type: CHECK_SESSION,\r\n                payload: {logged: true, info: data.userInfo, fetching: false}\r\n            })\r\n            token({email: signupData.email})\r\n        })\r\n        .catch(err => dispatch({\r\n            type: SIGNUP_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let checkSessionAction = () => dispatch => {\r\n    let jwt = new Cookies().get('id')\r\n    let user = new Cookies().get('user')\r\n    if(jwt){ \r\n        user && dispatch({\r\n            type: CHECK_SESSION,\r\n            payload: {logged: true, info: user, fetching: false}\r\n        })\r\n        return\r\n    }\r\n    return dispatch({\r\n        type: CHECK_SESSION,\r\n        payload: {logged: false, info: {}, fetching: false}\r\n    })\r\n}\r\n\r\nexport let loginAction = userData => dispatch => {\r\n    dispatch({\r\n        type: LOGIN\r\n    })\r\n    login(userData)\r\n        .then(res => {\r\n            let { data } = res\r\n            new Cookies().set('id', data.token, {maxAge: 60 * 60 * 24})\r\n            new Cookies().set('user', data.userInfo, {maxAge: 60 * 60 * 24})\r\n            dispatch({\r\n                type: LOGIN_SUCCESS\r\n            })\r\n            dispatch({\r\n                type: CHECK_SESSION,\r\n                payload: {logged: true, info: data.userInfo, fetching: false}\r\n            })\r\n        })\r\n        .catch(err => dispatch({\r\n            type: LOGIN_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let logoutAction = () => dispatch => {\r\n    logout()\r\n    new Cookies().remove('id')\r\n    new Cookies().remove('user')\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}","export default {\r\n    roles: {\r\n        buyer: {\r\n            english: 'BUYER',\r\n            español: 'COMPRADOR'\r\n        },\r\n        seller: {\r\n            english: 'SELLER',\r\n            español: 'VENDEDOR'\r\n        },\r\n        agent: {\r\n            english: 'AGENT',\r\n            español: 'REPRESENTANTE'\r\n        },\r\n        serviceProvider: {\r\n            english: 'SERVICE PROVIDER',\r\n            español: 'PROVEEDOR DE SERVICIO'            \r\n        }\r\n    },\r\n    form: {\r\n        required: {\r\n            english: 'Required',\r\n            español: 'Requerido'\r\n        },\r\n        forgotPassword: {\r\n            english: 'FORGOT YOUR PASSWORD?',\r\n            español: '¿OLVIDASTE TU CONTRASEÑA?'\r\n        },\r\n        forgotPasswordLink: {\r\n            english: 'CLICK HERE',\r\n            español: 'HAZ CLICK AQUÍ'\r\n        },\r\n        register: {\r\n            english: \"STILL DON'T HAVE AN ACCOUNT?\",\r\n            español: '¿AÚN NO TIENES UNA CUENTA?'\r\n        },\r\n        registerLink: {\r\n            english: 'REGISTER HERE',\r\n            español: 'REGÍSTRATE AQUÍ'\r\n        }\r\n    },\r\n    button: {\r\n        send: {\r\n            english: 'SEND',\r\n            español: 'ENVIAR'\r\n        },\r\n        next: {\r\n            english: 'NEXT',\r\n            español: 'SIGUIENTE'\r\n        },\r\n        login: {\r\n            english: 'LOGIN',\r\n            español: 'INICIAR SESIÓN'\r\n        },\r\n        register: {\r\n            english: 'REGISTER',\r\n            español: 'REGISTRARME'\r\n        },\r\n        return: {\r\n            english: 'Return',\r\n            español: 'Regresar'\r\n        },\r\n        update: {\r\n            english: 'UPDATE',\r\n            español: 'ACTUALIZAR'\r\n        },\r\n        continue: {\r\n            english: 'CONTINUE',\r\n            español: 'CONTINUAR'\r\n        },\r\n        returnCaps: {\r\n            english: 'RETURN',\r\n            español: 'REGRESAR'\r\n        }\r\n    },\r\n    messages: {\r\n        missingFields: {\r\n            english: 'You must fill all the inputs',\r\n            español: 'Debes llenar todos los campos'\r\n        },\r\n        missingSelection: {\r\n            english: 'You must select an option',\r\n            español: 'Debes seleccionar una opción'\r\n        },\r\n        incorrectEmail: {\r\n            english: 'Please type a valid email',\r\n            español: 'Por favor ingresa un correo válido'\r\n        },\r\n        incorrectPassword: {\r\n            english: 'Your password must have at least 6 characters and 1 number',\r\n            español: 'Tu contraseña debe tener al menos 6 caracteres y 1 número'\r\n        },\r\n        repeatedPasswordError: {\r\n            english: \"The passwords don't match\",\r\n            español: 'Las contraseñas no coinciden'\r\n        },\r\n        consent: {\r\n            english: 'You must confirm that the information is real',\r\n            español: 'Debes confirmar que tus datos son reales'\r\n        },\r\n        wrongPassword: {\r\n            english: 'Incorrect password',\r\n            español: 'Contraseña incorrecta'\r\n        },\r\n        requestError: {\r\n            english: 'We could not complete your request',\r\n            español: 'No pudimos completar tu solicitud'\r\n        },\r\n        enterTokenError: {\r\n            english: 'Incorrect code',\r\n            español: 'Código incorrecto' \r\n        },\r\n        dataUpdated: {\r\n            english: 'Data updated',\r\n            español: 'Información actualizada'\r\n        }\r\n    },\r\n    responses: {\r\n        yes: {\r\n            english: 'YES',\r\n            español: 'SI'\r\n        },\r\n        no: {\r\n            english: 'NO',\r\n            español: 'NO'\r\n        }\r\n    },\r\n    navbar: {\r\n        index: {\r\n            english: 'HOME',\r\n            español: 'INICIO'\r\n        },\r\n        aboutUs: {\r\n            english: 'ABOUT US',\r\n            español: 'SOBRE NOSOTROS'\r\n        },\r\n        amenities: {\r\n            english: 'AMENITIES',\r\n            español: 'AMENIDADES'\r\n        },\r\n        contact: {\r\n            english: 'CONTACT US',\r\n            español: 'CONTACTO'\r\n        }\r\n    },\r\n    login: {\r\n        portalTitle: {\r\n            english: 'CUSTOMER PORTAL',\r\n            español: 'PORTAL DE CLIENTES'\r\n        },\r\n        portalSubtitle: {\r\n            english: 'LOGIN',\r\n            español: 'INICIAR SESIÓN'\r\n        },\r\n        emailPlaceholder : {\r\n            english: 'WRITE YOUR EMAIL',\r\n            español: 'ESCRIBE TU CORREO'\r\n        },\r\n        passwordPlaceholder : {\r\n            english: 'WRITE YOUR PASSWORD',\r\n            español: 'ESCRIBE TU CONTRASEÑA'\r\n        },\r\n    },\r\n    register: {\r\n        portalTitle: {\r\n            english: 'CUSTOMER PORTAL',\r\n            español: 'PORTAL DE CLIENTES'\r\n        },\r\n        portalSubtitleBuyer: {\r\n            english: 'BUYER REGISTER',\r\n            español: 'REGISTRO DE COMPRADOR'\r\n        },\r\n        portalSubtitleSeller: {\r\n            english: 'SELLER REGISTER',\r\n            español: 'REGISTRO DE VENDEDOR'\r\n        },\r\n        portalSubtitleAgent: {\r\n            english: 'AGENT REGISTER',\r\n            español: 'REGISTRO DE AGENTE'\r\n        },\r\n        portalSubtitleProvider: {\r\n            english: 'SERVICE PROVIDER REGISTER',\r\n            español: 'REGISTRO DE PROVEEDOR DE SERVICIOS'\r\n        },\r\n        login: {\r\n            english: \"HAVE AN ACCOUNT?\",\r\n            español: '¿YA TIENES UNA CUENTA?'\r\n        },\r\n        loginLink: {\r\n            english: 'LOGIN',\r\n            español: 'INICIA SESIÓN'\r\n        },\r\n        firstName: {\r\n            english: 'NAME',\r\n            español: 'NOMBRE'\r\n        },\r\n        lastName: {\r\n            english: 'LAST NAME',\r\n            español: 'APELLIDO PATERNO'\r\n        },\r\n        secondLastName : {\r\n            español: 'APELLIDO MATERNO'\r\n        },\r\n        company: {\r\n            english: 'WRITE THE NAME OF THE COMPANY YOU REPRESENT',\r\n            español: 'ESCRIBE EL NOMBRE DE LA COMPAÑÍA QUE REPRESENTAS'\r\n        },\r\n        email: {\r\n            english: 'WRITE YOUR EMAIL',\r\n            español: 'ESCRIBE TU CORREO'\r\n        },\r\n        phone: {\r\n            english: 'WRITE YOUR PHONE',\r\n            español: 'ESCRUBE TU TELÉFONO'\r\n        },\r\n        beneficiary: {\r\n            english: 'DO YOU WANT TO ADD A BENEFICIARY?',\r\n            español: '¿DESEAS AÑADIR UN BENEFICIARIO?'\r\n        },\r\n        beneficiaryTitle: {\r\n            english: 'BENEFICIARY DATA',\r\n            español: 'DATOS DEL BENEFICIARIO'\r\n        },\r\n        beneficiaryEmail: {\r\n            english: 'EMAIL',\r\n            español: 'SU CORREO'\r\n        },\r\n        beneficiaryPhone: {\r\n            english: 'PHONE',\r\n            español: 'TELÉFONO'\r\n        },\r\n        selectAgent: {\r\n            english: 'SELECT YOUR AGENT',\r\n            español: 'SELECCIONA TU AGENTE'\r\n        },\r\n        password: {\r\n            english: 'CHOOSE A SECURE PASSWORD',\r\n            español: 'ELIGE UNA CONTRASEÑA SEGURA'\r\n        },\r\n        repeatPassword: {\r\n            english: 'REPEAT YOUR PASSWORD',\r\n            español: 'REPITE TU CONTRASEÑA'\r\n        },\r\n        confirm: {\r\n            english: 'I CONFIRM THAT MY INFORMATION IS REAL',\r\n            español: 'CONFIRMO QUE MIS DATOS SON REALES'\r\n        },\r\n        allowNewsletter: {\r\n            english: 'I WANT TO RECEIVE NEWS BY EMAIL',\r\n            español: 'QUIERO RECIBIR NOVEDADES POR CORREO'\r\n        },\r\n        signLinkBuyer: {\r\n            english: 'REGISTER AS A BUYER',\r\n            español: 'REGISTRARME COMO COMPRADOR'\r\n        },\r\n        signLinkAgent: {\r\n            english: 'REGISTER AS AN AGENT',\r\n            español: 'REGISTRARME COMO AGENTE'\r\n        },\r\n        signLinkProvider: {\r\n            english: 'REGISTER AS A SERVICE PROVIDER',\r\n            español: 'REGISTRARME COMO PROVEEDOR DE SERVICIOS'\r\n        }\r\n    },\r\n    recoverPassword: {\r\n        title: {\r\n            english: 'TROUBLE TO SIGN IN?',\r\n            español: '¿PROBLEMAS PARA INGRESAR?'\r\n        },\r\n        message: {\r\n            english: 'ENTER YOUR EMAIL AND WE WILL SEND YOU INSTRUCTIONS TO RECOVER YOUR PASSWORD',\r\n            español: 'CONFIRMA TU CORREO Y TE ENVIAREMOS INSTRUCCIONES PARA REESTABLECER TU CONTRASEÑA'\r\n        },\r\n        successEmail: {\r\n            english: 'Email sent, please check your inbox',\r\n            español: 'Correo enviado, por favor revisa tu bandeja de entrada'\r\n        },\r\n        successToken: {\r\n            english: 'Valid code',\r\n            español: 'Código válido'\r\n        },\r\n        recoverMessage: {\r\n            english: 'RECOVER PASSWORD',\r\n            español: 'RECUPERAR CONTRASEÑA'\r\n        },\r\n        enterToken: {\r\n            english: 'ENTER THE 4 DIGIT CODE',\r\n            español: 'INGRESA EL CÓDIGO DE 4 DÍGITOS'\r\n        },\r\n        enterNewPassword: {\r\n            english: 'ENTER YOUR NEW PASSWORD',\r\n            español: 'ESCRIBE TU NUEVA CONTRASEÑA'\r\n        },\r\n        pwdIndicator: {\r\n            english: 'The password must have at least 6 characters and 1 number',\r\n            español: 'La contraseña debe tener al menos 6 caracteres y 1 número'\r\n        },\r\n        pwdError: {\r\n            english: 'Enter a valid password',\r\n            español: 'Ingresa una contraseña válida'\r\n        },\r\n        pwdSuccess: {\r\n            english: 'Password changed successfully',\r\n            español: 'Contraseña actualizada correctamente'\r\n        },\r\n        redirect: {\r\n            english: 'Redirecting to login...',\r\n            español: 'Redirigiendo al inicio de sesión...'\r\n        }\r\n    },\r\n    sidebar: {\r\n        profile: {\r\n            english: 'Profile',\r\n            español: 'Perfil'\r\n        },\r\n        chooseHouse: {\r\n            english: 'Choose house',\r\n            español: 'Elegir casa'\r\n        },\r\n        buyHouse: {\r\n            english: 'Buy house',\r\n            español: 'Comprar casa'\r\n        },\r\n        data: {\r\n            english: 'Data',\r\n            español: 'Datos'\r\n        },\r\n        documentation: {\r\n            english: 'Documentation',\r\n            español: 'Documentación'\r\n        },\r\n        financing: {\r\n            english: 'Financing',\r\n            español: 'Financiamiento'\r\n        },\r\n        interiorDesign: {\r\n            english: 'Interior design',\r\n            español: 'Diseño del interior'\r\n        },\r\n        propietaryService: {\r\n            english: 'Propietary service',\r\n            español: 'Servicios para propietarios'\r\n        },\r\n        faq: {\r\n            english: 'FAQs',\r\n            español: 'Preguntas frecuentes'\r\n        },\r\n        help: {\r\n            english: 'Help',\r\n            español: 'Ayuda'\r\n        }\r\n    },\r\n    sidebarSubtitle: {\r\n        profile: {\r\n            english: \"Let's start updating your profile\",\r\n            español: '¿Comenzamos a configurar tu perfil?'\r\n        },\r\n        chooseHouse: {\r\n            english: \"It's time to choose your new house\",\r\n            español: 'Es momento de elegir tu nueva casa'\r\n        },\r\n        buyHouse: {\r\n            english: \"Let's acquire your new property\",\r\n            español: 'Vamos a adquirir tu neuvo inmueble'\r\n        },\r\n        data: {\r\n            english: \"finish your profile\",\r\n            español: 'termina tu perfil'\r\n        },\r\n        documentation: {\r\n            english: 'Register your info and documents',\r\n            español: 'Registra tus datos y documentos'\r\n        },\r\n        financing: {\r\n            english: 'Financing',\r\n            español: 'Financiamiento'\r\n        },\r\n        interiorDesign: {\r\n            english: 'Choose your new house accesories',\r\n            español: 'Elige los accesorios de tu nueva casa'\r\n        },\r\n        propietaryService: {\r\n            english: 'Propietary service',\r\n            español: 'Servicios para propietarios'\r\n        },\r\n        faq: {\r\n            english: 'FAQs',\r\n            español: 'Preguntas frecuentes'\r\n        },\r\n        help: {\r\n            english: 'Help',\r\n            español: 'Ayuda'\r\n        }\r\n    },\r\n    profile: {\r\n        beneficiaryTitle: {\r\n            english: 'BENEFICIARY 1 (LEAVE EMPTY IF NOT APPLICABLE)',\r\n            español: 'BENEFICIARIO 1 (DEJA EN BLANCO SI NO APLICA)'\r\n        },\r\n        country: {\r\n            english: 'COUNTRY',\r\n            español: 'PAÍS'\r\n        },\r\n        state: {\r\n            english: 'STATE',\r\n            español: 'ESTADO'\r\n        },\r\n        birthDate:{\r\n            english: 'BIRTH DATE',\r\n            español: 'FECHA DE NACIMIENTO'\r\n        }\r\n    },\r\n    chooseHouse: {\r\n        inputLotNumber: {\r\n            english: 'LOT NUMBER',\r\n            español: 'NÚMERO DE LOTE'\r\n        },\r\n        inputLotSize: {\r\n            english: 'LOT SIZE',\r\n            español: 'TAMAÑO DE LOTE'\r\n        },\r\n        inputLotModel: {\r\n            english: 'CHOOSE A MODEL',\r\n            español: 'ELIGE MODELO DE CASA'\r\n        },\r\n        addLot: {\r\n            english: 'ADDITIONAL LOT',\r\n            español: 'LOTE ADICIONAL'\r\n        },\r\n        forSale: {\r\n            english: 'HOMES FOR SALE',\r\n            español: 'CASAS EN VENTA'\r\n        },\r\n        occupied: {\r\n            english: 'SOLD',\r\n            español: 'VENDIDO'\r\n        }\r\n    },\r\n    buyHouse: {\r\n        titlePrice: {\r\n            english: 'From',\r\n            español: 'Desde'\r\n        },\r\n        available: {\r\n            english: 'AVAILABLE',\r\n            español: 'DISPONIBLE'\r\n        },\r\n        notAvailable: {\r\n            english: 'NOT AVAILABLE',\r\n            español: 'NO DISPONIBLE'\r\n        },\r\n        bedrooms: {\r\n            english: 'bedrooms',\r\n            español: 'recámaras'    \r\n        },\r\n        bathrooms: {\r\n            english: 'bathrooms',\r\n            español: 'baños'    \r\n        },\r\n        cars: {\r\n            english: 'cars',\r\n            español: 'automóviles'    \r\n        },\r\n        price: {\r\n            english: 'Price',\r\n            español: 'Precio'\r\n        },\r\n        remember: {\r\n            english: 'REMEMBER',\r\n            español: 'RECUERDA'\r\n        },\r\n        docsDescription: {\r\n            english: 'Before the purchase, check that you have the following documents at hand:',\r\n            español: 'Antes de comenzar tu compra verifica que tengas al alcance estos datos y documentos:'\r\n        },\r\n        doc1: {\r\n            english: 'Passport',\r\n            español: 'Pasaporte'\r\n        },\r\n        doc2: {\r\n            english: \"Driver licence\",\r\n            español: 'Licencia de manejo'\r\n        },\r\n        doc3: {\r\n            english: 'Proof of address',\r\n            español: 'Comprobante de domicilio'\r\n        },\r\n        doc4: {\r\n            english: 'Social Security Number',\r\n            español: 'Número de seguridad social'\r\n        },\r\n        approveTitle: {\r\n            english: 'MANDATORY APPROVAL',\r\n            español: 'APROBACIONES NECESARIAS'\r\n        },\r\n        approvalDescription: {\r\n            english: 'You must approve the next elements to continue:',\r\n            español: 'Para continuar necesitas aprobar los siguientes elementos:'\r\n        },\r\n        firstApproval: {\r\n            english: 'Yes, I approve the blueprint',\r\n            español: 'Sí, apruebo los planos'\r\n        },\r\n        secondApproval: {\r\n            english: 'Yes, I approve the price',\r\n            español: 'Sí, apruebo este precio'\r\n        },\r\n        activeProcess: {\r\n            english: 'THIRD-PARTY ACTIVE PROCESS:',\r\n            español: 'PROCESOS ACTIVOS DE TERCEROS:'\r\n        },\r\n        startTransaction: {\r\n            english: 'BUY NOW',\r\n            español: 'COMENZAR COMPRA'\r\n        },\r\n        secureTransaction: {\r\n            english: 'SECURE TRANSACTION',\r\n            español: 'TRANSACCIÓN SEGURA'\r\n        }\r\n    }\r\n}","import { Cookies } from \"react-cookie\"\r\n\r\nlet initialData = {\r\n    language: new Cookies().get('language') || 'english'\r\n}\r\n\r\nlet CHANGE_LANG = 'CHANGE_LANG'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        case CHANGE_LANG:\r\n            return {...state, language: action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let changeLangAction = () => (dispatch, getState) => {\r\n    let { language } = getState().app\r\n    new Cookies().set('language', language === 'english' ? 'español' : 'english')\r\n    dispatch({\r\n        type: CHANGE_LANG,\r\n        payload: language === 'english' ? 'español' : 'english'\r\n    })\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { changeLangAction } from '../../redux/appDuck'\r\nimport { logoutAction } from '../../redux/userDuck'\r\nimport { withRouter } from 'react-router-dom'\r\nimport text from '../text'\r\n\r\nconst AuthNav = ({location, language, toggleLanguage, logout}) => {\r\n    return (\r\n        <div className='auth-nav'>\r\n            <div className=\"top-nav\">\r\n                <img src=\"/img/navbar/lupa.svg\" alt=\"lupa\"/>\r\n                <img src=\"/img/navbar/notify.svg\" alt=\"notify\"/>\r\n                <img onClick={logout} src=\"/img/navbar/profile.svg\" alt=\"profile\"/>\r\n                <p className='language-selector' onClick={toggleLanguage}>\r\n                    {language}\r\n                </p>\r\n            </div>\r\n            <div className=\"left-nav\">\r\n                <img className='sidebar-logo' src=\"/img/common/logo-dark.png\" alt=\"PP logo black\"/>\r\n                <div className=\"sidebar-nav\">\r\n                    <Link to='/profile' className={`sidebar-element${location.pathname === '/profile' || location.pathname === '/' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/profile${location.pathname === '/profile' || location.pathname ===  '/' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.profile[language]}</p>\r\n                    </Link>\r\n                    <Link to='/choose' className={`sidebar-element${location.pathname === '/choose' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/choose${location.pathname === '/choose' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.chooseHouse[language]}</p>\r\n                    </Link>\r\n                    <Link to='/buy' className={`sidebar-element${location.pathname === '/buy' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/buy${location.pathname === '/buy' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.buyHouse[language]}</p>\r\n                    </Link>\r\n                    <Link to='/data' className={`sidebar-element${location.pathname === '/data' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/data${location.pathname === '/data' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.data[language]}</p>\r\n                    </Link>\r\n                    <Link to='/documentation' className={`sidebar-element${location.pathname === '/documentation' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/documents${location.pathname === '/documentation' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.documentation[language]}</p>\r\n                    </Link>\r\n                    <Link to='/financing' className={`sidebar-element${location.pathname === '/financing' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/finance${location.pathname === '/financing' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.financing[language]}</p>\r\n                    </Link>\r\n                    <Link to='/interior-design' className={`sidebar-element${location.pathname === 'interior-design' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/intDesign${location.pathname === '/interior-design' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.interiorDesign[language]}</p>\r\n                    </Link>\r\n                    <Link to='propietary-service' className={`sidebar-element${location.pathname === 'propietary-service' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/ownerServ${location.pathname === '/propietary-service' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.propietaryService[language]}</p>\r\n                    </Link>\r\n                    <Link to='/faq' className={`sidebar-element${location.pathname === '/faq' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/faq${location.pathname === '/faq' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.faq[language]}</p>\r\n                    </Link>\r\n                    <Link to='/help' className={`sidebar-element${location.pathname === '/help' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/help${location.pathname === '/help' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.help[language]}</p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        toggleLanguage: changeLangAction,\r\n        logout: logoutAction\r\n    }\r\n)(withRouter(AuthNav))\r\n","import React, { useState } from 'react'\r\nimport { Dropdown, Menu, PageHeader } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { logoutAction } from '../../redux/userDuck'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\nimport { changeLangAction } from '../../redux/appDuck'\r\nimport { HamburgerCollapse } from 'react-animated-burgers'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport AuthNav from './AuthNav'\r\n\r\nconst Navbar = ({logged, language, logout, toggleLanguage}) => {\r\n\r\n    let [activeBurger, setActiveBurger] = useState(false)\r\n\r\n    let isDesktop = useMediaQuery({query: '(min-device-width: 950px)'})\r\n    let menu = (\r\n        <Menu>\r\n            <Menu.Item key='0'>\r\n                <Link to='/'>{text.navbar.index[language]}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='1'>\r\n                <Link to='/us'>{text.navbar.aboutUs[language]}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='2'>\r\n                <Link to='/amenities'>{text.navbar.amenities[language]}</Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    let loggedMenu = (\r\n        <Menu>\r\n            <Menu.Item key='0'>\r\n                <li onClick={logout}>Logout</li>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !logged ?  \r\n                    <PageHeader className='navbar-container'>\r\n                        <Link to='/'><img src=\"/logo.png\" alt=\"Logo\"/></Link>\r\n                        {\r\n                            isDesktop ?\r\n                                <div className='right-nav'>\r\n                                    <ul>\r\n                                        <li><Link to='/'>{text.navbar.index[language]}</Link></li>\r\n                                        <li><Link to='/us'>{text.navbar.aboutUs[language]}</Link></li>\r\n                                        <li><Link to='/amenities'>{text.navbar.amenities[language]}</Link></li>\r\n                                        <li><Link to='/contact'>{text.navbar.contact[language]}</Link></li>\r\n                                    </ul>\r\n                                    <p className='language-selector' onClick={toggleLanguage}>\r\n                                        {language}\r\n                                    </p>\r\n                                </div>\r\n                            :\r\n                                <div className='mobile-right-nav'>\r\n                                    <p className='language-selector' onClick={toggleLanguage}>\r\n                                        {language}\r\n                                    </p>\r\n                                    <Dropdown overlay={menu} trigger={['click']}>\r\n                                        <HamburgerCollapse isActive={activeBurger} onClick={() => setActiveBurger(!activeBurger)} className='hamburger' buttonWidth={30}/>\r\n                                    </Dropdown>\r\n                                </div>\r\n                        }\r\n                    </PageHeader>\r\n                :\r\n                    <AuthNav/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {logged}, \r\n    app: {language}\r\n}) => ({\r\n    logged, \r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        logout: logoutAction,\r\n        toggleLanguage: changeLangAction\r\n    }\r\n)(Navbar)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\n\r\nconst Footer = ({language}) => {\r\n    return (\r\n        <div className='footer-container'>\r\n            <div className=\"footer-left\">\r\n               <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam similique corporis eligendi nostrum perspiciatis dolores nobis, officiis dolorem. Iure cumque tempora ab officia officiis assumenda qui, doloremque cupiditate fugiat suscipit?</p>\r\n            </div>\r\n            <div className=\"footer-right\">\r\n                <img src=\"/img/common/logo-compact.svg\" alt=\"Punta Piedra\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n\r\n    }\r\n)(Footer)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Input, Form, message } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { loginAction } from '../../redux/userDuck'\r\nimport text from '../text'\r\n\r\nlet LoginForm = ({history, language, info, fetching, error, login}) => {\r\n\r\n    let [data, setData] = useState({})\r\n\r\n    let onFinish = () => {\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if(!data.email || !rex.test(data.email.toLowerCase())) return message.warning(text.messages.incorrectEmail[language])\r\n        if(!data.password) return message.error(text.messages.incorrectPassword[language])\r\n        login(data)\r\n    }\r\n\r\n    let handleData = e => setData({...data, [e.target.name]: e.target.value})\r\n\r\n    useEffect(() => {\r\n        if(error.status === 403) return message.error(text.messages.wrongPassword[language])\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n        if(info.name) history.push('/profile')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[info, error])\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: text.form.required[language],\r\n                },\r\n                ]}\r\n            >\r\n                <Input name='email' onChange={handleData} placeholder={text.login.emailPlaceholder[language]}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: text.form.required[language],\r\n                },\r\n                ]}\r\n            >\r\n                <Input.Password name='password' onChange={handleData} placeholder={text.login.passwordPlaceholder[language]}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button loading={fetching} className='nav-button' type=\"primary\" htmlType=\"submit\">\r\n                    {text.button.login[language]}\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapState = ({\r\n    user: {info, fetching, error},\r\n    app: {language}\r\n}) => ({\r\n    language,\r\n    info,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState, \r\n    {\r\n        login: loginAction\r\n    }\r\n)(LoginForm)\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport LoginForm from './LoginForm'\r\nimport text from '../text'\r\n\r\nlet Login = ({language}) => {\r\n    return (\r\n        <div className='padded-container'>\r\n            <div className='auth-container'>\r\n                <div className=\"left-register register-bg\">\r\n                    <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n                </div>\r\n                <div className=\"auth-right-content\">\r\n                    <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                    <p className='title'>{text.login.portalTitle[language]}</p>\r\n                    <p className='subtitle'>{text.login.portalSubtitle[language]}</p>\r\n                    <br/>\r\n                    <LoginForm/>\r\n                    <div className=\"auth-bottom-text\">\r\n                        <p>{text.form.forgotPassword[language]} <Link to='/recover-password'>{text.form.forgotPasswordLink[language]}</Link></p>\r\n                        <p>{text.form.register[language]} <Link to='/register/buyer'>{text.form.registerLink[language]}</Link></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        \r\n    }\r\n)(Login)","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, message, Select, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signupAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nlet AgentData = ({fetching, language, error, info, signup, history}) => {\r\n\r\n    let [data, setData] = useState({\r\n        type: 'agent'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'español') ||\r\n             !data.company ||\r\n             !data.email ||\r\n             !data.phone\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        if(!data.consent) return message.warn(text.messages.consent[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/profile')\r\n    }, [error, info])\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                {language === 'español' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n            </div>\r\n            <Input onChange={handleData} value={data.company} name='company' placeholder={text.register.company[language]}/>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                <Input className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n            </div>\r\n            <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n            <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.consent}\r\n                    onChange={e => setData({...data, consent: e.target.checked})}\r\n                >\r\n                    {text.register.confirm[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.allowNewsletter}\r\n                    onChange={e => setData({...data, allowNewsletter: e.target.checked})}\r\n                >\r\n                    {text.register.allowNewsletter[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n            <div className=\"auth-bottom-text\">\r\n                <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language}\r\n}) => ({\r\n    fetching,\r\n    error, \r\n    info,\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction\r\n    }\r\n)(AgentData)","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, message, Select, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signupAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\nlet { Option } = Select\r\n\r\nlet BasicData = ({fetching, language, error, info, signup, history}) => {\r\n\r\n    let [data, setData] = useState({\r\n        type: 'buyer'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'español') ||\r\n             !data.email ||\r\n             !data.phone\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        if(!data.consent) return message.warn(text.messages.consent[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/profile')\r\n    }, [error, info])\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                {language === 'español' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n            </div>\r\n            {/* <Input onChange={handleData} value={data.company} name='company' placeholder={text.register.company[language]}/> */}\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                <Input className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n            </div>\r\n            {/* <div className=\"selector-input\">\r\n                <p>{text.register.beneficiary[language]}</p>\r\n                <Select onChange={value => setData({...data, beneficiary: value})} value={data.beneficiary} defaultValue='no'>\r\n                    <Option value='yes'>{text.responses.yes[language]}</Option>\r\n                    <Option value='no'>{text.responses.no[language]}</Option>\r\n                </Select>\r\n            </div>\r\n            {\r\n                data.beneficiary === 'yes' &&\r\n                    <>\r\n                        <small className='beneficiary-title'>{text.register.beneficiaryTitle[language]}</small>\r\n                        <div className=\"multiple-inputs\">\r\n                            <Input onChange={handleData} value={data.beneficiaryName} name='beneficiaryName' placeholder={text.register.firstName[language]}/>\r\n                            <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.beneficiaryLastName} name='beneficiaryLastName' placeholder={text.register.lastName[language]}/>\r\n                            {language === 'español' && <Input onChange={handleData} value={data.beneficiarySecondLastName} name='beneficiarySecondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n                        </div>\r\n                        <div className=\"multiple-inputs\">\r\n                            <Input onChange={handleData} value={data.beneficiaryEmail} name='beneficiaryEmail' placeholder={text.register.beneficiaryEmail[language]}/>\r\n                            <Input className='last-input' onChange={handleData} value={data.beneficiaryPhone} name='beneficiaryPhone' placeholder={text.register.beneficiaryPhone[language]}/>             \r\n                        </div>\r\n                    </>\r\n            } */}\r\n            {/* ------------ MAP AGENTS FOR THIS FIELD -------------*/}\r\n            <Select className='agent-selector' onChange={value => setData({...data, customerAgent: value})} placeholder={text.register.selectAgent[language]} value={data.customerAgent} defaultValue={data.customerAgent}>\r\n                <Option value='agent1'>Gerardo Jiménez</Option>\r\n            </Select>\r\n            <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n            <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.consent}\r\n                    onChange={e => setData({...data, consent: e.target.checked})}\r\n                >\r\n                    {text.register.confirm[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.allowNewsletter}\r\n                    onChange={e => setData({...data, allowNewsletter: e.target.checked})}\r\n                >\r\n                    {text.register.allowNewsletter[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n            <div className=\"auth-bottom-text\">\r\n                <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language}\r\n}) => ({\r\n    fetching,\r\n    error, \r\n    info,\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction\r\n    }\r\n)(BasicData)","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, message, Select, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signupAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nlet ProviderData = ({fetching, language, error, info, signup, history}) => {\r\n\r\n    let [data, setData] = useState({\r\n        type: 'provider'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'español') ||\r\n             !data.company ||\r\n             !data.email ||\r\n             !data.phone\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        if(!data.consent) return message.warn(text.messages.consent[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/profile')\r\n    }, [error, info])\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                {language === 'español' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n            </div>\r\n            <Input onChange={handleData} value={data.company} name='company' placeholder={text.register.company[language]}/>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                <Input className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n            </div>\r\n            <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n            <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.consent}\r\n                    onChange={e => setData({...data, consent: e.target.checked})}\r\n                >\r\n                    {text.register.confirm[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.allowNewsletter}\r\n                    onChange={e => setData({...data, allowNewsletter: e.target.checked})}\r\n                >\r\n                    {text.register.allowNewsletter[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n            <div className=\"auth-bottom-text\">\r\n                <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language}\r\n}) => ({\r\n    fetching,\r\n    error, \r\n    info,\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction\r\n    }\r\n)(ProviderData)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\nimport AgentData from './registerComponents/AgentData'\r\nimport BasicData from './registerComponents/BasicData'\r\nimport ProviderData from './registerComponents/ProviderData'\r\n\r\nlet RegisterForm = ({match, language}) => {\r\n    \r\n    let { params } = match\r\n    \r\n    return (\r\n        <div className='padded-container register-container'>\r\n            <div className=\"left-register register-form-bg\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register-block\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>\r\n                    {params.type === 'buyer' && text.register.portalSubtitleBuyer[language]}\r\n                    {params.type === 'agent' && text.register.portalSubtitleAgent[language]}\r\n                    {params.type === 'provider' && text.register.portalSubtitleProvider[language]}\r\n                </p>\r\n                {params.type === 'buyer' && <BasicData/>}\r\n                {params.type === 'agent' && <AgentData/>}\r\n                {params.type === 'provider' && <ProviderData/>}\r\n                <div className=\"auth-bottom-text\">\r\n                    {params.type !== 'buyer' && <p><Link to='/register/buyer'>{text.register.signLinkBuyer[language]}</Link></p>}\r\n                    {params.type !== 'agent' && <p><Link to='/register/agent'>{text.register.signLinkAgent[language]}</Link></p>}\r\n                    {params.type !== 'provider' && <p><Link to='/register/provider'>{text.register.signLinkProvider[language]}</Link></p>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n\r\n    }\r\n)(RegisterForm)","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { sendTokenAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nconst ForgotPassword = ({history, language, tokenSent, fetching, error, sendToken}) => {\r\n\r\n    let [email, setEmail] = useState('')\r\n\r\n    let handleSubmit = () => {\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if(!email || !rex.test(email.toLowerCase())) return message.warning(text.messages.incorrectEmail[language])\r\n        sendToken({email})\r\n    }\r\n\r\n    let checkEnter = e => e.key === 'Enter' && handleSubmit()\r\n\r\n    useEffect(() => {\r\n        if(tokenSent) return history.push('/recover-password/token')\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n    }, [tokenSent, error])\r\n\r\n    return (\r\n        <div className='padded-container register-container'>\r\n            <div className=\"left-register register-bg\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>{text.register.portalSubtitle[language]}</p>\r\n                <div className=\"recover-password-text\">\r\n                    <h2>{text.recoverPassword.title[language]}</h2>\r\n                    <h3>{text.recoverPassword.message[language]}</h3>\r\n                </div>        \r\n                <div className=\"recover-password-input\">\r\n                    <Input onKeyPress={checkEnter} onChange={e => setEmail(e.target.value)} value={email} placeholder={text.login.emailPlaceholder[language]}/>\r\n                    <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.next[language]}</Button>\r\n                </div>\r\n                <div className=\"auth-bottom-text\">\r\n                    <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n                    <p>{text.form.register[language]} <Link to='/register/buyer'>{text.form.registerLink[language]}</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {tokenSent, fetching, error} \r\n}) => ({\r\n    language,\r\n    tokenSent,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        sendToken: sendTokenAction\r\n    }\r\n)(ForgotPassword)\r\n","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Cookies } from 'react-cookie'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { changePasswordAction, checkTokenAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nconst ForgotPasswordToken = ({history, language, validCode, passwordChanged, fetching, error, checkCode, changePassword}) => {\r\n\r\n    let [token, setToken] = useState('')\r\n    let [password, setPassword] = useState('')\r\n    let email = new Cookies().get('recoveryEmail')\r\n\r\n    let handleSubmit = () => {\r\n        if(!email) return history.push('/recover-password')\r\n        if(!token) return message.warning(text.messages.enterTokenError[language])\r\n        checkCode(token)\r\n    }\r\n\r\n    let handleNewPassword = () => {\r\n        if(!email) return history.push('/recover-password')\r\n        if(!password || password.length < 6 || !/\\d/.test(password)) return message.warning(text.recoverPassword.pwdError[language])\r\n        changePassword(password)\r\n    }\r\n\r\n    let checkEnter = e => e.key === 'Enter' && handleSubmit()\r\n    let checkEnterPassword = e => e.key === 'Enter' && handleNewPassword()\r\n\r\n    useEffect(() => {\r\n        if(passwordChanged){\r\n            message.success(text.recoverPassword.pwdSuccess[language])\r\n            setTimeout(() => {\r\n                history.push('/login')\r\n            }, 3000)\r\n        }\r\n        if(validCode) return message.success(text.recoverPassword.successToken[language])\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n    }, [passwordChanged, validCode, error])\r\n\r\n    return (\r\n        <div className='padded-container register-container'>\r\n            <div className=\"left-register register-bg\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>{text.register.portalSubtitle[language]}</p>\r\n                {\r\n                    !validCode ? \r\n                        <>\r\n                            <div className=\"recover-password-text\">\r\n                                <h2>{text.recoverPassword.recoverMessage[language]}</h2>\r\n                                <h3>{text.recoverPassword.successEmail[language]}</h3>\r\n                                <small>{}</small>\r\n                            </div>        \r\n                            <div className=\"recover-password-input\">\r\n                                <Input onKeyPress={checkEnter} onChange={e => setToken(e.target.value)} value={token} placeholder={text.recoverPassword.enterToken[language]}/>\r\n                                <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.next[language]}</Button>\r\n                            </div>\r\n                        </>\r\n                    :\r\n                        <>\r\n                            <div className=\"recover-password-text\">\r\n                                <h2>{text.recoverPassword.recoverMessage[language]}</h2>\r\n                                <h3>{text.recoverPassword.pwdIndicator[language]}</h3>\r\n                            </div>        \r\n                            <div className=\"recover-password-input\">\r\n                                <Input onKeyPress={checkEnterPassword} onChange={e => setPassword(e.target.value)} value={password} placeholder={text.recoverPassword.enterNewPassword[language]}/>\r\n                                <Button loading={fetching} onClick={handleNewPassword} className='nav-button'>{text.button.send[language]}</Button>\r\n                                {passwordChanged && <small>{text.recoverPassword.redirect[language]}</small>}\r\n                            </div>\r\n                        </>\r\n                }\r\n                \r\n                <div className=\"auth-bottom-text\">\r\n                    <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n                    <p>{text.form.register[language]} <Link to='/register/buyer'>{text.form.registerLink[language]}</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {validCode, passwordChanged,  fetching, error} \r\n}) => ({\r\n    language,\r\n    validCode,\r\n    passwordChanged,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        checkCode: checkTokenAction,\r\n        changePassword: changePasswordAction\r\n    }\r\n)(ForgotPasswordToken)\r\n","import { Cookies } from \"react-cookie\"\r\nimport { getData, getHouseData, updateUser } from \"../services/api\"\r\n\r\nlet initialData = {\r\n    info: {},\r\n    fetchingData: false,\r\n    fetchingHouse: true,\r\n    error: {},\r\n    dataUpdated: false,\r\n    house: {}\r\n}\r\n\r\nlet GET_DATA = 'GET_DATA'\r\nlet GET_DATA_SUCCESS = 'GET_DATA_SUCCESS'\r\nlet GET_DATA_ERROR = 'GET_DATA_ERROR'\r\n\r\nlet GET_HOUSE = 'GET_HOUSE'\r\nlet GET_HOUSE_SUCCESS = 'GET_HOUSE_SUCCESS'\r\nlet GET_HOUSE_ERROR = 'GET_HOUSE_ERROR'\r\n\r\nlet UPDATE_USER = 'UPDATE_USER'\r\nlet UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\r\nlet UPDATE_USER_ERROR = 'UPDATE_USER_ERROR'\r\n\r\nlet HANDLE_INFO = 'HANDLE_INFO'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        case GET_DATA:\r\n            return {...state, dataUpdated: false, fetchingData: true, info: {}, error: {}}\r\n        case GET_DATA_SUCCESS:\r\n            return {...state, fetchingData: false, info: action.payload}\r\n        case GET_DATA_ERROR:\r\n            return {...state, fetchingData: false, error: action.payload}\r\n\r\n        case GET_HOUSE:\r\n            return {...state, fetchingHouse: true, house: {}, error: {}}\r\n        case GET_HOUSE_SUCCESS:\r\n            return {...state, fetchingHouse: false, house: action.payload}\r\n        case GET_HOUSE_ERROR:\r\n            return {...state, fetchingHouse: false, error: action.payload}\r\n\r\n        case UPDATE_USER:\r\n            return {...state, dataUpdated: false, fetching: true, error: {}}\r\n        case UPDATE_USER_SUCCESS:\r\n            return {...state, dataUpdated: true, fetching: false}\r\n        case UPDATE_USER_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case HANDLE_INFO:\r\n            return {...state, info: action.payload}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let getHouseDataAction = data => (dispatch, getState) => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: GET_HOUSE_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: GET_HOUSE\r\n    })\r\n    getHouseData({id, houseId: '5f90f20eaed8c340881f547a'})\r\n        .then(res => dispatch({\r\n            type: GET_HOUSE_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_HOUSE_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let updateUserAction = additionalData => (dispatch, getState) => {\r\n    dispatch({\r\n        type: UPDATE_USER\r\n    })\r\n    let { info } = getState().data\r\n    let completeData = {...info, ...additionalData}\r\n    updateUser(completeData)\r\n        .then(res => dispatch({\r\n            type: UPDATE_USER_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: UPDATE_USER_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let handleInfoAction = event => (dispatch, getState) => {\r\n    let { info } = getState().data\r\n    let { target } = event\r\n    if(target) {\r\n        dispatch({\r\n            type: HANDLE_INFO,\r\n            payload: { ...info, [event.target.name]:event.target.value }\r\n        })\r\n        return\r\n    }\r\n    dispatch({\r\n        type: HANDLE_INFO,\r\n        payload: { ...info, birthDate:event }\r\n    })\r\n}\r\n\r\nexport let getDataAction = () => dispatch => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: GET_DATA_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: GET_DATA\r\n    })\r\n    getData({id})\r\n        .then(res => dispatch({\r\n            type: GET_DATA_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_DATA_ERROR,\r\n            payload: err.response\r\n        }))\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Button, Checkbox, DatePicker, Input, message, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInfoAction, updateUserAction } from '../../redux/dataDuck'\r\nimport moment from 'moment'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Profile = ({info, fetching, dataUpdated, language, getData, handleInfo, updateUser}) => {\r\n\r\n    let [consent, setConsent] = useState(false)\r\n\r\n    let handleSubmit = () => {\r\n        if(!info.country || !info.state || !info.birthDate) return message.warning(text.messages.missingFields[language])\r\n        if(!consent) return message.warning(text.messages.consent[language])\r\n        updateUser()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated) {\r\n            setConsent(false)\r\n            return message.success(text.messages.dataUpdated[language])\r\n        }\r\n    }, [dataUpdated])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/profile.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.profile[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.profile[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleInfo} value={info.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                                {language === 'español' && <Input required onChange={handleInfo} value={info.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n                            </div>\r\n                            {info.userType !== 'buyer' && <Input id='company-app' onChange={handleInfo} value={info.company} name='company' placeholder={text.register.company[language]}/>}\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.email} name='email' placeholder={text.register.email[language]}/>\r\n                                <Input className='last-input' onChange={handleInfo} value={info.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.country} name='country' placeholder={text.profile.country[language]}/>\r\n                                <Input className='last-input' onChange={handleInfo} value={info.state} name='state' placeholder={text.profile.state[language]}/>\r\n                                <DatePicker\r\n                                    format='YYYY-MM-DD'\r\n                                    disabledDate={current => current > moment().endOf('day')}\r\n                                    showToday={false}\r\n                                    placeholder={text.profile.birthDate[language]}\r\n                                    onChange={handleInfo}\r\n                                    value={moment(info.birthDate)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"checkbox-input\">\r\n                                <Checkbox\r\n                                    checked={consent}\r\n                                    onChange={() => setConsent(!consent)}\r\n                                >\r\n                                    {text.register.confirm[language]}\r\n                                </Checkbox>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple-buttons\">\r\n                            <Button onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.update[language]}</Button>\r\n                            <Link to='/choose'><Button className='nav-button'>{text.button.continue[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(Profile)\r\n","import React from 'react'\r\nimport { EnvironmentOutlined } from '@ant-design/icons'\r\nimport ReactImageMagnify from 'react-image-magnify'\r\nimport text from '../../text'\r\n\r\nexport const ChooseHouseMap = ({model, language}) => {\r\n    return (\r\n        <>\r\n        <div className='house-map-container'>\r\n            <div className=\"left-house-map\">\r\n                <ReactImageMagnify\r\n                {...{\r\n                    smallImage: {\r\n                        alt: 'Map',\r\n                        isFluidWidth: true,\r\n                        src: '/img/chooseHouse/map.jpg'\r\n                    },\r\n                    largeImage: {\r\n                        src: '/img/chooseHouse/map.jpg',\r\n                        width: 1200,\r\n                        height: 1800\r\n                    },\r\n                    enlargedImageContainerDimensions: {\r\n                        width: 300,\r\n                        height: '100%'\r\n                    }\r\n                }} \r\n                />\r\n            </div>\r\n            <div className=\"right-house-map\">\r\n                <div className=\"right-house-map--img\">\r\n                    {model ? <img src=\"/img/chooseHouse/house.jpg\" alt=\"house model\"/> : <div className=\"no-image\"/>}\r\n                </div>\r\n                <div>\r\n                    <div className=\"map-color-description\">\r\n                        <div className=\"occupied-box\"/>\r\n                        <p>{text.chooseHouse.forSale[language]}</p>\r\n                    </div>\r\n                    <div className=\"map-color-description\">\r\n                        <div className=\"available-box\"/>\r\n                        <p>{text.chooseHouse.occupied[language]}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"map-link\">\r\n            <EnvironmentOutlined />\r\n            <a href=\"/choose\">https://goo.gl/maps/a3F4y3CTu1jfENMH7</a>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Input, message, Select, Spin } from 'antd'\r\nimport { Option } from 'antd/lib/mentions'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getDataAction, handleInfoAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { ChooseHouseMap } from './chooseHouseComponents/ChooseHouseMap'\r\n\r\nconst ChooseHouse = ({history, language, fetching, info, dataUpdated, getData, handleInfo, updateUser}) => {\r\n\r\n    let [lotModel, setLotModel] = useState(null)\r\n    let [additionalLotData, setAdditionalLotData] = useState({})\r\n    let [additionalLot, setAdditionalLot] = useState(false)\r\n    let [lotSize, setLotSize] = useState('')\r\n    let [additionalLotSize, setAdditionalLotSize] = useState('')\r\n\r\n    let handleSubmit = () => {\r\n        if(!info.lotNumber || !lotModel) return message.warning(text.messages.missingFields[language])\r\n        if(additionalLot){\r\n            if(!additionalLotData.lotNumber || !additionalLotData.lotModel) return message.warning(text.messages.missingFields[language])\r\n            return updateUser(additionalLotData)\r\n        }\r\n        updateUser({lotModel})\r\n    }\r\n\r\n    let handleAdditionalLotData = e => {\r\n        let { target } = e\r\n        if(target) return setAdditionalLotData({...additionalLotData, [e.target.name]:e.target.value})\r\n        setAdditionalLotData({...additionalLotData, additionalLotModel: e})\r\n    }\r\n\r\n    let handleLotSize = value => {\r\n        if(value) return setLotSize(parseInt(value) * 100)\r\n        setLotSize('')\r\n    }\r\n\r\n    let handleAdditionalLotSize = value => {\r\n        if(value) return setAdditionalLotSize(parseInt(value) * 100)\r\n        setLotSize('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated) return history.push('/buy')\r\n    }, [dataUpdated])\r\n    \r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(info.lotModel && !lotModel) setLotModel(info.lotModel)\r\n    }, [info])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n            {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/choose.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.chooseHouse[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.chooseHouse[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"multiple-inputs map-inputs\">\r\n                                <Input onChange={e => {handleInfo(e); handleLotSize(e.target.value)}} value={info.lotNumber} name='lotNumber' placeholder={text.chooseHouse.inputLotNumber[language]}/>\r\n                                <Input value={lotSize} suffix={language === 'english' ? <small>yd<sup>2</sup></small> : <small>m<sup>2</sup></small>} name='lotSize' placeholder={text.chooseHouse.inputLotSize[language]}/>\r\n                                <Select className='select-input' onChange={value => setLotModel(value)} value={info.lotModel} placeholder={text.chooseHouse.inputLotModel[language]}>\r\n                                    <Option value='Model 1'>Model 1</Option>\r\n                                    <Option value='Model 2'>Model 2</Option>\r\n                                    <Option value='Model 3'>Model 3</Option>\r\n                                </Select>\r\n                                {!additionalLot && <Button onClick={() => setAdditionalLot(true)} className='solid-button'>+ {text.chooseHouse.addLot[language]}</Button>}\r\n                            </div>\r\n                            {\r\n                                additionalLot ? \r\n                                    <div className=\"multiple-inputs map-inputs\">\r\n                                        <Input onChange={e => {handleAdditionalLotData(e); handleAdditionalLotSize(e.target.value)}} value={info.additionalLotNumber} name='additionalLotNumber' placeholder={text.chooseHouse.inputLotNumber[language]}/>\r\n                                        <Input value={additionalLotSize} suffix={language === 'english' ? <small>yd<sup>2</sup></small> : <small>m<sup>2</sup></small>} name='lotSize' placeholder={text.chooseHouse.inputLotSize[language]}/>\r\n                                        <Select className='select-input' onChange={handleAdditionalLotData} value={info.additionalLotModel} placeholder={text.chooseHouse.inputLotModel[language]}>\r\n                                            <Option value='Model 1'>Model 1</Option>\r\n                                            <Option value='Model 2'>Model 2</Option>\r\n                                            <Option value='Model 3'>Model 3</Option>\r\n                                        </Select>\r\n                                        <Button onClick={() => setAdditionalLot(false)} className='solid-button'>- {text.chooseHouse.addLot[language]}</Button>\r\n                                    </div>\r\n                                :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                        <ChooseHouseMap language={language} model={lotModel}/>\r\n                        <div className='multiple-buttons'>\r\n                            <Link to='/profile'><Button loading={fetching} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(ChooseHouse)\r\n","import React, { useState } from 'react'\r\nimport { Button, Checkbox } from 'antd'\r\nimport ReactImageMagnify from 'react-image-magnify'\r\nimport text from '../../text'\r\n\r\nexport const BuyHouseMap = ({language, house}) => {\r\n\r\n    let [selectedImage, setSelectedImage] = useState(house.mainImage)\r\n    let [firstApproval, setFirstApproval] = useState(false)\r\n    let [secondApproval, setSecondApproval] = useState(false)\r\n\r\n    return (\r\n        <div className='buy-map-container'>\r\n            <div className=\"left-buy-map\">\r\n                <div className=\"description-thumbs\">\r\n                    <img className={selectedImage === house.mainImage ? 'thumb-img-active' : 'thumb-img'} onClick={() => setSelectedImage(house.mainImage)} src={house.mainImage} alt=\"mainimage\"/>\r\n                    {\r\n                        house.otherImages.map((imageLink, ix) => \r\n                            <img key={ix} className={selectedImage === imageLink ? 'thumb-img-active' : 'thumb-img'} /*onClick={() => setSelectedImage(imageLink)}*/ src={imageLink} alt='thumb'/>\r\n                        )\r\n                    }\r\n                </div>\r\n                <ReactImageMagnify\r\n                className=\"description-big-image\"\r\n                {...{\r\n                    smallImage: {\r\n                        alt: 'Map',\r\n                        isFluidWidth: true,\r\n                        src: selectedImage\r\n                    },\r\n                    largeImage: {\r\n                        src: selectedImage,\r\n                        width: 1200,\r\n                        height: 1800\r\n                    },\r\n                    enlargedImageContainerDimensions: {\r\n                        width: 400,\r\n                        height: '100%'\r\n                    }\r\n                }} \r\n                />\r\n                <div className=\"description-attributes\">\r\n                    <div className=\"attributes-title-container\">\r\n                        <div className=\"house-title\">\r\n                            <h2>{house.name}</h2>\r\n                            <p>{text.buyHouse.titlePrice[language]}: {house.price.toLocaleString('en-US', {style: 'currency', currency: 'USD'})}</p>\r\n                        </div>\r\n                        <div className=\"house-availability\">\r\n                            <p>{house.available ? text.buyHouse.available[language] : text.buyHouse.notAvailable[language]}</p>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"house-properties-container\">\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/ruler.svg\" alt=\"ruler\"/>\r\n                            <p>{house.lotSize} {language === 'english' ? 'yd' : 'm'}<sup>2</sup></p>\r\n                        </div>\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/bed.svg\" alt=\"ruler\"/>\r\n                            <p>{house.bedrooms} {text.buyHouse.bedrooms[language]}</p>\r\n                        </div>\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/bathtub.svg\" alt=\"ruler\"/>\r\n                            <p>{house.bathrooms} {text.buyHouse.bathrooms[language]}</p>\r\n                        </div>\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/car.svg\" alt=\"ruler\"/>\r\n                            <p>{house.cars} {text.buyHouse.cars[language]}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"house-description\">\r\n                        <p>\r\n                            {house[`${language}Description`]}\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Temporibus quae hic porro perspiciatis vel similique nam consequatur accusamus delectus fugiat recusandae tempore, illum amet numquam fuga vitae reiciendis in. A.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"price\">\r\n                        <p>{text.buyHouse.price[language]}</p>\r\n                        <h2>{house.price.toLocaleString('en-US', {style: 'currency', currency: 'USD'})} USD</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-buy-map\">\r\n                <div className=\"remember-container\">\r\n                    <div className=\"remember-title\">\r\n                        <img src=\"/img/buyHouse/bulb.svg\" alt=\"bulb\"/>\r\n                        <p>{text.buyHouse.remember[language]}</p>\r\n                    </div>\r\n                    <div className=\"remember-description\">\r\n                        <p>{text.buyHouse.docsDescription[language]}</p>\r\n                        <ul>\r\n                            <li>{text.buyHouse.doc1[language]}</li>\r\n                            <li>{text.buyHouse.doc2[language]}</li>\r\n                            <li>{text.buyHouse.doc3[language]}</li>\r\n                            <li>{text.buyHouse.doc4[language]}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"remember-container\">\r\n                    <div className=\"remember-title\">\r\n                        <img src=\"/img/buyHouse/bulb.svg\" alt=\"bulb\"/>\r\n                        <p>{text.buyHouse.approveTitle[language]}</p>\r\n                    </div>\r\n                    <div className=\"remember-description\">\r\n                        <p>{text.buyHouse.approvalDescription[language]}</p>\r\n                    </div>\r\n                    <div className=\"checkbox-input\">\r\n                        <Checkbox\r\n                            onChange={() => setFirstApproval(!firstApproval)}\r\n                            value={firstApproval}\r\n                        >\r\n                            {text.buyHouse.firstApproval[language]}\r\n                        </Checkbox>\r\n                    </div>\r\n                    <div className=\"checkbox-input\">\r\n                        <Checkbox\r\n                            onChange={() => setSecondApproval(!secondApproval)}\r\n                            value={secondApproval}\r\n                        >\r\n                            {text.buyHouse.secondApproval[language]}\r\n                        </Checkbox>\r\n                    </div>\r\n                </div>\r\n                <div className=\"remember-container\">\r\n                    <div className=\"remember-description\">\r\n                        <p>{text.buyHouse.docsDescription[language]}</p>\r\n                    </div>\r\n                    <Button className='nav-button'>{text.buyHouse.startTransaction[language]}</Button>\r\n                    <div className=\"secure-transaction-message\">\r\n                        <img src=\"/img/buyHouse/securetrans.svg\" alt=\"secure\"/>\r\n                        <p>{text.buyHouse.secureTransaction[language]}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, getHouseDataAction } from '../../redux/dataDuck'\r\nimport { Button, Input, Spin } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\nimport { BuyHouseMap } from './buyHouseComponents/BuyHouseMap'\r\n\r\nconst BuyHouse = ({history,info, language, fetchingData, fetchingHouse, house, getHouse, getData}) => {\r\n\r\n\r\n    let handleSubmit = () => {}\r\n\r\n    useEffect(() => {\r\n        getHouse()\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n            {\r\n                fetchingData || fetchingHouse ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/buy.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.buyHouse[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.buyHouse[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"multiple-inputs map-inputs\">\r\n                                <Input disabled value={house.lotNumber}/>\r\n                                <Input disabled value={house.lotSize} suffix={language === 'english' ? <small>yd<sup>2</sup></small> : <small>m<sup>2</sup></small>}/>\r\n                                <Input disabled value={info.lotModel} />\r\n                            </div>\r\n                        </div>\r\n                        <BuyHouseMap language={language} house={house}/>\r\n                        <div className='multiple-buttons'>\r\n                            <Link to='/choose'><Button loading={false} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button onClick={handleSubmit} loading={false} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {fetchingData, info, house, fetchingHouse}\r\n}) => ({\r\n    language,\r\n    fetchingData,\r\n    fetchingHouse,\r\n    house,\r\n    info\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        getHouse: getHouseDataAction\r\n    }\r\n)(BuyHouse)\r\n","import React from 'react'\r\n\r\nconst UserData = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserData\r\n","import { addHouse } from \"../services/api\"\r\nimport { Cookies } from 'react-cookie'\r\n\r\nlet initialData = {\r\n    houseData: {},\r\n    fetching: false,\r\n    error: {},\r\n    houseUploaded: false\r\n}\r\n\r\nlet ADD_HOUSE = 'ADD_HOUSE'\r\nlet ADD_HOUSE_SUCCESS = 'ADD_HOUSE_SUCCESS'\r\nlet ADD_HOUSE_ERROR = 'ADD_HOUSE_ERROR'\r\n\r\nlet HANDLE_DATA = 'HANDLE_DATA'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        case ADD_HOUSE:\r\n            return {...state, houseUploaded: false, fetching: true, error: {}}\r\n        case ADD_HOUSE_SUCCESS:\r\n            return {...state, fetching: false, houseUploaded: true, houseData: {}}\r\n        case ADD_HOUSE_ERROR:\r\n            return {...state, fetching: false, error: action.payload}\r\n\r\n        case HANDLE_DATA:\r\n            return {...state, houseData: action.payload}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let addHouseAction = () => (dispatch, getState) => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: ADD_HOUSE_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: ADD_HOUSE\r\n    })\r\n    let { houseData } = getState().admin\r\n    addHouse({id, houseData})\r\n        .then(res => dispatch({\r\n            type: ADD_HOUSE_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: ADD_HOUSE_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let handleHouseDataAction = event => (dispatch, getState) => {\r\n    let { houseData } = getState().admin\r\n    dispatch({\r\n        type: HANDLE_DATA,\r\n        payload: { ...houseData, [event.target.name]:event.target.value}\r\n    })\r\n}","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addHouseAction, handleHouseDataAction } from '../../redux/adminDuck'\r\n\r\nconst AddHouse = ({houseData, fetching, error, houseUploaded, addHouse, handleHouseData}) => {\r\n\r\n    useEffect(() => {\r\n        if(houseUploaded) return message.success('HOUSE UPLOADED')\r\n    }, [houseUploaded])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n            <div className=\"application-content no-justify admin-container\">\r\n                <h2>ADD A HOUSE</h2>\r\n                <p>Lot number</p>\r\n                <Input onChange={handleHouseData} value={houseData.lotNumber} name='lotNumber'/>\r\n                <p>Name</p>\r\n                <Input onChange={handleHouseData} value={houseData.name} name='name'/>\r\n                <p>Lot size</p>\r\n                <Input onChange={handleHouseData} value={houseData.lotSize} name='lotSize'/>\r\n                <p>Price</p>\r\n                <Input type='number' onChange={handleHouseData} value={houseData.price} name='price'/>\r\n                <p>English Description</p>\r\n                <Input onChange={handleHouseData} value={houseData.englishDescription} name='englishDescription'/>\r\n                <p>Spanish Description</p>\r\n                <Input onChange={handleHouseData} value={houseData.españolDescription} name='españolDescription'/>\r\n                <p>Bathrooms</p>\r\n                <Input onChange={handleHouseData} value={houseData.bathrooms} name='bathrooms'/>\r\n                <p>Bedrooms</p>\r\n                <Input onChange={handleHouseData} value={houseData.berdrooms} name='bedrooms'/>\r\n                <p>Cars</p>\r\n                <Input onChange={handleHouseData} value={houseData.cars} name='cars'/>\r\n                <p>Main Image</p>\r\n                <Input onChange={handleHouseData} value={houseData.mainImage} name='mainImage'/>\r\n                <Button onClick={addHouse}>Add house</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    admin: {houseData, fetching, error, houseUploaded}\r\n}) => ({\r\n    houseData, \r\n    fetching, \r\n    error, \r\n    houseUploaded\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        addHouse: addHouseAction,\r\n        handleHouseData: handleHouseDataAction\r\n    }\r\n)(AddHouse)\r\n","import React, { useEffect } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { checkSessionAction } from './redux/userDuck'\r\nimport Login from './components/auth/Login'\r\nimport RegisterFormLayout from './components/auth/RegisterFormLayout'\r\nimport ForgotPassword from './components/auth/forgotPassword/ForgotPassword'\r\nimport ForgotPasswordToken from './components/auth/forgotPassword/ForgotPasswordToken'\r\nimport Profile from './components/home/Profile'\r\nimport ChooseHouse from './components/home/ChooseHouse'\r\nimport BuyHouse from './components/home/BuyHouse'\r\nimport UserData from './components/home/UserData'\r\nimport AddHouse from './components/admin/AddHouse'\r\n\r\nlet PrivateRoute = ({logged, path, component, ...remainingProps}) => {\r\n    if(logged) return <Route path={path} component={component} {...remainingProps}/>\r\n    return <Redirect to='/login' {...remainingProps}/>\r\n}\r\n\r\nlet AdminRoute = ({userType, logged, path, component, ...remainingProps}) => {\r\n    if(logged) return <Route path={path} component={component} {...remainingProps}/>\r\n    // ADD SECURITY\r\n    // if(logged && userType === 'agent') return <Route path={path} component={component} {...remainingProps}/>\r\n    return <Redirect to='/login' {...remainingProps}/>\r\n}\r\n\r\nlet AuthRoute = ({logged, path, component, ...remainingProps}) => {\r\n    if(logged) return <Redirect to='/' {...remainingProps}/>\r\n    return <Route path={path} component={component} {...remainingProps}/> \r\n}\r\n\r\nlet Routes = ({info, logged, checkSession}) => {\r\n\r\n    let { userType } = info\r\n\r\n    useEffect(() => {\r\n        checkSession()\r\n        // eslint-disable-next-line\r\n    },[])\r\n\r\n    return <Switch>\r\n        <AuthRoute path='/login' logged={logged} component={Login}/>\r\n        <AuthRoute path='/register/:type' logged={logged} component={RegisterFormLayout}/>\r\n        <AuthRoute exact path='/recover-password' logged={logged} component={ForgotPassword}/>\r\n        <AuthRoute path='/recover-password/token' logged={logged} component={ForgotPasswordToken}/>\r\n        <PrivateRoute exact path='/' logged={logged} component={Profile}/>\r\n        <PrivateRoute path='/profile' logged={logged} component={Profile}/>\r\n        <PrivateRoute path='/choose' logged={logged} component={ChooseHouse}/>\r\n        <PrivateRoute path='/buy' logged={logged} component={BuyHouse}/>\r\n        <PrivateRoute path='/data' logged={logged} component={UserData}/>\r\n        <AdminRoute exact path='/admin/addHouse' userType={userType} logged={logged} component={AddHouse}/>\r\n    </Switch>\r\n}\r\n\r\nlet mapState = ({user: {logged, info}}) => ({logged, info})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        checkSession: checkSessionAction\r\n    }\r\n)(Routes)","import React from 'react';\r\nimport Navbar from './components/common/Navbar';\r\nimport Footer from './components/common/Footer';\r\nimport Routes from './Routes';\r\nimport { Layout } from 'antd';\r\nconst { Content } = Layout\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Navbar/>\r\n      <Content>\r\n        <Routes/>\r\n      </Content>\r\n      <Footer/>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport userReducer from './userDuck'\r\nimport appReducer from './appDuck'\r\nimport dataReducer from './dataDuck'\r\nimport adminReducer from './adminDuck'\r\n\r\nlet rootReducer = combineReducers({\r\n    app: appReducer,\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    admin: adminReducer\r\n})\r\n\r\nlet composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nlet middlewares = [thunk]\r\n\r\nlet generateStore = () => createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n)\r\n\r\nlet generateStoreProduction = () => createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middlewares)\r\n)\r\n\r\nexport default process.env.NODE_ENV === 'development' ? generateStore : generateStoreProduction","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { CookiesProvider } from 'react-cookie'\r\nimport { Provider } from 'react-redux'\r\nimport generateStore from './redux/store'\r\nimport 'antd/dist/antd.css';\r\nimport './styles.scss';\r\nlet store = generateStore()\r\n\r\nlet WithRouter = () => <BrowserRouter><App/></BrowserRouter>\r\nlet WithStore = () => <Provider store={store}><WithRouter/></Provider>\r\nlet WithCookies = () => <CookiesProvider><WithStore/></CookiesProvider>\r\n\r\nReactDOM.render(\r\n    <WithCookies/>, document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}