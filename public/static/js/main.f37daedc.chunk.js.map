{"version":3,"sources":["services/api.js","redux/userDuck.js","components/text/index.js","redux/appDuck.js","components/common/AuthNav.jsx","components/common/Navbar.jsx","components/auth/LoginForm.jsx","components/auth/Login.jsx","components/auth/Register.jsx","components/home/Home.jsx","components/auth/registerComponents/BasicData.jsx","components/auth/RegisterFormLayout.jsx","components/auth/forgotPassword/ForgotPassword.jsx","components/auth/forgotPassword/ForgotPasswordToken.jsx","redux/dataDuck.js","components/home/Profile.jsx","Routes.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["url","token","data","axios","post","initialData","fetching","info","error","logged","Cookies","get","tokenSent","validCode","passwordChanged","reducer","state","action","type","payload","logoutAction","dispatch","remove","roles","buyer","english","espa√±ol","seller","agent","serviceProvider","form","required","forgotPassword","forgotPasswordLink","register","registerLink","button","send","next","login","return","update","navbar","index","aboutUs","amenities","contact","portalTitle","portalSubtitle","emailPlaceholder","passwordPlaceholder","loginLink","firstName","lastName","secondLastName","company","email","phone","beneficiary","beneficiaryTitle","beneficiaryEmail","beneficiaryPhone","selectAgent","password","repeatPassword","confirm","recoverPassword","title","message","successEmail","successToken","recoverMessage","enterToken","enterNewPassword","pwdIndicator","pwdError","pwdSuccess","redirect","sidebar","profile","chooseHouse","buyHouse","documentation","financing","interiorDesign","propietaryService","faq","help","sidebarSubtitle","messages","missingFields","missingSelection","incorrectEmail","incorrectPassword","repeatedPasswordError","consent","wrongPassword","requestError","enterTokenError","responses","yes","no","language","changeLangAction","getState","app","set","connect","toggleLanguage","logout","className","src","alt","onClick","text","user","useState","activeBurger","setActiveBurger","isDesktop","useMediaQuery","query","menu","Item","key","to","overlay","trigger","isActive","buttonWidth","userData","then","res","maxAge","userInfo","catch","err","response","history","setData","handleData","e","target","name","value","useEffect","status","push","initialValues","remember","onFinish","test","toLowerCase","warning","rules","onChange","placeholder","Password","loading","htmlType","role","setRole","style","backgroundImage","size","Option","Select","signup","signupData","defaultValue","beneficiaryName","beneficiaryLastName","beneficiarySecondLastName","customerAgent","checked","length","warn","marginTop","sendToken","setEmail","handleSubmit","onKeyPress","checkCode","changePassword","setToken","setPassword","handleNewPassword","success","setTimeout","fetchingData","getData","id","handleInfo","PrivateRoute","path","component","remainingProps","AuthRoute","checkSession","jwt","exact","Home","Profile","Login","Register","RegisterFormLayout","ForgotPassword","ForgotPasswordToken","Content","Layout","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","appReducer","userReducer","dataReducer","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","thunk","process","createStore","applyMiddleware","store","generateStore","WithRouter","WithStore","WithCookies","CookiesProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.f37daedc.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n// let url = 'http://localhost:3000'\r\nlet url = 'https://app.puntapiedra.com'\r\n\r\n// AUTH\r\nexport let signup = data => axios.post(`${url}/auth/signup`, data)\r\nexport let login = data => axios.post(`${url}/auth/login`, data)\r\nexport let token = data => axios.post(`${url}/auth/token`, data)\r\nexport let checkCode = data => axios.post(`${url}/auth/checkCode`, data)\r\nexport let changePassword = data => axios.post(`${url}/auth/changePassword`, data)\r\nexport let logout = () => axios.post(`${url}/auth/logout`)\r\n\r\n// DATA\r\nexport let getData = data => axios.post(`${url}/data/getData`, data)","import { signup, login, logout, token, checkCode, changePass, changePassword } from \"../services/api\"\r\nimport { Cookies } from \"react-cookie\"\r\n\r\nlet initialData = {\r\n    fetching: true,\r\n    info: {},\r\n    error: {},\r\n    logged: new Cookies().get('id') ? true : false,\r\n    tokenSent: false,\r\n    validCode: false,\r\n    passwordChanged: false\r\n}\r\n\r\nlet LOGIN = 'LOGIN'\r\nlet LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nlet LOGIN_ERROR = 'LOGIN_ERROR'\r\n\r\nlet SIGNUP = 'SIGNUP'\r\nlet SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nlet SIGNUP_ERROR = 'SIGNUP_ERROR'\r\n\r\nlet SEND_TOKEN = 'SEND_TOKEN'\r\nlet SEND_TOKEN_SUCCESS = 'SEND_TOKEN_SUCCESS'\r\nlet SEND_TOKEN_ERROR = 'SEND_TOKEN_ERROR'\r\n\r\nlet CHECK_CODE = 'CHECK_CODE'\r\nlet CHECK_CODE_SUCCESS = 'CHECK_CODE_SUCCESS'\r\nlet CHECK_CODE_ERROR = 'CHECK_CODE_ERROR'\r\n\r\nlet CHANGE_PASSWORD = 'CHANGE_PASSWORD'\r\nlet CHANGE_PASSWORD_SUCCESS = 'CHANGE_PASSWORD_SUCCESS'\r\nlet CHANGE_PASSWORD_ERROR = 'CHANGE_PASSWORD_ERROR'\r\n\r\nlet LOGOUT = 'LOGOUT'\r\n\r\nlet CHECK_SESSION = 'CHECK_SESSION'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n\r\n        case LOGIN:\r\n            return {...state, fetching: true, info: initialData.info, error: {}}\r\n        case LOGIN_SUCCESS:\r\n            return {...state, fetching: false}\r\n        case LOGIN_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case SIGNUP:\r\n            return {...state, fetching: true, info: initialData.info, error: {}}\r\n        case SIGNUP_SUCCESS:\r\n            return {...state, fetching: false}\r\n        case SIGNUP_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case SEND_TOKEN:\r\n            return {...state, tokenSent: false, fetching: true, error: {}}\r\n        case SEND_TOKEN_SUCCESS:\r\n            return {...state, tokenSent: true, fetching: false}\r\n        case SEND_TOKEN_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case CHECK_CODE:\r\n            return {...state, validCode: false, fetching: true, error: {}}\r\n        case CHECK_CODE_SUCCESS:\r\n            return {...state, validCode: true, fetching: false}\r\n        case CHECK_CODE_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case CHANGE_PASSWORD:\r\n            return {...state, passwordChanged: false, fetching: true, error: {}}\r\n        case CHANGE_PASSWORD_SUCCESS:\r\n            return {...state, passwordChanged: true, fetching: false}\r\n        case CHANGE_PASSWORD_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case LOGOUT:\r\n            return {...state, info: initialData.info, logged: false}\r\n\r\n        case CHECK_SESSION:\r\n            return {...state, logged: action.payload.logged, info: action.payload.info, fetching: action.payload.fetching}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let changePasswordAction = password => dispatch => {\r\n    let email = new Cookies().get('recoveryEmail')\r\n    if(!email) dispatch({\r\n        type: CHANGE_PASSWORD_ERROR,\r\n        payload: {status: 404}\r\n    })\r\n    dispatch({\r\n        type: CHANGE_PASSWORD\r\n    })\r\n    changePassword({...email, password})\r\n        .then(res => dispatch({\r\n            type: CHANGE_PASSWORD_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: CHANGE_PASSWORD_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let checkTokenAction = token => dispatch => {\r\n    let email = new Cookies().get('recoveryEmail')\r\n    if(!email) dispatch({\r\n        type: CHECK_CODE_ERROR,\r\n        payload: {status: 404}\r\n    })\r\n    dispatch({\r\n        type: CHECK_CODE\r\n    })\r\n    checkCode({token})\r\n        .then(res => dispatch({\r\n            type: CHECK_CODE_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: CHECK_CODE_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let sendTokenAction = email => dispatch => {\r\n    new Cookies().set('recoveryEmail', email, {maxAge: 60 * 60 * 2})\r\n    dispatch({\r\n        type: SEND_TOKEN\r\n    })\r\n    token({email})\r\n        .then(res => dispatch({\r\n            type: SEND_TOKEN_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: SEND_TOKEN_ERROR,\r\n            payload: err.response\r\n        }))\r\n} \r\n\r\nexport let signupAction = signupData => dispatch => {\r\n    dispatch({\r\n        type: SIGNUP\r\n    })\r\n    signup(signupData)\r\n        .then(res => {\r\n            let { data } = res\r\n            new Cookies().set('id', data.token, {maxAge: 60 * 60 * 24})\r\n            new Cookies().set('user', data.userInfo, {maxAge: 60 * 60 * 24})\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS\r\n            })\r\n            dispatch({\r\n                type: CHECK_SESSION,\r\n                payload: {logged: true, info: data.userInfo, fetching: false}\r\n            })\r\n            token({email: signupData.email})\r\n        })\r\n        .catch(err => dispatch({\r\n            type: SIGNUP_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let checkSessionAction = () => dispatch => {\r\n    let jwt = new Cookies().get('id')\r\n    let user = new Cookies().get('user')\r\n    if(jwt){ \r\n        user && dispatch({\r\n            type: CHECK_SESSION,\r\n            payload: {logged: true, info: user, fetching: false}\r\n        })\r\n        return\r\n    }\r\n    return dispatch({\r\n        type: CHECK_SESSION,\r\n        payload: {logged: false, info: {}, fetching: false}\r\n    })\r\n}\r\n\r\nexport let loginAction = userData => dispatch => {\r\n    dispatch({\r\n        type: LOGIN\r\n    })\r\n    login(userData)\r\n        .then(res => {\r\n            let { data } = res\r\n            new Cookies().set('id', data.token, {maxAge: 60 * 60 * 24})\r\n            new Cookies().set('user', data.userInfo, {maxAge: 60 * 60 * 24})\r\n            dispatch({\r\n                type: LOGIN_SUCCESS\r\n            })\r\n            dispatch({\r\n                type: CHECK_SESSION,\r\n                payload: {logged: true, info: data.userInfo, fetching: false}\r\n            })\r\n        })\r\n        .catch(err => dispatch({\r\n            type: LOGIN_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let logoutAction = () => dispatch => {\r\n    logout()\r\n    new Cookies().remove('id')\r\n    new Cookies().remove('user')\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}","export default {\r\n    roles: {\r\n        buyer: {\r\n            english: 'BUYER',\r\n            espa√±ol: 'COMPRADOR'\r\n        },\r\n        seller: {\r\n            english: 'SELLER',\r\n            espa√±ol: 'VENDEDOR'\r\n        },\r\n        agent: {\r\n            english: 'AGENT',\r\n            espa√±ol: 'REPRESENTANTE'\r\n        },\r\n        serviceProvider: {\r\n            english: 'SERVICE PROVIDER',\r\n            espa√±ol: 'PROVEEDOR DE SERVICIO'            \r\n        }\r\n    },\r\n    form: {\r\n        required: {\r\n            english: 'Required',\r\n            espa√±ol: 'Requerido'\r\n        },\r\n        forgotPassword: {\r\n            english: 'FORGOT YOUR PASSWORD?',\r\n            espa√±ol: '¬øOLVIDASTE TU CONTRASE√ëA?'\r\n        },\r\n        forgotPasswordLink: {\r\n            english: 'CLICK HERE',\r\n            espa√±ol: 'HAZ CLICK AQU√ç'\r\n        },\r\n        register: {\r\n            english: \"STILL DON'T HAVE AN ACCOUNT?\",\r\n            espa√±ol: '¬øA√öN NO TIENES UNA CUENTA?'\r\n        },\r\n        registerLink: {\r\n            english: 'REGISTER HERE',\r\n            espa√±ol: 'REG√çSTRATE AQU√ç'\r\n        }\r\n    },\r\n    button: {\r\n        send: {\r\n            english: 'SEND',\r\n            espa√±ol: 'ENVIAR'\r\n        },\r\n        next: {\r\n            english: 'NEXT',\r\n            espa√±ol: 'SIGUIENTE'\r\n        },\r\n        login: {\r\n            english: 'LOGIN',\r\n            espa√±ol: 'INICIAR SESI√ìN'\r\n        },\r\n        register: {\r\n            english: 'REGISTER',\r\n            espa√±ol: 'REGISTRARME'\r\n        },\r\n        return: {\r\n            english: 'Return',\r\n            espa√±ol: 'Regresar'\r\n        },\r\n        update: {\r\n            english: 'UPDATE',\r\n            espa√±ol: 'ACTUALIZAR'\r\n        }\r\n    },\r\n    navbar: {\r\n        index: {\r\n            english: 'HOME',\r\n            espa√±ol: 'INICIO'\r\n        },\r\n        aboutUs: {\r\n            english: 'ABOUT US',\r\n            espa√±ol: 'SOBRE NOSOTROS'\r\n        },\r\n        amenities: {\r\n            english: 'AMENITIES',\r\n            espa√±ol: 'AMENIDADES'\r\n        },\r\n        contact: {\r\n            english: 'CONTACT US',\r\n            espa√±ol: 'CONTACTO'\r\n        }\r\n    },\r\n    login: {\r\n        portalTitle: {\r\n            english: 'CUSTOMER PORTAL',\r\n            espa√±ol: 'PORTAL DE CLIENTES'\r\n        },\r\n        portalSubtitle: {\r\n            english: 'LOGIN',\r\n            espa√±ol: 'INICIAR SESI√ìN'\r\n        },\r\n        emailPlaceholder : {\r\n            english: 'WRITE YOUR EMAIL',\r\n            espa√±ol: 'ESCRIBE TU CORREO'\r\n        },\r\n        passwordPlaceholder : {\r\n            english: 'WRITE YOUR PASSWORD',\r\n            espa√±ol: 'ESCRIBE TU CONTRASE√ëA'\r\n        },\r\n    },\r\n    register: {\r\n        portalTitle: {\r\n            english: 'CUSTOMER PORTAL',\r\n            espa√±ol: 'PORTAL DE CLIENTES'\r\n        },\r\n        portalSubtitle: {\r\n            english: 'REGISTER',\r\n            espa√±ol: 'REGISTRO'\r\n        },\r\n        login: {\r\n            english: \"HAVE AN ACCOUNT?\",\r\n            espa√±ol: '¬øYA TIENES UNA CUENTA?'\r\n        },\r\n        loginLink: {\r\n            english: 'LOGIN',\r\n            espa√±ol: 'INICIA SESI√ìN'\r\n        },\r\n        firstName: {\r\n            english: 'NAME',\r\n            espa√±ol: 'NOMBRE'\r\n        },\r\n        lastName: {\r\n            english: 'LAST NAME',\r\n            espa√±ol: 'APELLIDO PATERNO'\r\n        },\r\n        secondLastName : {\r\n            espa√±ol: 'APELLIDO MATERNO'\r\n        },\r\n        company: {\r\n            english: 'WRITE THE NAME OF THE COMPANY YOU REPRESENT',\r\n            espa√±ol: 'ESCRIBE EL NOMBRE DE LA COMPA√ë√çA QUE REPRESENTAS'\r\n        },\r\n        email: {\r\n            english: 'WRITE YOUR EMAIL',\r\n            espa√±ol: 'ESCRIBE TU CORREO'\r\n        },\r\n        phone: {\r\n            english: 'WRITE YOUR PHONE',\r\n            espa√±ol: 'ESCRUBE TU TEL√âFONO'\r\n        },\r\n        beneficiary: {\r\n            english: 'DO YOU WANT TO ADD A BENEFICIARY?',\r\n            espa√±ol: '¬øDESEAS A√ëADIR UN BENEFICIARIO?'\r\n        },\r\n        beneficiaryTitle: {\r\n            english: 'BENEFICIARY DATA',\r\n            espa√±ol: 'DATOS DEL BENEFICIARIO'\r\n        },\r\n        beneficiaryEmail: {\r\n            english: 'EMAIL',\r\n            espa√±ol: 'SU CORREO'\r\n        },\r\n        beneficiaryPhone: {\r\n            english: 'PHONE',\r\n            espa√±ol: 'TEL√âFONO'\r\n        },\r\n        selectAgent: {\r\n            english: 'SELECT YOUR AGENT',\r\n            espa√±ol: 'SELECCIONA TU AGENTE'\r\n        },\r\n        password: {\r\n            english: 'CHOOSE A SECURE PASSWORD',\r\n            espa√±ol: 'ELIGE UNA CONTRASE√ëA SEGURA'\r\n        },\r\n        repeatPassword: {\r\n            english: 'REPEAT YOUR PASSWORD',\r\n            espa√±ol: 'REPITE TU CONTRASE√ëA'\r\n        },\r\n        confirm: {\r\n            english: 'I CONFIRM THAT MY INFORMATION IS REAL',\r\n            espa√±ol: 'CONFIRMO QUE MIS DATOS SON REALES'\r\n        }\r\n    },\r\n    recoverPassword: {\r\n        title: {\r\n            english: 'TROUBLE TO SIGN IN?',\r\n            espa√±ol: '¬øPROBLEMAS PARA INGRESAR?'\r\n        },\r\n        message: {\r\n            english: 'ENTER YOUR EMAIL AND WE WILL SEND YOU INSTRUCTIONS TO RECOVER YOUR PASSWORD',\r\n            espa√±ol: 'CONFIRMA TU CORREO Y TE ENVIAREMOS INSTRUCCIONES PARA REESTABLECER TU CONTRASE√ëA'\r\n        },\r\n        successEmail: {\r\n            english: 'Email sent, please check your inbox',\r\n            espa√±ol: 'Correo enviado, por favor revisa tu bandeja de entrada'\r\n        },\r\n        successToken: {\r\n            english: 'Valid code',\r\n            espa√±ol: 'C√≥digo v√°lido'\r\n        },\r\n        recoverMessage: {\r\n            english: 'RECOVER PASSWORD',\r\n            espa√±ol: 'RECUPERAR CONTRASE√ëA'\r\n        },\r\n        enterToken: {\r\n            english: 'ENTER THE 4 DIGIT CODE',\r\n            espa√±ol: 'INGRESA EL C√ìDIGO DE 4 D√çGITOS'\r\n        },\r\n        enterNewPassword: {\r\n            english: 'ENTER YOUR NEW PASSWORD',\r\n            espa√±ol: 'ESCRIBE TU NUEVA CONTRASE√ëA'\r\n        },\r\n        pwdIndicator: {\r\n            english: 'The password must have at least 6 characters and 1 number',\r\n            espa√±ol: 'La contrase√±a debe tener al menos 6 caracteres y 1 n√∫mero'\r\n        },\r\n        pwdError: {\r\n            english: 'Enter a valid password',\r\n            espa√±ol: 'Ingresa una contrase√±a v√°lida'\r\n        },\r\n        pwdSuccess: {\r\n            english: 'Password changed successfully',\r\n            espa√±ol: 'Contrase√±a actualizada correctamente'\r\n        },\r\n        redirect: {\r\n            english: 'Redirecting to login...',\r\n            espa√±ol: 'Redirigiendo al inicio de sesi√≥n...'\r\n        }\r\n    },\r\n    sidebar: {\r\n        profile: {\r\n            english: 'Profile',\r\n            espa√±ol: 'Perfil'\r\n        },\r\n        chooseHouse: {\r\n            english: 'Choose house',\r\n            espa√±ol: 'Elegir casa'\r\n        },\r\n        buyHouse: {\r\n            english: 'Buy house',\r\n            espa√±ol: 'Comprar casa'\r\n        },\r\n        documentation: {\r\n            english: 'Documentation',\r\n            espa√±ol: 'Documentaci√≥n'\r\n        },\r\n        financing: {\r\n            english: 'Financing',\r\n            espa√±ol: 'Financiamiento'\r\n        },\r\n        interiorDesign: {\r\n            english: 'Interior design',\r\n            espa√±ol: 'Dise√±o del interior'\r\n        },\r\n        propietaryService: {\r\n            english: 'Propietary service',\r\n            espa√±ol: 'Servicios para propietarios'\r\n        },\r\n        faq: {\r\n            english: 'FAQs',\r\n            espa√±ol: 'Preguntas frecuentes'\r\n        },\r\n        help: {\r\n            english: 'Help',\r\n            espa√±ol: 'Ayuda'\r\n        }\r\n    },\r\n    sidebarSubtitle: {\r\n        profile: {\r\n            english: \"Let's start updating your profile\",\r\n            espa√±ol: '¬øComenzamos a configurar tu perfil?'\r\n        },\r\n        chooseHouse: {\r\n            english: \"It's time to choose your new house\",\r\n            espa√±ol: 'Es momento de elegir tu nueva casa'\r\n        },\r\n        buyHouse: {\r\n            english: \"Let's acquire your new property\",\r\n            espa√±ol: 'Vamos a adquirir tu neuvo inmueble'\r\n        },\r\n        documentation: {\r\n            english: 'Register your info and documents',\r\n            espa√±ol: 'Registra tus datos y documentos'\r\n        },\r\n        financing: {\r\n            english: 'Financing',\r\n            espa√±ol: 'Financiamiento'\r\n        },\r\n        interiorDesign: {\r\n            english: 'Choose your new house accesories',\r\n            espa√±ol: 'Elige los accesorios de tu nueva casa'\r\n        },\r\n        propietaryService: {\r\n            english: 'Propietary service',\r\n            espa√±ol: 'Servicios para propietarios'\r\n        },\r\n        faq: {\r\n            english: 'FAQs',\r\n            espa√±ol: 'Preguntas frecuentes'\r\n        },\r\n        help: {\r\n            english: 'Help',\r\n            espa√±ol: 'Ayuda'\r\n        }\r\n    },\r\n    profile: {\r\n        beneficiaryTitle: {\r\n            english: 'BENEFICIARY 1 (LEAVE EMPTY IF NOT APPLICABLE)',\r\n            espa√±ol: 'BENEFICIARIO 1 (DEJA EN BLANCO SI NO APLICA)'\r\n        }\r\n    },\r\n    messages: {\r\n        missingFields: {\r\n            english: 'You must fill all the inputs',\r\n            espa√±ol: 'Debes llenar todos los campos'\r\n        },\r\n        missingSelection: {\r\n            english: 'You must select an option',\r\n            espa√±ol: 'Debes seleccionar una opci√≥n'\r\n        },\r\n        incorrectEmail: {\r\n            english: 'Please type a valid email',\r\n            espa√±ol: 'Por favor ingresa un correo v√°lido'\r\n        },\r\n        incorrectPassword: {\r\n            english: 'Your password must have at least 6 characters and 1 number',\r\n            espa√±ol: 'Tu contrase√±a debe tener al menos 6 caracteres y 1 n√∫mero'\r\n        },\r\n        repeatedPasswordError: {\r\n            english: \"The passwords don't match\",\r\n            espa√±ol: 'Las contrase√±as no coinciden'\r\n        },\r\n        consent: {\r\n            english: 'You must confirm that the information is real',\r\n            espa√±ol: 'Debes confirmar que tus datos son reales'\r\n        },\r\n        wrongPassword: {\r\n            english: 'Incorrect password',\r\n            espa√±ol: 'Contrase√±a incorrecta'\r\n        },\r\n        requestError: {\r\n            english: 'We could not complete your request',\r\n            espa√±ol: 'No pudimos completar tu solicitud'\r\n        },\r\n        enterTokenError: {\r\n            english: 'Incorrect code',\r\n            espa√±ol: 'C√≥digo incorrecto' \r\n        }\r\n    },\r\n    responses: {\r\n        yes: {\r\n            english: 'YES',\r\n            espa√±ol: 'SI'\r\n        },\r\n        no: {\r\n            english: 'NO',\r\n            espa√±ol: 'NO'\r\n        }\r\n    }\r\n}","import { Cookies } from \"react-cookie\"\r\n\r\nlet initialData = {\r\n    language: new Cookies().get('language') || 'english'\r\n}\r\n\r\nlet CHANGE_LANG = 'CHANGE_LANG'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        case CHANGE_LANG:\r\n            return {...state, language: action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let changeLangAction = () => (dispatch, getState) => {\r\n    let { language } = getState().app\r\n    new Cookies().set('language', language === 'english' ? 'espa√±ol' : 'english')\r\n    dispatch({\r\n        type: CHANGE_LANG,\r\n        payload: language === 'english' ? 'espa√±ol' : 'english'\r\n    })\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { changeLangAction } from '../../redux/appDuck'\r\nimport { logoutAction } from '../../redux/userDuck'\r\nimport text from '../text'\r\n\r\nconst AuthNav = ({language, toggleLanguage, logout}) => {\r\n    return (\r\n        <div className='auth-nav'>\r\n            <div className=\"top-nav\">\r\n                <img src=\"/img/navbar/lupa.svg\" alt=\"lupa\"/>\r\n                <img src=\"/img/navbar/notify.svg\" alt=\"notify\"/>\r\n                <img onClick={logout} src=\"/img/navbar/profile.svg\" alt=\"profile\"/>\r\n                <p className='language-selector' onClick={toggleLanguage}>\r\n                    {language}\r\n                </p>\r\n            </div>\r\n            <div className=\"left-nav\">\r\n                <img className='sidebar-logo' src=\"/img/common/logo-dark.png\" alt=\"PP logo black\"/>\r\n                <div className=\"sidebar-nav\">\r\n                    <div className=\"sidebar-element\">\r\n                        <img src=\"/img/sidebar/profile-gray.svg\" alt=\"nav element\"/>\r\n                        <p>{text.sidebar.profile[language]}</p>\r\n                    </div>\r\n                    <div className=\"sidebar-element\">\r\n                        <img src=\"/img/sidebar/chooseHouse-gray.svg\" alt=\"nav element\"/>\r\n                        <p>{text.sidebar.chooseHouse[language]}</p>\r\n                    </div>\r\n                    <div className=\"sidebar-element\">\r\n                        <img src=\"/img/sidebar/documents-gray.svg\" alt=\"nav element\"/>\r\n                        <p>{text.sidebar.documentation[language]}</p>\r\n                    </div>\r\n                    <div className=\"sidebar-element\">\r\n                        <img src=\"/img/sidebar/finance-gray.svg\" alt=\"nav element\"/>\r\n                        <p>{text.sidebar.financing[language]}</p>\r\n                    </div>\r\n                    <div className=\"sidebar-element\">\r\n                        <img src=\"/img/sidebar/intDesign-gray.svg\" alt=\"nav element\"/>\r\n                        <p>{text.sidebar.interiorDesign[language]}</p>\r\n                    </div>\r\n                    <div className=\"sidebar-element\">\r\n                        <img src=\"/img/sidebar/ownerServ-gray.svg\" alt=\"nav element\"/>\r\n                        <p>{text.sidebar.propietaryService[language]}</p>\r\n                    </div>\r\n                    <div className=\"sidebar-element\">\r\n                        <img src=\"/img/sidebar/faq-gray.svg\" alt=\"nav element\"/>\r\n                        <p>{text.sidebar.faq[language]}</p>\r\n                    </div>\r\n                    <div className=\"sidebar-element\">\r\n                        <img src=\"/img/sidebar/help-gray.svg\" alt=\"nav element\"/>\r\n                        <p>{text.sidebar.help[language]}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        toggleLanguage: changeLangAction,\r\n        logout: logoutAction\r\n    }\r\n)(AuthNav)\r\n","import React, { useState } from 'react'\r\nimport { Dropdown, Menu, PageHeader } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { logoutAction } from '../../redux/userDuck'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\nimport { changeLangAction } from '../../redux/appDuck'\r\nimport { HamburgerCollapse } from 'react-animated-burgers'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport AuthNav from './AuthNav'\r\n\r\nconst Navbar = ({logged, language, logout, toggleLanguage}) => {\r\n\r\n    let [activeBurger, setActiveBurger] = useState(false)\r\n\r\n    let isDesktop = useMediaQuery({query: '(min-device-width: 950px)'})\r\n    let menu = (\r\n        <Menu>\r\n            <Menu.Item key='0'>\r\n                <Link to='/'>{text.navbar.index[language]}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='1'>\r\n                <Link to='/us'>{text.navbar.aboutUs[language]}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='2'>\r\n                <Link to='/amenities'>{text.navbar.amenities[language]}</Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    let loggedMenu = (\r\n        <Menu>\r\n            <Menu.Item key='0'>\r\n                <li onClick={logout}>Logout</li>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !logged ?  \r\n                    <PageHeader className='navbar-container'>\r\n                        <Link to='/'><img src=\"/logo.png\" alt=\"Logo\"/></Link>\r\n                        {\r\n                            isDesktop ?\r\n                                <div className='right-nav'>\r\n                                    <ul>\r\n                                        <li><Link to='/'>{text.navbar.index[language]}</Link></li>\r\n                                        <li><Link to='/us'>{text.navbar.aboutUs[language]}</Link></li>\r\n                                        <li><Link to='/amenities'>{text.navbar.amenities[language]}</Link></li>\r\n                                        <li><Link to='/contact'>{text.navbar.contact[language]}</Link></li>\r\n                                    </ul>\r\n                                    <p className='language-selector' onClick={toggleLanguage}>\r\n                                        {language}\r\n                                    </p>\r\n                                </div>\r\n                            :\r\n                                <div className='mobile-right-nav'>\r\n                                    <p className='language-selector' onClick={toggleLanguage}>\r\n                                        {language}\r\n                                    </p>\r\n                                    <Dropdown overlay={menu} trigger={['click']}>\r\n                                        <HamburgerCollapse isActive={activeBurger} onClick={() => setActiveBurger(!activeBurger)} className='hamburger' buttonWidth={30}/>\r\n                                    </Dropdown>\r\n                                </div>\r\n                        }\r\n                    </PageHeader>\r\n                :\r\n                    <AuthNav/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {logged}, \r\n    app: {language}\r\n}) => ({\r\n    logged, \r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        logout: logoutAction,\r\n        toggleLanguage: changeLangAction\r\n    }\r\n)(Navbar)","import React, { useEffect, useState } from 'react'\r\nimport { Button, Input, Form, message } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { loginAction } from '../../redux/userDuck'\r\nimport text from '../text'\r\n\r\nlet LoginForm = ({history, language, info, fetching, error, login}) => {\r\n\r\n    let [data, setData] = useState({})\r\n\r\n    let onFinish = () => {\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if(!data.email || !rex.test(data.email.toLowerCase())) return message.warning(text.messages.incorrectEmail[language])\r\n        if(!data.password) return message.error(text.messages.incorrectPassword[language])\r\n        login(data)\r\n    }\r\n\r\n    let handleData = e => setData({...data, [e.target.name]: e.target.value})\r\n\r\n    useEffect(() => {\r\n        if(error.status === 403) return message.error(text.messages.wrongPassword[language])\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n        if(info.name) history.push('/profile')\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[info, error])\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: text.form.required[language],\r\n                },\r\n                ]}\r\n            >\r\n                <Input name='email' onChange={handleData} placeholder={text.login.emailPlaceholder[language]}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: text.form.required[language],\r\n                },\r\n                ]}\r\n            >\r\n                <Input.Password name='password' onChange={handleData} placeholder={text.login.passwordPlaceholder[language]}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button loading={fetching} className='nav-button' type=\"primary\" htmlType=\"submit\">\r\n                    {text.button.login[language]}\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapState = ({\r\n    user: {info, fetching, error},\r\n    app: {language}\r\n}) => ({\r\n    language,\r\n    info,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState, \r\n    {\r\n        login: loginAction\r\n    }\r\n)(LoginForm)\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport LoginForm from './LoginForm'\r\nimport text from '../text'\r\n\r\nlet Login = ({language}) => {\r\n    return (\r\n        <div className='padded-container'>\r\n            <div className='auth-container'>\r\n                <div className=\"auth-left-content\">\r\n                    <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                    <p className='title'>{text.login.portalTitle[language]}</p>\r\n                    <p className='subtitle'>{text.login.portalSubtitle[language]}</p>\r\n                    <br/>\r\n                    <LoginForm/>\r\n                    <div className=\"auth-bottom-text\">\r\n                        <p>{text.form.forgotPassword[language]} <Link to='/recover-password'>{text.form.forgotPasswordLink[language]}</Link></p>\r\n                        <p>{text.form.register[language]} <Link to='/register'>{text.form.registerLink[language]}</Link></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auth-right-content\">\r\n                <img className='title-icon' src=\"/img/register/professional.png\" alt=\"Perfil\"/>\r\n                    <p className='title'>{text.roles.agent[language]} / {text.roles.serviceProvider[language]}</p>\r\n                    <p className='login-info-text'>\r\n                        Lorem ipsum dolor sit amet consectetur, adipisicing elit. \r\n                        Alias placeat, veritatis magni dolore itaque non totam! \r\n                        Vero, vitae? Nostrum eveniet accusantium maiores quis \r\n                        alias possimus eaque itaque ipsam repellendus! Iure?\r\n                        Lorem ipsum dolor sit, amet consectetur adipisicing elit. \r\n                        Possimus accusamus error laboriosam. Explicabo, ad ipsa corrupti \r\n                        voluptas officia facilis. Expedita odio modi est non ratione. \r\n                        Iure esse maiores dolore accusamus.\r\n                        <br/><br/>\r\n                        Dicta, illo numquam? Ad possimus debitis nam nostrum adipisci \r\n                        laudantium eveniet, vitae hic, suscipit facilis architecto \r\n                        molestias nihil placeat cumque et vero at fuga! Maxime non ea \r\n                        fugit ratione dolore? Quis eos odit accusantium eum facilis accusamus pariatur non \r\n                    </p>\r\n                    <Button className='nav-button' type='primary'>{text.roles.agent[language]}</Button>\r\n                    <Button className='nav-button' type='primary'>{text.roles.serviceProvider[language]}</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        \r\n    }\r\n)(Login)","import React, { useState } from 'react'\r\nimport { Button, message } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nlet Register = ({history, language}) => {\r\n\r\n    let [role, setRole] = useState(null)\r\n\r\n    let selectRole = () => {\r\n        if(!role) return message.error(text.messages.missingSelection[language])\r\n        return history.push(`/register/${role}`)\r\n    }\r\n\r\n    return (\r\n        <div className='register-container'>\r\n            <div style={{backgroundImage: 'linear-gradient(to bottom, #F9C799AA, #FFFFFF00), url(/img/register/bg.png)'}} className=\"left-register\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>{text.register.portalSubtitle[language]}</p>\r\n                <div className=\"roles-boxes\">\r\n                    <div onClick={() => setRole('buyer')} className={`role-box ${role === 'buyer' && 'rb-active'}`}>\r\n                        <p>{text.roles.buyer[language]}</p>\r\n                        <img src={role === 'buyer' ? \"/img/register/buyer-active.png\" : \"/img/register/buyer.png\"} alt=\"Buyer\"/>\r\n                    </div>\r\n                    <div onClick={() => setRole('seller')} className={`role-box ${role === 'seller' && 'rb-active'}`}>\r\n                        <p>{text.roles.seller[language]}</p>\r\n                        <img src={role === 'seller' ? \"/img/register/seller-active.png\" : \"/img/register/seller.png\"} alt=\"Seller\"/>\r\n                    </div>\r\n                    <div onClick={() => setRole('agent')} className={`role-box ${role === 'agent' && 'rb-active'}`}>\r\n                        <p>{text.roles.agent[language]}</p>\r\n                        <img src={role === 'agent' ? \"/img/register/agent-active.png\" : \"/img/register/agent.png\"} alt=\"agent\"/>\r\n                    </div>\r\n                    <div onClick={() => setRole('provider')} className={`role-box ${role === 'provider' && 'rb-active'}`}>\r\n                        <p>{text.roles.serviceProvider[language]}</p>\r\n                        <img src={role === 'provider' ? \"/img/register/provider-active.png\" : \"/img/register/provider.png\"} alt=\"provider\"/>\r\n                    </div>\r\n                </div>\r\n                <Button onClick={selectRole} className='nav-button'>{text.button.next[language]}</Button>\r\n                <div className=\"auth-bottom-text\">\r\n                    <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({app: {language}}) => ({language})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        \r\n    }\r\n)(Register)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Spin } from 'antd'\r\n\r\nlet Home = ({fetching, name}) => {\r\n\r\n    return (\r\n        <div className='padding-container home-container'>\r\n            {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <h1>Punta Piedra {name}</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({user: {fetching, info: {name}}}) => ({fetching, name})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        \r\n    }    \r\n)(Home)","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, message, Select, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signupAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\nlet { Option } = Select\r\n\r\nlet BasicData = ({fetching, language, error, info, signup, history}) => {\r\n\r\n    let [data, setData] = useState({\r\n        type: 'buyer'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'espa√±ol') ||\r\n             !data.company ||\r\n             !data.email ||\r\n             !data.phone\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        if(!data.consent) return message.warn(text.messages.consent[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/profile')\r\n    }, [error, info])\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                {language === 'espa√±ol' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n            </div>\r\n            <Input onChange={handleData} value={data.company} name='company' placeholder={text.register.company[language]}/>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                <Input className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n            </div>\r\n            <div className=\"selector-input\">\r\n                <p>{text.register.beneficiary[language]}</p>\r\n                <Select onChange={value => setData({...data, beneficiary: value})} value={data.beneficiary} defaultValue='no'>\r\n                    <Option value='yes'>{text.responses.yes[language]}</Option>\r\n                    <Option value='no'>{text.responses.no[language]}</Option>\r\n                </Select>\r\n            </div>\r\n            {\r\n                data.beneficiary === 'yes' &&\r\n                    <>\r\n                        <small className='beneficiary-title'>{text.register.beneficiaryTitle[language]}</small>\r\n                        <div className=\"multiple-inputs\">\r\n                            <Input onChange={handleData} value={data.beneficiaryName} name='beneficiaryName' placeholder={text.register.firstName[language]}/>\r\n                            <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.beneficiaryLastName} name='beneficiaryLastName' placeholder={text.register.lastName[language]}/>\r\n                            {language === 'espa√±ol' && <Input onChange={handleData} value={data.beneficiarySecondLastName} name='beneficiarySecondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n                        </div>\r\n                        <div className=\"multiple-inputs\">\r\n                            <Input onChange={handleData} value={data.beneficiaryEmail} name='beneficiaryEmail' placeholder={text.register.beneficiaryEmail[language]}/>\r\n                            <Input className='last-input' onChange={handleData} value={data.beneficiaryPhone} name='beneficiaryPhone' placeholder={text.register.beneficiaryPhone[language]}/>             \r\n                        </div>\r\n                    </>\r\n            }\r\n            <Select className='agent-selector' onChange={value => setData({...data, customerAgent: value})} placeholder={text.register.selectAgent[language]} value={data.customerAgent} defaultValue={data.customerAgent}>\r\n                    <Option value='agent1'>Gerardo Jim√©nez</Option>\r\n                </Select>\r\n            <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n            <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.consent}\r\n                    onChange={e => setData({...data, consent: e.target.checked})}\r\n                >\r\n                    {text.register.confirm[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n            <div style={{marginTop: '1rem'}}>\r\n                <Button type='ghost'><Link to='/register'>{text.button.return[language]}</Link></Button>\r\n            </div>\r\n            <div className=\"auth-bottom-text\">\r\n                <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language}\r\n}) => ({\r\n    fetching,\r\n    error, \r\n    info,\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction\r\n    }\r\n)(BasicData)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport text from '../text'\r\nimport BasicData from './registerComponents/BasicData'\r\n\r\nlet RegisterForm = ({language}) => {\r\n\r\n    return (\r\n        <div className='register-container'>\r\n            <div style={{backgroundImage: 'linear-gradient(to bottom, #F9C799AA, #FFFFFF00), url(/img/register/bg2.png)'}} className=\"left-register\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register-block\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>{text.register.portalSubtitle[language]}</p>\r\n                <BasicData/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n\r\n    }\r\n)(RegisterForm)","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { sendTokenAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nconst ForgotPassword = ({history, language, tokenSent, fetching, error, sendToken}) => {\r\n\r\n    let [email, setEmail] = useState('')\r\n\r\n    let handleSubmit = () => {\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if(!email || !rex.test(email.toLowerCase())) return message.warning(text.messages.incorrectEmail[language])\r\n        sendToken({email})\r\n    }\r\n\r\n    let checkEnter = e => e.key === 'Enter' && handleSubmit()\r\n\r\n    useEffect(() => {\r\n        if(tokenSent) return history.push('/recover-password/token')\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n    }, [tokenSent, error])\r\n\r\n    return (\r\n        <div className='register-container'>\r\n            <div style={{backgroundImage: 'linear-gradient(to bottom, #F9C799AA, #FFFFFF00), url(/img/register/bg.png)'}} className=\"left-register\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>{text.register.portalSubtitle[language]}</p>\r\n                <div className=\"recover-password-text\">\r\n                    <h2>{text.recoverPassword.title[language]}</h2>\r\n                    <h3>{text.recoverPassword.message[language]}</h3>\r\n                </div>        \r\n                <div className=\"recover-password-input\">\r\n                    <Input onKeyPress={checkEnter} onChange={e => setEmail(e.target.value)} value={email} placeholder={text.login.emailPlaceholder[language]}/>\r\n                    <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.next[language]}</Button>\r\n                </div>\r\n                <div className=\"auth-bottom-text\">\r\n                    <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n                    <p>{text.form.register[language]} <Link to='/register'>{text.form.registerLink[language]}</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {tokenSent, fetching, error} \r\n}) => ({\r\n    language,\r\n    tokenSent,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        sendToken: sendTokenAction\r\n    }\r\n)(ForgotPassword)\r\n","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Cookies } from 'react-cookie'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { changePasswordAction, checkTokenAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nconst ForgotPasswordToken = ({history, language, validCode, passwordChanged, fetching, error, checkCode, changePassword}) => {\r\n\r\n    let [token, setToken] = useState('')\r\n    let [password, setPassword] = useState('')\r\n    let email = new Cookies().get('recoveryEmail')\r\n\r\n    let handleSubmit = () => {\r\n        if(!email) return history.push('/recover-password')\r\n        if(!token) return message.warning(text.messages.enterTokenError[language])\r\n        checkCode(token)\r\n    }\r\n\r\n    let handleNewPassword = () => {\r\n        if(!email) return history.push('/recover-password')\r\n        if(!password || password.length < 6 || !/\\d/.test(password)) return message.warning(text.recoverPassword.pwdError[language])\r\n        changePassword(password)\r\n    }\r\n\r\n    let checkEnter = e => e.key === 'Enter' && handleSubmit()\r\n    let checkEnterPassword = e => e.key === 'Enter' && handleNewPassword()\r\n\r\n    useEffect(() => {\r\n        if(passwordChanged){\r\n            message.success(text.recoverPassword.pwdSuccess[language])\r\n            setTimeout(() => {\r\n                history.push('/login')\r\n            }, 3000)\r\n        }\r\n        if(validCode) return message.success(text.recoverPassword.successToken[language])\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n    }, [passwordChanged, validCode, error])\r\n\r\n    return (\r\n        <div className='register-container'>\r\n            <div style={{backgroundImage: 'linear-gradient(to bottom, #F9C799AA, #FFFFFF00), url(/img/register/bg.png)'}} className=\"left-register\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>{text.register.portalSubtitle[language]}</p>\r\n                {\r\n                    !validCode ? \r\n                        <>\r\n                            <div className=\"recover-password-text\">\r\n                                <h2>{text.recoverPassword.recoverMessage[language]}</h2>\r\n                                <h3>{text.recoverPassword.successEmail[language]}</h3>\r\n                                <small>{}</small>\r\n                            </div>        \r\n                            <div className=\"recover-password-input\">\r\n                                <Input onKeyPress={checkEnter} onChange={e => setToken(e.target.value)} value={token} placeholder={text.recoverPassword.enterToken[language]}/>\r\n                                <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.next[language]}</Button>\r\n                            </div>\r\n                        </>\r\n                    :\r\n                        <>\r\n                            <div className=\"recover-password-text\">\r\n                                <h2>{text.recoverPassword.recoverMessage[language]}</h2>\r\n                                <h3>{text.recoverPassword.pwdIndicator[language]}</h3>\r\n                            </div>        \r\n                            <div className=\"recover-password-input\">\r\n                                <Input onKeyPress={checkEnterPassword} onChange={e => setPassword(e.target.value)} value={password} placeholder={text.recoverPassword.enterNewPassword[language]}/>\r\n                                <Button loading={fetching} onClick={handleNewPassword} className='nav-button'>{text.button.send[language]}</Button>\r\n                                {passwordChanged && <small>{text.recoverPassword.redirect[language]}</small>}\r\n                            </div>\r\n                        </>\r\n                }\r\n                \r\n                <div className=\"auth-bottom-text\">\r\n                    <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n                    <p>{text.form.register[language]} <Link to='/register'>{text.form.registerLink[language]}</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {validCode, passwordChanged,  fetching, error} \r\n}) => ({\r\n    language,\r\n    validCode,\r\n    passwordChanged,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        checkCode: checkTokenAction,\r\n        changePassword: changePasswordAction\r\n    }\r\n)(ForgotPasswordToken)\r\n","import { Cookies } from \"react-cookie\"\r\nimport { getData } from \"../services/api\"\r\n\r\nlet initialData = {\r\n    info: {},\r\n    fetchingData: false,\r\n    error: {}\r\n}\r\n\r\nlet GET_DATA = 'GET_DATA'\r\nlet GET_DATA_SUCCESS = 'GET_DATA_SUCCESS'\r\nlet GET_DATA_ERROR = 'GET_DATA_ERROR'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        case GET_DATA:\r\n            return {...state, fetchingData: true, info: {}, error: {}}\r\n        case GET_DATA_SUCCESS:\r\n            return {...state, fetchingData: false, info: action.payload}\r\n        case GET_DATA_ERROR:\r\n            return {...state, fetchingData: false, error: action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let handleInfoAction = () => dispatch => {\r\n    \r\n}\r\n\r\nexport let getDataAction = () => dispatch => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: GET_DATA_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: GET_DATA\r\n    })\r\n    getData({id})\r\n        .then(res => dispatch({\r\n            type: GET_DATA_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_DATA_ERROR,\r\n            payload: err.response\r\n        }))\r\n}","import { Button, Checkbox, Input, Spin } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInfoAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\n\r\nconst Profile = ({info, fetching, name, language, getData, handleInfo}) => {\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div className=\"app-top-icon\">\r\n                            <img src=\"/img/sidebar/profile.svg\" alt=\"profile\"/>\r\n                            <p>{text.sidebar.profile[language]}</p>\r\n                        </div>\r\n                        <h2>{text.sidebarSubtitle.profile[language]}</h2>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleInfo} value={info.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                                {language === 'espa√±ol' && <Input required onChange={handleInfo} value={info.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n                            </div>\r\n                            <Input id='company-app' onChange={handleInfo} value={info.company} name='company' placeholder={text.register.company[language]}/>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.email} name='email' placeholder={text.register.email[language]}/>\r\n                                <Input className='last-input' onChange={handleInfo} value={info.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n                            </div>\r\n                            <h2 className='beneficiary-message'>{text.profile.beneficiaryTitle[language]}</h2>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.beneficiaryName} name='beneficiaryName' placeholder={text.register.firstName[language]}/>\r\n                                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleInfo} value={info.beneficiaryLastName} name='beneficiaryLastName' placeholder={text.register.lastName[language]}/>\r\n                                {language === 'espa√±ol' && <Input onChange={handleInfo} value={info.beneficiarySecondLastName} name='beneficiarySecondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.beneficiaryEmail} name='beneficiaryEmail' placeholder={text.register.beneficiaryEmail[language]}/>\r\n                                <Input className='last-input' onChange={handleInfo} value={info.beneficiaryPhone} name='beneficiaryPhone' placeholder={text.register.beneficiaryPhone[language]}/>             \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"checkbox-input\">\r\n                            <Checkbox\r\n                                checked={info.consent}\r\n                                onChange={handleInfo}\r\n                            >\r\n                                {text.register.confirm[language]}\r\n                            </Checkbox>\r\n                        </div>\r\n                        <Button loading={fetching} className='nav-button'>{text.button.update[language]}</Button>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching, info: {name}},\r\n    data: {info}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    name,\r\n    info\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction\r\n    }\r\n)(Profile)\r\n","import React, { useEffect } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { checkSessionAction } from './redux/userDuck'\r\nimport Login from './components/auth/Login'\r\nimport Register from './components/auth/Register'\r\nimport Home from './components/home/Home'\r\nimport RegisterFormLayout from './components/auth/RegisterFormLayout'\r\nimport ForgotPassword from './components/auth/forgotPassword/ForgotPassword'\r\nimport ForgotPasswordToken from './components/auth/forgotPassword/ForgotPasswordToken'\r\nimport Profile from './components/home/Profile'\r\n\r\nlet PrivateRoute = ({logged, path, component, ...remainingProps}) => {\r\n    if(logged) return <Route path={path} component={component} {...remainingProps}/>\r\n    return <Redirect to='/register' {...remainingProps}/>\r\n}\r\n\r\nlet AuthRoute = ({logged, path, component, ...remainingProps}) => {\r\n    if(logged) return <Redirect to='/' {...remainingProps}/>\r\n    return <Route path={path} component={component} {...remainingProps}/> \r\n}\r\n\r\nlet Routes = ({logged, checkSession}) => {\r\n\r\n    useEffect(() => {\r\n        checkSession()\r\n        // eslint-disable-next-line\r\n    },[])\r\n\r\n    return <Switch>\r\n        <PrivateRoute exact path='/' logged={logged} component={Home}/>\r\n        <PrivateRoute exact path='/profile' logged={logged} component={Profile}/>\r\n        <AuthRoute path='/login' logged={logged} component={Login}/>\r\n        <AuthRoute exact path='/register' logged={logged} component={Register}/>\r\n        <AuthRoute path='/register/:type' logged={logged} component={RegisterFormLayout}/>\r\n        <AuthRoute exact path='/recover-password' logged={logged} component={ForgotPassword}/>\r\n        <AuthRoute path='/recover-password/token' logged={logged} component={ForgotPasswordToken}/>\r\n    </Switch>\r\n}\r\n\r\nlet mapState = ({user: {logged}}) => ({logged})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        checkSession: checkSessionAction\r\n    }\r\n)(Routes)","import React from 'react';\nimport Navbar from './components/common/Navbar';\nimport Routes from './Routes';\nimport { Layout } from 'antd';\nconst { Content } = Layout\n\nfunction App() {\n  return (\n    <Layout>\n      <Navbar/>\n      <Content>\n        <Routes/>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport userReducer from './userDuck'\r\nimport appReducer from './appDuck'\r\nimport dataReducer from './dataDuck'\r\n\r\nlet rootReducer = combineReducers({\r\n    app: appReducer,\r\n    user: userReducer,\r\n    data: dataReducer\r\n})\r\n\r\nlet composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nlet middlewares = [thunk]\r\n\r\nlet generateStore = () => createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n)\r\n\r\nlet generateStoreProduction = () => createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middlewares)\r\n)\r\n\r\nexport default process.env.NODE_ENV === 'development' ? generateStore : generateStoreProduction","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { CookiesProvider } from 'react-cookie'\nimport { Provider } from 'react-redux'\nimport generateStore from './redux/store'\nimport 'antd/dist/antd.css';\nimport './styles.scss';\nlet store = generateStore()\n\nlet WithRouter = () => <BrowserRouter><App/></BrowserRouter>\nlet WithStore = () => <Provider store={store}><WithRouter/></Provider>\nlet WithCookies = () => <CookiesProvider><WithStore/></CookiesProvider>\n\nReactDOM.render(\n    <WithCookies/>, document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}