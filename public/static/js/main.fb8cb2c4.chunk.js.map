{"version":3,"sources":["services/api.js","redux/appDuck.js","redux/userDuck.js","components/text/index.js","components/common/AuthNav.jsx","components/common/AdminNav.jsx","components/common/Navbar.jsx","components/common/Footer.jsx","components/auth/LoginForm.jsx","components/auth/Login.jsx","components/auth/registerComponents/AgentData.jsx","redux/generalDataDuck.js","components/auth/registerComponents/BasicData.jsx","components/auth/registerComponents/ProviderData.jsx","components/auth/RegisterFormLayout.jsx","components/auth/forgotPassword/ForgotPassword.jsx","components/auth/forgotPassword/ForgotPasswordToken.jsx","redux/dataDuck.js","components/home/profileData/States.js","components/common/ConfirmationModal.jsx","components/home/Profile.jsx","components/home/chooseHouseComponents/ChooseHouseMap.jsx","components/home/ChooseHouse.jsx","components/home/buyHouseComponents/BuyHouseMap.jsx","components/home/BuyHouse.jsx","components/home/UserData.jsx","redux/adminDuck.js","components/admin/AddHouse.jsx","components/home/Documentation.jsx","components/home/Finance.jsx","components/home/docHandler/DocHandler.jsx","components/common/PreviewModal.jsx","components/home/financeProfiles/FinantialProfilesData.jsx","components/home/financeProfiles/FinancialForm.jsx","components/home/InteriorDesign.jsx","components/home/PropietaryService.jsx","components/home/FAQ.jsx","components/home/Help.jsx","components/home/faqComponents/FaqInfo.jsx","components/home/propietaryComponent/PropietaryDetails.jsx","components/auth/AdminRegister.jsx","components/home/adminComponents/SelectClient.jsx","components/home/adminComponents/AdminUserProfile.jsx","components/home/adminComponents/AdminDocuments.jsx","components/home/adminComponents/AdminChoose.jsx","components/home/adminComponents/AdminFinance.jsx","components/home/adminComponents/AdminPurchase.jsx","components/home/adminComponents/AdminFinishes.jsx","Routes.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["url","updateUser","data","axios","post","uploadFile","file","email","sendNotification","initialData","fetchingApp","errorApp","language","Cookies","get","confirmationBox","reducer","state","action","type","payload","handleConfirmationBoxAction","dispatch","getState","app","changeLangAction","input","length","set","fetching","info","error","logged","tokenSent","validCode","passwordChanged","signupAction","signupData","then","res","agentId","userId","token","maxAge","userInfo","customerAgent","_id","catch","err","response","logoutAction","remove","roles","buyer","english","español","seller","agent","serviceProvider","form","required","forgotPassword","forgotPasswordLink","register","registerLink","button","send","next","login","return","update","continue","returnCaps","approve","save","preview","print","documentation","messages","missingFields","missingSelection","incorrectEmail","incorrectPassword","repeatedPasswordError","consent","wrongPassword","requestError","enterTokenError","dataUpdated","needApprove","missingFiles","fileUploaded","responses","yes","no","navbar","index","aboutUs","amenities","contact","logout","portalTitle","portalSubtitle","emailPlaceholder","passwordPlaceholder","portalSubtitleBuyer","portalSubtitleSeller","portalSubtitleAgent","portalSubtitleProvider","loginLink","firstName","lastName","secondLastName","company","phone","beneficiary","beneficiaryTitle","beneficiaryEmail","beneficiaryPhone","selectAgent","password","repeatPassword","confirm","allowNewsletter","signLinkBuyer","signLinkAgent","signLinkProvider","forgotSubtitle","wantFinance","adminPortal","adminPortalRegister","recoverPassword","title","message","successEmail","successToken","recoverMessage","enterToken","enterNewPassword","pwdIndicator","pwdError","pwdSuccess","redirect","sidebar","profile","chooseHouse","buyHouse","financing","interiorDesign","propietaryService","faq","help","chooseUser","userChosenVilla","userBoughtVilla","userFinance","userProfile","clientDocuments","clientFinishes","sidebarSubtitle","country","birthDate","usa","mex","name","countryInfo","stateInfo","basicInfo","workInfo","inputLotNumber","inputLotSize","inputLotModel","addLot","forSale","occupied","block","titlePrice","available","notAvailable","bedrooms","bathrooms","cars","price","remember","docsDescription","doc1","doc2","doc3","doc4","approveTitle","approvalDescription","firstApproval","secondApproval","activeProcess","userData","ssn","civilStatus","occupation","position","officePhone","occupationEx","companyEx","positionEx","mbText","blowseButon","firstDoc","inst","secondDoc","thirdDoc","nationalSalaried","nationalIndependent","northAmericanSalaried","northAmericanIndependent","foreign","putDataTitle","viewDocsButton","changeProfile","nationalSalariedDocs","id","nationalIndependentDocs","americanSalariedDocs","americanIndependentDocs","foreignDocs","companyDocs","financingForm","referenceTitle","fillInputs","primaryApplicant","homePhone","rfc","cellPhone","livingTime","livesInHouse","address","companyName","companyField","companyAddress","companyTime","functionsDescription","companyRole","academicLevel","economicDependants","height","weight","carBrand","carValue","realStateNumber","realStateValue","contactName","contactAddress","contactPhone","notification","propietaryServices","hoa","houseCleaning","manteinanceServices","cable","publicServices","community","importantPhones","area","options","kitchen","closet","floors","showerTile","livingRoom","floor","walls","sameTile","missingFloorSelect","warning","docHandler","modal","okButton","cancelButton","confirmText","admin","selectUser","approveFinancing","approved","purchasePriceApproved","blueprintsApproved","documents","genDocs","financialDocs","noFinancial","connect","toggleLanguage","withRouter","location","className","overlay","Item","onClick","text","trigger","style","cursor","src","alt","to","pathname","step","indexOf","user","useState","activeBurger","setActiveBurger","isDesktop","useMediaQuery","query","menu","key","userType","isActive","buttonWidth","history","setData","handleData","e","target","value","useEffect","status","push","initialValues","onFinish","test","toLowerCase","rules","onChange","placeholder","Password","loading","htmlType","Option","Select","signup","changeLanguage","defaultValue","checked","warn","initialState","fetchingGeneral","errorGeneral","agents","general","getAgents","maxLength","map","match","params","sendToken","setEmail","handleSubmit","onKeyPress","checkCode","changePassword","setToken","setPassword","handleNewPassword","success","setTimeout","creditRequest","fetchingData","fetchingHouse","fetchingDocs","house","houses","docs","files","selectedFile","notificationSent","users","selectedUser","selectedUserData","agentNotified","getClientDataAction","sendNotificationAction","console","log","deleteFileAction","deleteFile","getFileAction","extension","substring","responseType","getFile","Blob","fileURL","URL","createObjectURL","window","open","handleStepAction","pageValue","completeData","getHousesAction","updateUserAction","additionalData","handleFinantialDataAction","event","handleInfoAction","getDataAction","usaStates","mexStates","toggleBox","confirmAction","children","visible","onOk","onCancel","cancelText","okText","getData","handleInfo","handleStep","toggleModal","setConsent","submitAction","a","size","disabled","ChooseHouseMap","selectedHouse","showImage","setShowImage","ReactImageMagnify","smallImage","isFluidWidth","villa","includes","largeImage","width","enlargedImageContainerDimensions","backgroundImage","handleHouse","lotId","handleAddHouse","additionalBlock","additionalLotId","getHouses","additionalLot","setAdditionalLot","setSelectedHouse","selectedAdditional","setSelectedAdditional","undefined","filter","lot","self","findIndex","l","lotNumber","lotSize","suffix","blueprints","villaApproved","priceApproved","images","selectedImage","setSelectedImage","imageLink","ix","toLocaleString","currency","getHouse","houseData","houseUploaded","addHouse","handleHouseData","englishDescription","españolDescription","berdrooms","Dragger","Upload","handleFile","incomingFile","FormData","append","passport","driversLicence","addressProof","handleUpload","originFileObj","accept","fileList","setType","typeInput","economicProfile","DirectoryTree","Tree","treeData","isLeaf","getDocs","setVisible","multiple","defaultExpandAll","handleFinancialInfo","setLoading","visibleDocs","setVisibleDocs","numDocs","setNumDocs","downloadFile","checkDocs","TextArea","rows","contact1Name","contact1Address","contact1Phone","contact2Name","contact2Address","contact2Phone","contact3Name","contact3Address","contact3Phone","contact4Name","contact4Address","contact4Phone","doc","Object","keys","option","setOption","background","setBackground","handleBackground","kitchenCabinet","closetCabinet","opt","marginBottom","Panel","Collapse","setTitle","module","handleTitle","defaultActiveKey","header","service","getUsers","handleSelectedUser","maxWidth","margin","approveFinance","PrivateRoute","path","component","remainingProps","AdminRoute","AuthRoute","checkSession","jwt","getLanguage","Login","RegisterFormLayout","AdminRegister","exact","ForgotPassword","ForgotPasswordToken","SelectClient","Profile","ChooseHouse","BuyHouse","UserData","Documentation","Finance","FinantialProfilesData","FinancialForm","InteriorDesign","PropietaryService","PropietaryDetails","FAQ","FaqInfo","Help","AddHouse","AdminUserProfile","AdminDocuments","AdminChoose","AdminFinance","AdminPurchase","AdminFinishes","Content","Layout","App","Boolean","hostname","rootReducer","combineReducers","appReducer","userReducer","dataReducer","adminReducer","generalReducer","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","thunk","process","createStore","applyMiddleware","store","generateStore","WithRouter","WithStore","WithCookies","CookiesProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb8cb2c4.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n// let url = 'http://localhost:3000'\r\nlet url = 'https://app.puntapiedra.com'\r\n\r\n// AUTH\r\nexport let signup = data => axios.post(`${url}/auth/signup`, data)\r\nexport let login = data => axios.post(`${url}/auth/login`, data)\r\nexport let token = data => axios.post(`${url}/auth/token`, data)\r\nexport let checkCode = data => axios.post(`${url}/auth/checkCode`, data)\r\nexport let changePassword = data => axios.post(`${url}/auth/changePassword`, data)\r\nexport let updateUser = data => axios.post(`${url}/auth/updateUser`, data)\r\nexport let linkAgent = (agentId, userId) => axios.post(`${url}/auth/linkAgent`, ({agentId, userId}))\r\nexport let logout = () => axios.get(`${url}/auth/logout`)\r\n\r\n// ADMIN\r\nexport let addHouse = data => axios.post(`${url}/admin/addHouse`, data)\r\nexport let getHouse = data => axios.post(`${url}/admin/getHouse`, data)\r\n\r\n// DATA\r\nexport let getData = data => axios.post(`${url}/data/getData`, data)\r\nexport let getHouseData = data => axios.post(`${url}/data/getHouse`, data)\r\nexport let getUserDocs = data => axios.post(`${url}/data/getUserDocs`, data)\r\nexport let uploadFile = (file, email) => axios.post(`${url}/data/uploadFile/${email}`, file)\r\nexport let getFile = (name, email) => axios.post(`${url}/data/getFile/${email}`, {name}, {responseType: 'arraybuffer'})\r\nexport let deleteFile = (name, email) => axios.post(`${url}/data/deleteFile/${email}`, {name})\r\n\r\n// GENERAL CONSULTS\r\nexport let getAgents = () => axios.get(`${url}/consults/getAgents`)\r\nexport let getLanguage = data => axios.post(`${url}/consults/getLanguage`, data)\r\nexport let getHouses = () => axios.get(`${url}/consults/getHouses`)\r\n\r\n//NOTIFICATONS\r\nexport let sendNotification = (email, data) => axios.post(`${url}/notifications/send`, ({email, data}))\r\n\r\n// ADMIN\r\nexport let getUsers = () => axios.get(`${url}/data/getUsers`)\r\nexport let getClientData = data => axios.post(`${url}/data/getClientData`, data)\r\nexport let updateClient = (id, data) => axios.post(`${url}/data/updateClient`, ({id, data}))","import { Cookies } from \"react-cookie\"\r\nimport { getLanguage } from \"../services/api\"\r\n\r\nlet initialData = {\r\n    fetchingApp: false,\r\n    errorApp: {},\r\n    language: new Cookies().get('language') || 'english',\r\n    confirmationBox: false\r\n}\r\n\r\nlet CHANGE_LANG = 'CHANGE_LANG'\r\n\r\nlet GET_LANG = 'GET_LANG'\r\nlet GET_LANG_SUCCESS = 'GET_LANG_SUCCESS'\r\nlet GET_LANG_ERROR = 'GET_LANG_ERROR'\r\n\r\nlet HANDLE_CONFIRMATION_BOX = 'HANDLE_CONFIRMATION_BOX'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        case CHANGE_LANG:\r\n            return {...state, language: action.payload}\r\n        case GET_LANG:\r\n            return {...state, fetchingApp: true}\r\n        case GET_LANG_SUCCESS:\r\n            return {...state, fetchingApp: false, language: action.payload}\r\n        case GET_LANG_ERROR:\r\n            return {...state, fetchingApp: false, errorApp: action.payload}\r\n        case HANDLE_CONFIRMATION_BOX:\r\n            return {...state, confirmationBox: action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let handleConfirmationBoxAction = () => (dispatch, getState) => {\r\n    let { confirmationBox } = getState().app\r\n    dispatch({\r\n        type: HANDLE_CONFIRMATION_BOX,\r\n        payload: !confirmationBox\r\n    })\r\n}\r\n\r\nexport let changeLangAction = input => (dispatch, getState) => {\r\n    if(input.length){\r\n        new Cookies().set('language', input)\r\n        dispatch({\r\n            type: CHANGE_LANG,\r\n            payload: input\r\n        })\r\n        return\r\n    }\r\n    let { language } = getState().app\r\n    new Cookies().set('language', language === 'english' ? 'español' : 'english')\r\n    dispatch({\r\n        type: CHANGE_LANG,\r\n        payload: language === 'english' ? 'español' : 'english'\r\n    })\r\n}\r\n\r\nexport let getLanguageAction = () => (dispatch, getState) => {\r\n    let { info } = getState().user\r\n    dispatch({\r\n        type: GET_LANG\r\n    })\r\n    getLanguage({email: info.email})\r\n        .then(res => dispatch({\r\n            type: GET_LANG_SUCCESS,\r\n            payload: res.data.language\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_LANG_ERROR,\r\n            payload: err.response\r\n        }))\r\n}","import { signup, login, logout, token, checkCode, changePass, changePassword, linkAgent} from \"../services/api\"\r\nimport { Cookies } from \"react-cookie\"\r\nimport { getLanguageAction } from \"./appDuck\"\r\n\r\nlet initialData = {\r\n    fetching: true,\r\n    info: {},\r\n    error: {},\r\n    logged: new Cookies().get('id') ? true : false,\r\n    tokenSent: false,\r\n    validCode: false,\r\n    passwordChanged: false\r\n}\r\n\r\nlet LOGIN = 'LOGIN'\r\nlet LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nlet LOGIN_ERROR = 'LOGIN_ERROR'\r\n\r\nlet SIGNUP = 'SIGNUP'\r\nlet SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nlet SIGNUP_ERROR = 'SIGNUP_ERROR'\r\n\r\nlet SEND_TOKEN = 'SEND_TOKEN'\r\nlet SEND_TOKEN_SUCCESS = 'SEND_TOKEN_SUCCESS'\r\nlet SEND_TOKEN_ERROR = 'SEND_TOKEN_ERROR'\r\n\r\nlet CHECK_CODE = 'CHECK_CODE'\r\nlet CHECK_CODE_SUCCESS = 'CHECK_CODE_SUCCESS'\r\nlet CHECK_CODE_ERROR = 'CHECK_CODE_ERROR'\r\n\r\nlet CHANGE_PASSWORD = 'CHANGE_PASSWORD'\r\nlet CHANGE_PASSWORD_SUCCESS = 'CHANGE_PASSWORD_SUCCESS'\r\nlet CHANGE_PASSWORD_ERROR = 'CHANGE_PASSWORD_ERROR'\r\n\r\nlet LOGOUT = 'LOGOUT'\r\n\r\nlet CHECK_SESSION = 'CHECK_SESSION'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n\r\n        case LOGIN:\r\n            return {...state, fetching: true, info: initialData.info, error: {}}\r\n        case LOGIN_SUCCESS:\r\n            return {...state, fetching: false}\r\n        case LOGIN_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case SIGNUP:\r\n            return {...state, fetching: true, info: initialData.info, error: {}}\r\n        case SIGNUP_SUCCESS:\r\n            return {...state, fetching: false}\r\n        case SIGNUP_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case SEND_TOKEN:\r\n            return {...state, tokenSent: false, fetching: true, error: {}}\r\n        case SEND_TOKEN_SUCCESS:\r\n            return {...state, tokenSent: true, fetching: false}\r\n        case SEND_TOKEN_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case CHECK_CODE:\r\n            return {...state, validCode: false, fetching: true, error: {}}\r\n        case CHECK_CODE_SUCCESS:\r\n            return {...state, validCode: true, fetching: false}\r\n        case CHECK_CODE_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case CHANGE_PASSWORD:\r\n            return {...state, passwordChanged: false, fetching: true, error: {}}\r\n        case CHANGE_PASSWORD_SUCCESS:\r\n            return {...state, passwordChanged: true, fetching: false}\r\n        case CHANGE_PASSWORD_ERROR:\r\n            return {...state, error: action.payload, fetching: false}\r\n\r\n        case LOGOUT:\r\n            return {...state, info: initialData.info, logged: false}\r\n\r\n        case CHECK_SESSION:\r\n            return {...state, logged: action.payload.logged, info: action.payload.info, fetching: action.payload.fetching}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let changePasswordAction = password => dispatch => {\r\n    let email = new Cookies().get('recoveryEmail')\r\n    if(!email) dispatch({\r\n        type: CHANGE_PASSWORD_ERROR,\r\n        payload: {status: 404}\r\n    })\r\n    dispatch({\r\n        type: CHANGE_PASSWORD\r\n    })\r\n    changePassword({...email, password})\r\n        .then(res => dispatch({\r\n            type: CHANGE_PASSWORD_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: CHANGE_PASSWORD_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let checkTokenAction = token => dispatch => {\r\n    let email = new Cookies().get('recoveryEmail')\r\n    if(!email) dispatch({\r\n        type: CHECK_CODE_ERROR,\r\n        payload: {status: 404}\r\n    })\r\n    dispatch({\r\n        type: CHECK_CODE\r\n    })\r\n    checkCode({token})\r\n        .then(res => dispatch({\r\n            type: CHECK_CODE_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: CHECK_CODE_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let sendTokenAction = email => dispatch => {\r\n    new Cookies().set('recoveryEmail', email, {maxAge: 60 * 60 * 2})\r\n    dispatch({\r\n        type: SEND_TOKEN\r\n    })\r\n    token({email})\r\n        .then(res => dispatch({\r\n            type: SEND_TOKEN_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: SEND_TOKEN_ERROR,\r\n            payload: err.response\r\n        }))\r\n} \r\n\r\nexport let signupAction = signupData => dispatch => {\r\n    dispatch({\r\n        type: SIGNUP\r\n    })\r\n    signup(signupData)\r\n        .then(res => {\r\n            let { data } = res\r\n            new Cookies().set('id', data.token, {maxAge: 60 * 60 * 24})\r\n            new Cookies().set('user', data.userInfo, {maxAge: 60 * 60 * 24})\r\n            new Cookies().set('language', data.userInfo.language, {maxAge: 60 * 60 * 24})\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS\r\n            })\r\n            dispatch({\r\n                type: CHECK_SESSION,\r\n                payload: {logged: true, info: data.userInfo, fetching: false}\r\n            })\r\n            linkAgent(data.userInfo.customerAgent, data.userInfo._id)\r\n        })\r\n        .catch(err => dispatch({\r\n            type: SIGNUP_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let checkSessionAction = () => dispatch => {\r\n    let jwt = new Cookies().get('id')\r\n    let user = new Cookies().get('user')\r\n    if(jwt){ \r\n        user && dispatch({\r\n            type: CHECK_SESSION,\r\n            payload: {logged: true, info: user, fetching: false}\r\n        })\r\n        return\r\n    }\r\n    return dispatch({\r\n        type: CHECK_SESSION,\r\n        payload: {logged: false, info: {}, fetching: false}\r\n    })\r\n}\r\n\r\nexport let loginAction = userData => dispatch => {\r\n    dispatch({\r\n        type: LOGIN\r\n    })\r\n    login(userData)\r\n        .then(res => {\r\n            let { data } = res\r\n            new Cookies().set('id', data.token, {maxAge: 60 * 60 * 24})\r\n            new Cookies().set('user', data.userInfo, {maxAge: 60 * 60 * 24})\r\n            new Cookies().set('language', data.userInfo.language, {maxAge: 60 * 60 * 24})\r\n            dispatch({\r\n                type: LOGIN_SUCCESS\r\n            })\r\n            dispatch({\r\n                type: CHECK_SESSION,\r\n                payload: {logged: true, info: data.userInfo, fetching: false}\r\n            })\r\n        })\r\n        .catch(err => dispatch({\r\n            type: LOGIN_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let logoutAction = () => dispatch => {\r\n    logout()\r\n    new Cookies().remove('id')\r\n    new Cookies().remove('user')\r\n    new Cookies().remove('language')\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}","export default {\r\n    roles: {\r\n        buyer: {\r\n            english: 'BUYER',\r\n            español: 'COMPRADOR'\r\n        },\r\n        seller: {\r\n            english: 'SELLER',\r\n            español: 'VENDEDOR'\r\n        },\r\n        agent: {\r\n            english: 'REAL ESTATE AGENT',\r\n            español: 'AGENTE DE BIENES RAÍCES'\r\n        },\r\n        serviceProvider: {\r\n            english: 'SERVICE PROVIDER',\r\n            español: 'PROVEEDOR DE SERVICIO'            \r\n        }\r\n    },\r\n    form: {\r\n        required: {\r\n            english: 'Required',\r\n            español: 'Requerido'\r\n        },\r\n        forgotPassword: {\r\n            english: 'FORGOT YOUR PASSWORD?',\r\n            español: '¿OLVIDASTE TU CONTRASEÑA?'\r\n        },\r\n        forgotPasswordLink: {\r\n            english: 'CLICK HERE',\r\n            español: 'HAZ CLICK AQUÍ'\r\n        },\r\n        register: {\r\n            english: \"STILL DON'T HAVE AN ACCOUNT?\",\r\n            español: '¿AÚN NO TIENES UNA CUENTA?'\r\n        },\r\n        registerLink: {\r\n            english: 'REGISTER HERE',\r\n            español: 'REGÍSTRATE AQUÍ'\r\n        }\r\n    },\r\n    button: {\r\n        send: {\r\n            english: 'SEND',\r\n            español: 'ENVIAR'\r\n        },\r\n        next: {\r\n            english: 'NEXT',\r\n            español: 'SIGUIENTE'\r\n        },\r\n        login: {\r\n            english: 'LOGIN',\r\n            español: 'INICIAR SESIÓN'\r\n        },\r\n        register: {\r\n            english: 'REGISTER',\r\n            español: 'REGISTRARME'\r\n        },\r\n        return: {\r\n            english: 'Return',\r\n            español: 'Regresar'\r\n        },\r\n        update: {\r\n            english: 'UPDATE',\r\n            español: 'ACTUALIZAR'\r\n        },\r\n        continue: {\r\n            english: 'CONTINUE',\r\n            español: 'CONTINUAR'\r\n        },\r\n        returnCaps: {\r\n            english: 'RETURN',\r\n            español: 'REGRESAR'\r\n        },\r\n        approve: {\r\n            english: 'APPROVE',\r\n            español: 'APROBAR'\r\n        },\r\n        save: {\r\n            english: 'SAVE',\r\n            español: 'GUARDAR'\r\n        },\r\n        preview: {\r\n            english: 'PREVIEW',\r\n            español: 'VISTA PREVIA'\r\n        },\r\n        print: {\r\n            english: 'PRINT',\r\n            español: 'IMPRIMIR'\r\n        },\r\n        documentation: {\r\n            english: 'UPLOAD DOCUMENTS',\r\n            español: 'CARGAR DOCUMENTOS'\r\n        }\r\n    },\r\n    messages: {\r\n        missingFields: {\r\n            english: 'You must fill all the inputs',\r\n            español: 'Debes llenar todos los campos'\r\n        },\r\n        missingSelection: {\r\n            english: 'You must select an option',\r\n            español: 'Debes seleccionar una opción'\r\n        },\r\n        incorrectEmail: {\r\n            english: 'Please type a valid email',\r\n            español: 'Por favor ingresa un correo válido'\r\n        },\r\n        incorrectPassword: {\r\n            english: 'Your password must have at least 6 characters and 1 number',\r\n            español: 'Tu contraseña debe tener al menos 6 caracteres y 1 número'\r\n        },\r\n        repeatedPasswordError: {\r\n            english: \"The passwords don't match\",\r\n            español: 'Las contraseñas no coinciden'\r\n        },\r\n        consent: {\r\n            english: 'You must confirm that the information is real',\r\n            español: 'Debes confirmar que tus datos son reales'\r\n        },\r\n        wrongPassword: {\r\n            english: 'Incorrect password',\r\n            español: 'Contraseña incorrecta'\r\n        },\r\n        requestError: {\r\n            english: 'We could not complete your request',\r\n            español: 'No pudimos completar tu solicitud'\r\n        },\r\n        enterTokenError: {\r\n            english: 'Incorrect code',\r\n            español: 'Código incorrecto' \r\n        },\r\n        dataUpdated: {\r\n            english: 'Data updated',\r\n            español: 'Información actualizada'\r\n        },\r\n        needApprove: {\r\n            english: 'Please check the approvals',\r\n            español: 'Por favor, selecciona las aprobaciones'\r\n        },\r\n        missingFiles: {\r\n            english: 'Please upload all files',\r\n            español: 'Por favor sube todos los archivos'\r\n        },\r\n        fileUploaded: {\r\n            english: 'File uploaded',\r\n            español: 'Archivo guardado'\r\n        }\r\n    },\r\n    responses: {\r\n        yes: {\r\n            english: 'YES',\r\n            español: 'SI'\r\n        },\r\n        no: {\r\n            english: 'NO',\r\n            español: 'NO'\r\n        }\r\n    },\r\n    navbar: {\r\n        index: {\r\n            english: 'HOME',\r\n            español: 'INICIO'\r\n        },\r\n        aboutUs: {\r\n            english: 'ABOUT US',\r\n            español: 'SOBRE NOSOTROS'\r\n        },\r\n        amenities: {\r\n            english: 'AMENITIES',\r\n            español: 'AMENIDADES'\r\n        },\r\n        contact: {\r\n            english: 'CONTACT US',\r\n            español: 'CONTACTO'\r\n        },\r\n        logout: {\r\n            english: 'Logout',\r\n            español: 'Cerrar sesión'\r\n        }\r\n    },\r\n    login: {\r\n        portalTitle: {\r\n            english: 'CUSTOMER PORTAL',\r\n            español: 'PORTAL DE CLIENTES'\r\n        },\r\n        portalSubtitle: {\r\n            english: 'LOGIN',\r\n            español: 'INICIAR SESIÓN'\r\n        },\r\n        emailPlaceholder : {\r\n            english: 'WRITE YOUR EMAIL',\r\n            español: 'ESCRIBE TU EMAIL'\r\n        },\r\n        passwordPlaceholder : {\r\n            english: 'WRITE YOUR PASSWORD',\r\n            español: 'ESCRIBE TU CONTRASEÑA'\r\n        },\r\n    },\r\n    register: {\r\n        portalTitle: {\r\n            english: 'CUSTOMER PORTAL',\r\n            español: 'PORTAL DE CLIENTES'\r\n        },\r\n        portalSubtitleBuyer: {\r\n            english: 'BUYER REGISTER',\r\n            español: 'REGISTRO DE COMPRADOR'\r\n        },\r\n        portalSubtitleSeller: {\r\n            english: 'SELLER REGISTER',\r\n            español: 'REGISTRO DE VENDEDOR'\r\n        },\r\n        portalSubtitleAgent: {\r\n            english: 'REAL ESTATE AGENT REGISTER',\r\n            español: 'REGISTRO DE AGENTE DE BIENES RAÍCES'\r\n        },\r\n        portalSubtitleProvider: {\r\n            english: 'SERVICE PROVIDER REGISTER',\r\n            español: 'REGISTRO DE PROVEEDOR DE SERVICIOS'\r\n        },\r\n        login: {\r\n            english: \"HAVE AN ACCOUNT?\",\r\n            español: '¿YA TIENES UNA CUENTA?'\r\n        },\r\n        loginLink: {\r\n            english: 'LOGIN',\r\n            español: 'INICIA SESIÓN'\r\n        },\r\n        firstName: {\r\n            english: 'NAME',\r\n            español: 'NOMBRE'\r\n        },\r\n        lastName: {\r\n            english: 'LAST NAME',\r\n            español: 'APELLIDO PATERNO'\r\n        },\r\n        secondLastName : {\r\n            español: 'APELLIDO MATERNO'\r\n        },\r\n        company: {\r\n            english: 'WRITE THE NAME OF THE COMPANY YOU REPRESENT',\r\n            español: 'ESCRIBE EL NOMBRE DE LA COMPAÑÍA QUE REPRESENTAS'\r\n        },\r\n        language: {\r\n            english: 'SELECT YOUR LANGUAGE',\r\n            español: 'SELECCIONA TU IDIOMA'\r\n        },\r\n        email: {\r\n            english: 'WRITE YOUR EMAIL',\r\n            español: 'ESCRIBE TU EMAIL'\r\n        },\r\n        phone: {\r\n            english: 'WRITE YOUR PHONE',\r\n            español: 'ESCRUBE TU TELÉFONO'\r\n        },\r\n        beneficiary: {\r\n            english: 'DO YOU WANT TO ADD A BENEFICIARY?',\r\n            español: '¿DESEAS AÑADIR UN BENEFICIARIO?'\r\n        },\r\n        beneficiaryTitle: {\r\n            english: 'BENEFICIARY DATA',\r\n            español: 'DATOS DEL BENEFICIARIO'\r\n        },\r\n        beneficiaryEmail: {\r\n            english: 'EMAIL',\r\n            español: 'SU EMAIL'\r\n        },\r\n        beneficiaryPhone: {\r\n            english: 'PHONE',\r\n            español: 'TELÉFONO'\r\n        },\r\n        selectAgent: {\r\n            english: 'SELECT YOUR AGENT',\r\n            español: 'SELECCIONA TU AGENTE'\r\n        },\r\n        password: {\r\n            english: 'CHOOSE A SECURE PASSWORD',\r\n            español: 'ELIGE UNA CONTRASEÑA SEGURA'\r\n        },\r\n        repeatPassword: {\r\n            english: 'REPEAT YOUR PASSWORD',\r\n            español: 'REPITE TU CONTRASEÑA'\r\n        },\r\n        confirm: {\r\n            english: 'I CERTIFY THAT MY INFORMATION IS TRUE AND ACCURATE',\r\n            español: 'CERTIFICO QUE MI INFORMACIÓN ES REAL Y CORRECTA'\r\n        },\r\n        allowNewsletter: {\r\n            english: 'I WANT TO RECEIVE NEWS BY EMAIL',\r\n            español: 'QUIERO RECIBIR NOVEDADES POR EMAIL'\r\n        },\r\n        signLinkBuyer: {\r\n            english: 'REGISTER AS A BUYER',\r\n            español: 'REGISTRARME COMO COMPRADOR'\r\n        },\r\n        signLinkAgent: {\r\n            english: 'REGISTER AS AN AGENT',\r\n            español: 'REGISTRARME COMO AGENTE'\r\n        },\r\n        signLinkProvider: {\r\n            english: 'REGISTER AS A SERVICE PROVIDER',\r\n            español: 'REGISTRARME COMO PROVEEDOR DE SERVICIOS'\r\n        },\r\n        forgotSubtitle: {\r\n            english: 'RECOVER PASSWORD',\r\n            español: 'RECUPERAR CONTRASEÑA'\r\n        },\r\n        wantFinance: {\r\n            english: 'ARE YOU LOOKING FOR FINANCING?',\r\n            español: '¿BUSCAS FINANCIAMIENTO?'\r\n        },\r\n        adminPortal: {\r\n            english: 'ADMIN PORTAL',\r\n            español: 'PORTAL DE ADMINISTRADOR'\r\n        },\r\n        adminPortalRegister: {\r\n            english: 'REGISTER ADMINISTRATOR',\r\n            español: 'REGISTRAR ADMINISTRADOR'\r\n        }\r\n    },\r\n    recoverPassword: {\r\n        title: {\r\n            english: 'TROUBLE TO SIGN IN?',\r\n            español: '¿PROBLEMAS PARA INGRESAR?'\r\n        },\r\n        message: {\r\n            english: 'ENTER YOUR EMAIL AND WE WILL SEND YOU INSTRUCTIONS TO RECOVER YOUR PASSWORD',\r\n            español: 'CONFIRMA TU EMAIL Y TE ENVIAREMOS INSTRUCCIONES PARA REESTABLECER TU CONTRASEÑA'\r\n        },\r\n        successEmail: {\r\n            english: 'Email sent, please check your inbox',\r\n            español: 'Email enviado, por favor revisa tu bandeja de entrada'\r\n        },\r\n        successToken: {\r\n            english: 'Valid code',\r\n            español: 'Código válido'\r\n        },\r\n        recoverMessage: {\r\n            english: 'RECOVER PASSWORD',\r\n            español: 'RECUPERAR CONTRASEÑA'\r\n        },\r\n        enterToken: {\r\n            english: 'ENTER THE 4 DIGIT CODE',\r\n            español: 'INGRESA EL CÓDIGO DE 4 DÍGITOS'\r\n        },\r\n        enterNewPassword: {\r\n            english: 'ENTER YOUR NEW PASSWORD',\r\n            español: 'ESCRIBE TU NUEVA CONTRASEÑA'\r\n        },\r\n        pwdIndicator: {\r\n            english: 'The password must have at least 6 characters and 1 number',\r\n            español: 'La contraseña debe tener al menos 6 caracteres y 1 número'\r\n        },\r\n        pwdError: {\r\n            english: 'Enter a valid password',\r\n            español: 'Ingresa una contraseña válida'\r\n        },\r\n        pwdSuccess: {\r\n            english: 'Password changed successfully',\r\n            español: 'Contraseña actualizada correctamente'\r\n        },\r\n        redirect: {\r\n            english: 'Redirecting to login...',\r\n            español: 'Redirigiendo al inicio de sesión...'\r\n        }\r\n    },\r\n    sidebar: {\r\n        profile: {\r\n            english: 'Set up your profile',\r\n            español: 'Configura tu perfil'\r\n        },\r\n        chooseHouse: {\r\n            english: 'Choose your villa',\r\n            español: 'Escoge tu residencia'\r\n        },\r\n        buyHouse: {\r\n            english: 'Purchase your villa',\r\n            español: 'Comprar tu residencia'\r\n        },\r\n        data: {\r\n            english: 'Finish your profile',\r\n            español: 'Termina tu perfil'\r\n        },\r\n        documentation: {\r\n            english: 'Upload your documents',\r\n            español: 'Sube tus documentos'\r\n        },\r\n        financing: {\r\n            english: 'Apply for financing',\r\n            español: 'Aplica para financiamiento'\r\n        },\r\n        interiorDesign: {\r\n            english: 'Choose your finishes',\r\n            español: 'Escoge tus acabados'\r\n        },\r\n        propietaryService: {\r\n            english: 'Homeowner resources',\r\n            español: 'Recursos para propietario'\r\n        },\r\n        faq: {\r\n            english: 'FAQs',\r\n            español: 'Preguntas frecuentes'\r\n        },\r\n        help: {\r\n            english: 'Help',\r\n            español: 'Ayuda'\r\n        },\r\n        // ADMIN\r\n        chooseUser: {\r\n            english: 'Select client',\r\n            español: 'Selecciona un cliente'\r\n        },\r\n        userChosenVilla: {\r\n            english: 'Villa chosen',\r\n            español: 'Residencia elegida'\r\n        },\r\n        userBoughtVilla: {\r\n            english: 'Villa purchased',\r\n            español: 'Residencia comprada'\r\n        },\r\n        userFinance: {\r\n            english: \"Client's financement\",\r\n            español: 'Financiamiento del cliente'\r\n        },\r\n        userProfile: {\r\n            english: \"Client's profile\",\r\n            español: 'Perfil del cliente'\r\n        },\r\n        clientDocuments: {\r\n            english: \"Client's documents\",\r\n            español: 'Documentos del cliente'\r\n        },\r\n        clientFinishes: {\r\n            english: \"Client's finishes\",\r\n            español: 'Acabados del cliente'\r\n        }\r\n    },\r\n    sidebarSubtitle: {\r\n        profile: {\r\n            english: \"Let's start setting up your profile\",\r\n            español: 'Comencemos a configurar tu perfil'\r\n        },\r\n        chooseHouse: {\r\n            english: \"Let's choose your homesite and villa\",\r\n            español: 'Vamos a escoger tu terreno y residencia'\r\n        },\r\n        buyHouse: {\r\n            english: \"Let's acquire your new property\",\r\n            español: 'Vamos a adquirir tu neuvo inmueble'\r\n        },\r\n        data: {\r\n            english: \"let's finish your profile\",\r\n            español: 'completemos tu perfil'\r\n        },\r\n        documentation: {\r\n            english: 'Register your info and documents',\r\n            español: 'Registra tus datos y documentos'\r\n        },\r\n        financing: {\r\n            english: 'Choose your economic profile',\r\n            español: 'Elige tu perfil económico'\r\n        },\r\n        interiorDesign: {\r\n            english: 'Choose your new house options',\r\n            español: 'Elige las opciones de tu nueva casa'\r\n        },\r\n        propietaryService: {\r\n            english: 'Propietary service',\r\n            español: 'Servicios para propietarios'\r\n        },\r\n        faq: {\r\n            english: 'FAQs',\r\n            español: 'Preguntas frecuentes'\r\n        },\r\n        help: {\r\n            english: 'Help',\r\n            español: 'Ayuda'\r\n        },\r\n        // ADMIN\r\n        chooseUser: {\r\n            english: 'Select the client you want to administrate',\r\n            español: 'Selecciona al cliente que quieras administrar'\r\n        },\r\n        userChosenVilla: {\r\n            english: 'Villa chosen',\r\n            español: 'Residencia elegida'\r\n        },\r\n        userBoughtVilla: {\r\n            english: 'Villa purchased',\r\n            español: 'Residencia comprada'\r\n        },\r\n        userFinance: {\r\n            english: \"Client's financement\",\r\n            español: 'Financiamiento del cliente'\r\n        },\r\n        userProfile: {\r\n            english: \"Client's profile\",\r\n            español: 'Perfil del cliente'\r\n        },\r\n        clientDocuments: {\r\n            english: \"Client's documents\",\r\n            español: 'Documentos del cliente'\r\n        },\r\n        clientFinishes: {\r\n            english: \"Client's finishes\",\r\n            español: 'Acabados del cliente'\r\n        }\r\n    },\r\n    profile: {\r\n        beneficiaryTitle: {\r\n            english: 'BENEFICIARY 1 (LEAVE EMPTY IF NOT APPLICABLE)',\r\n            español: 'BENEFICIARIO 1 (DEJA EN BLANCO SI NO APLICA)'\r\n        },\r\n        country: {\r\n            english: 'COUNTRY',\r\n            español: 'PAÍS'\r\n        },\r\n        state: {\r\n            english: 'STATE',\r\n            español: 'ESTADO'\r\n        },\r\n        birthDate:{\r\n            english: 'BIRTH DATE',\r\n            español: 'FECHA DE NACIMIENTO'\r\n        },\r\n        usa: {\r\n            english: 'United States',\r\n            español: 'Estados Unidos'\r\n        },\r\n        mex: {\r\n            english: 'Mexico',\r\n            español: 'México'\r\n        },\r\n        name: {\r\n            english: 'Name',\r\n            español: 'Nombre'\r\n        },\r\n        email: {\r\n            english: 'Email',\r\n            español: 'Email'\r\n        },\r\n        phone: {\r\n            english: 'Phone',\r\n            español: 'Teléfono'\r\n        },\r\n        countryInfo: {\r\n            english: 'Country',\r\n            español: 'País'\r\n        },\r\n        stateInfo: {\r\n            english: 'State',\r\n            español: 'Estado'\r\n        },\r\n        basicInfo: {\r\n            english: 'Basic information',\r\n            español: 'Información básica'\r\n        },\r\n        workInfo: {\r\n            english: 'Work information',\r\n            español: 'Información de trabajo'\r\n        }\r\n    },\r\n    chooseHouse: {\r\n        inputLotNumber: {\r\n            english: 'LOT NUMBER',\r\n            español: 'NO. DE LOTE'\r\n        },\r\n        inputLotSize: {\r\n            english: 'LOT SIZE',\r\n            español: 'TAMAÑO DE LOTE'\r\n        },\r\n        inputLotModel: {\r\n            english: 'VILLA',\r\n            español: 'RESIDENCIA'\r\n        },\r\n        addLot: {\r\n            english: 'ADDITIONAL LOT',\r\n            español: 'LOTE ADICIONAL'\r\n        },\r\n        forSale: {\r\n            english: 'AVAILABLE HOMESITES',\r\n            español: 'TERRENOS EN VENTA'\r\n        },\r\n        occupied: {\r\n            english: 'SOLD',\r\n            español: 'VENDIDO'\r\n        },\r\n        block: {\r\n            english: 'BLOCK',\r\n            español: 'MANZANA'\r\n        }\r\n    },\r\n    buyHouse: {\r\n        titlePrice: {\r\n            english: 'From',\r\n            español: 'Desde'\r\n        },\r\n        available: {\r\n            english: 'AVAILABLE',\r\n            español: 'DISPONIBLE'\r\n        },\r\n        notAvailable: {\r\n            english: 'NOT AVAILABLE',\r\n            español: 'NO DISPONIBLE'\r\n        },\r\n        bedrooms: {\r\n            english: 'bedrooms',\r\n            español: 'recámaras'    \r\n        },\r\n        bathrooms: {\r\n            english: 'bathrooms',\r\n            español: 'baños'    \r\n        },\r\n        cars: {\r\n            english: 'cars',\r\n            español: 'automóviles'    \r\n        },\r\n        price: {\r\n            english: 'Price',\r\n            español: 'Precio'\r\n        },\r\n        remember: {\r\n            english: 'REMEMBER',\r\n            español: 'RECUERDA'\r\n        },\r\n        docsDescription: {\r\n            english: 'Before the purchase, check that you have the following documents at hand:',\r\n            español: 'Antes de comenzar tu compra verifica que tengas al alcance estos datos y documentos:'\r\n        },\r\n        doc1: {\r\n            english: 'Passport',\r\n            español: 'Pasaporte'\r\n        },\r\n        doc2: {\r\n            english: \"Driver licence\",\r\n            español: 'Licencia de manejo'\r\n        },\r\n        doc3: {\r\n            english: 'Proof of address',\r\n            español: 'Comprobante de domicilio'\r\n        },\r\n        doc4: {\r\n            english: 'Social Security Number',\r\n            español: 'Número de seguridad social'\r\n        },\r\n        approveTitle: {\r\n            english: 'MANDATORY APPROVAL',\r\n            español: 'APROBACIONES NECESARIAS'\r\n        },\r\n        approvalDescription: {\r\n            english: 'You must approve the next elements to continue:',\r\n            español: 'Para continuar necesitas aprobar los siguientes elementos:'\r\n        },\r\n        firstApproval: {\r\n            english: 'Yes, I approve the blueprint',\r\n            español: 'Sí, apruebo los planos'\r\n        },\r\n        secondApproval: {\r\n            english: 'Yes, I approve the price',\r\n            español: 'Sí, apruebo este precio'\r\n        },\r\n        activeProcess: {\r\n            english: 'THIRD-PARTY ACTIVE PROCESS:',\r\n            español: 'PROCESOS ACTIVOS DE TERCEROS:'\r\n        }\r\n    },\r\n    userData: {\r\n        ssn: {\r\n            english: \"WRITE YOUR SSN\",\r\n            español: 'ESCRIBE TU NÚMERO DE SEGURIDAD SOCIAL'\r\n        },\r\n        civilStatus: {\r\n            english: 'CIVIL STATUS',\r\n            español: 'ESTADO CIVIL'\r\n        },\r\n        occupation: {\r\n            english: 'OCCUPATION',\r\n            español: 'OCUPACIÓN'\r\n        },\r\n        position: {\r\n            english: 'POSITION',\r\n            español: 'POSICIÓN'\r\n        },\r\n        company: {\r\n            english: 'COMPANY (CLARIFY IF SELF EMPLOYED)',\r\n            español: 'EMPRESA (ACLARAR SI ES AUTOEMPLEADO)'\r\n        },\r\n        officePhone: {\r\n            english: 'OFFICE PHONE',\r\n            español: 'TELÉFONO DE LA OFICINA'\r\n        },\r\n        occupationEx: {\r\n            english: 'Example: \"Civil Engineer\"',\r\n            español: 'Ejemplo: \"Ingeniero Civil\"'\r\n        },\r\n        companyEx: {\r\n            english: 'Example: \"Company Inc.\" or \"Self employed\"',\r\n            español: 'Ejemplo: \"Empresa S.A. de C.V. o Autoempleado\"'\r\n        },\r\n        positionEx: {\r\n            english: 'Example: \"Operations Director\"',\r\n            español: 'Ejemplo: \"Director de Operaciones\"'\r\n        }\r\n    },\r\n    documentation: {\r\n        mbText: {\r\n            english: 'The file must be less than 10MB',\r\n            español: 'El archivo no debe pesar más de 10MB'\r\n        },\r\n        blowseButon: {\r\n            english: 'BROWSE',\r\n            español: 'BUSCAR'\r\n        },\r\n        firstDoc: {\r\n            title: {\r\n                english: 'PASSPORT',\r\n                español: 'PASAPORTE'\r\n            },\r\n            inst: {\r\n                english: 'Drop here an image or PDF of your passport.',\r\n                español: 'Arrastra aquí una imagen o PDF de tu pasaporte.'\r\n            }\r\n        },\r\n        secondDoc: {\r\n            title: {\r\n                english: \"DRIVERS LICENSE\",\r\n                español: 'LICENCIA DE MANEJO'\r\n            },\r\n            inst: {\r\n                english: 'Drop here an image or PDF of your divers licence.',\r\n                español: 'Arrastra aquí una imagen o PDF de tu licencia de manejo.'\r\n            }\r\n        },\r\n        thirdDoc: {\r\n            title: {\r\n                english: 'PROOF OF ADDRESS',\r\n                español: 'COMPROBANTE DE DOMICILIO'\r\n            },\r\n            inst: {\r\n                english: 'Drop here an image or PDF of your proof of address.',\r\n                español: 'Arrastra aquí una imagen o PDF de tu comprobante de domicilio.'\r\n            }\r\n        }\r\n    },\r\n    financing: {\r\n        nationalSalaried: {\r\n            english: 'MEXICO INCOME (SALARIED)',\r\n            español: 'ECONOMÍA MEXICANA (ASALARIADO)'\r\n        },\r\n        nationalIndependent: {\r\n            english: 'MEXICO INCOME (INDEPENDENT)',\r\n            español: 'ECONOMÍA MEXICANA (INDEPENDIENTE)'\r\n        },\r\n        northAmericanSalaried: {\r\n            english: 'US INCOME (SALARIED)',\r\n            español: 'ECONOMÍA ESTADOUNIDENSE (ASALARIADO)'\r\n        },\r\n        northAmericanIndependent: {\r\n            english: 'US INCOME (SALARIED)',\r\n            español: 'ECONOMÍA ESTADOUNIDENSE (ASALARIADO)'\r\n        },\r\n        foreign: {\r\n            english: 'FOREIGN, WANTS TO BUY IN MEXICO',\r\n            español: 'EXTRANJERO, QUIERE COMPRAR EN MÉXICO'\r\n        },\r\n        company: {\r\n            english: 'CORPORATE PURCHASE',\r\n            español: 'COMPRA CORPORATIVA'\r\n        },\r\n        putDataTitle: {\r\n            english: 'INPUT YOUR FINANCIAL DATA',\r\n            español: 'COLOCA TUS DATOS FINANCIEROS'\r\n        },\r\n        viewDocsButton: {\r\n            english: 'VIEW DOCUMENTS',\r\n            español: 'VER DOCUMENTOS'\r\n        },\r\n        changeProfile: {\r\n            english: 'Change my financial profile',\r\n            español: 'Cambiar mi perfi financiero'\r\n        },\r\n        nationalSalariedDocs: [\r\n            {\r\n                id: 'payroll',\r\n                english: 'Last 3 months payroll',\r\n                español: 'Las nóminas de los últimos 3 meses'\r\n            },\r\n            {\r\n                id: 'payrollStatements',\r\n                english: 'Last 3 statements, where your payroll is deposited',\r\n                español: 'Los últimos 3 estados de cuenta, donde le depositan su nómina'\r\n            },\r\n            {\r\n                id: 'creditReport',\r\n                english: 'Credit report (Valid for no more than 1 month)',\r\n                español: 'Reporte de crédito (Vigencia no mayor a 1 mes)'\r\n            },\r\n            {\r\n                id: 'employmentLetter',\r\n                english: 'Employment letter indicating position, seniority, salary, signed by HR or immediate boss (no more than 3 months old)',\r\n                español: 'Carta laboral donde indique puesto, antiguedad, salario, firmada por RH o jefe inmediato (no mayor a 3 meses de antiguedad)'\r\n            }\r\n        ],\r\n        nationalIndependentDocs: [\r\n            {\r\n                id: 'fiscalSituation',\r\n                english: 'Proof of fiscal situation (tax registration with current printing, no more than 2 months) that has at least 3 years in the activity reported in the certificate',\r\n                español: 'Constancia de situacion fiscal (alta de hacienda con impresión vigente,no mayor a 2 meses) que por lo menos tenga 3 años en la actividad que reporta en la constancia'\r\n            },\r\n            {\r\n                id: 'accountStatement',\r\n                english: 'Statements of the last 6 months, if you have multiple accounts It does not matter since there must be 6 of each account that reports',\r\n                español: 'Estados de cuenta de los últimos 6 meses, si tiene varias cuentas no importa ya que deben de ser 6 de cada cuenta que reporte'\r\n            },\r\n            {\r\n                id: 'annualReturn',\r\n                english: 'Annual return for the immediately preceding year, if you are a merchant and pay taxes bimonthly for the last 6.',\r\n                español: 'Declaración anual del año anterior inmediato, si es comerciante y paga impuestos de forma bimestral los últimos 6.'\r\n            },\r\n        ],\r\n        americanSalariedDocs: [\r\n            {\r\n                id: 'payroll',\r\n                english: 'Last 3 months payroll',\r\n                español: 'Las nóminas de los últimos 3 meses'\r\n            },\r\n            {\r\n                id: 'payrollStatements',\r\n                english: 'Last 3 statements, where your payroll is deposited',\r\n                español: 'Los últimos 3 estados de cuenta, donde le depositan su nómina'\r\n            },\r\n            {\r\n                id: 'creditReport',\r\n                english: 'Credit report with Fico Score (valid for no more than one month), deals with any of these: TRANSUNION, CREDIT KARMA or EQUIFAX EXPERIAN; The one with the highest score will be used, in Mexico it must be greater than 640 score for a capacity of 70% of credit, the higher the score, the more capacity it can receive from the banks.',\r\n                español: 'Reporte de crédito con Fico Score (vigencia no mayor a un mes), se ocupa alguno de estos: TRANSUNION, CREDIT KARMA o EQUIFAX EXPERIAN; se utilizará aquel que tenga el score más alto, en México debe ser mayor al 640 de score para un aforo del 70% de credito, entre más alto el score más aforo puede recibir de los bancos.'\r\n            },\r\n            {\r\n                id: 'creditMex',\r\n                english: 'If the client has credit in Mexico (credit cards, departmental, cell phone payments, etc.) we can occupy the National Credit Bureau.',\r\n                español: 'Si el cliente tiene crédito en México (tarjetas de crédito, departamentales, pagos de celulares, etc.) podemos ocupar el Buró de Crédito Nacional.'\r\n            },\r\n            {\r\n                id: 'incomeTax',\r\n                english: 'Income Tax of 2018 and 2019.',\r\n                español: 'Income Tax de 2018 y 2019.'\r\n            }\r\n        ],\r\n        americanIndependentDocs: [\r\n            {\r\n                id: 'businessPermit',\r\n                english: 'Permit of your business or activity updated by the state where you reside',\r\n                español: 'Permiso de su negocio o actividad actualizado por parte del estado donde radique'\r\n            },\r\n            {\r\n                id: 'accountStatement',\r\n                english: 'Statements of the last 6 months, if you have multiple accounts It does not matter since there must be 6 of each account that reports',\r\n                español: 'Estados de cuenta de los últimos 6 meses, si tiene varias cuentas no importa ya que deben de ser 6 de cada cuenta que reporte'\r\n            },\r\n            {\r\n                id: 'creditReport',\r\n                english: 'Credit report with Fico Score (valid for no more than one month), deals with any of these: TRANSUNION, CREDIT KARMA or EQUIFAX EXPERIAN; The one with the highest score will be used, in Mexico it must be greater than 640 score for a capacity of 70% of credit, the higher the score, the more capacity it can receive from the banks.',\r\n                español: 'Reporte de crédito con Fico Score (vigencia no mayor a un mes), se ocupa alguno de estos: TRANSUNION, CREDIT KARMA o EQUIFAX EXPERIAN; se utilizará aquel que tenga el score más alto, en México debe ser mayor al 640 de score para un aforo del 70% de credito, entre más alto el score más aforo puede recibir de los bancos.'\r\n            },\r\n            {\r\n                id: 'creditMex',\r\n                english: 'If the client has credit in Mexico (credit cards, departmental, cell phone payments, etc.) we can occupy the National Credit Bureau.',\r\n                español: 'Si el cliente tiene crédito en México (tarjetas de crédito, departamentales, pagos de celulares, etc.) podemos ocupar el Buró de Crédito Nacional.'\r\n            },\r\n            {\r\n                id: 'incomeTax',\r\n                english: 'Income Tax of 2018 and 2019.',\r\n                español: 'Income Tax de 2018 y 2019.'\r\n            }\r\n        ],\r\n        foreignDocs: [\r\n            {\r\n                id: 'residence',\r\n                english: 'Temporary or permanent residence.',\r\n                español: 'Residencia temporal o permanente.'\r\n            },\r\n            {\r\n                id: 'incomeProof',\r\n                english: 'Proof of income.',\r\n                español: 'Comprobante de ingresos.'\r\n            }\r\n        ],\r\n        companyDocs: [\r\n            {\r\n                id: 'incorporationArticles',\r\n                english: 'Articles of Incorporation',\r\n                español: 'Artículos de incorporación'\r\n            },\r\n            {\r\n                id: 'businessPermit',\r\n                english: 'Business permit.',\r\n                español: 'Permiso del negocio.'\r\n            },\r\n            {\r\n                id: 'incomeTax',\r\n                english: 'Last 2 years of income tax of the company.',\r\n                español: 'Últimos 2 años de Income tax de la empresa.'\r\n            },\r\n            {\r\n                id: 'accountStatement',\r\n                english: 'Account statements for the last 6 months of the company.',\r\n                español: 'Estados de cuenta de los últimos 6 meses de la empresa.'\r\n            },\r\n        ]\r\n    },\r\n    financingForm: {\r\n        title: {\r\n            english: 'CREDIT APPLICATION',\r\n            español: 'SOLICITUD DE CRÉDITO'\r\n        },\r\n        referenceTitle: {\r\n            english: 'PERSONAL REFERENCES TWO FAMILY MEMBERS AND TWO NON-FAMILY MEMBERS, MUST BE TELEPHONES FROM MEXICO',\r\n            español: 'REFERENCIAS PERSONALES DOS FAMILIARES Y DOS NO FAMILIARES, DEBEN SER TELÉFONOS DE MÉXICO'\r\n        },\r\n        fillInputs: {\r\n            english: 'PLEASE FILL OUT ALL INFORMATION',\r\n            español: 'POR FAVOR, COMPLETAR TODA LA INFORMACIÓN'\r\n        },\r\n        primaryApplicant: {\r\n            english: 'PRIMARY APPLICANT',\r\n            español: 'SOLICITANTE'\r\n        },\r\n        officePhone: {\r\n            english: 'WORK PHONE',\r\n            español: 'TEL. TRABAJO'\r\n        },\r\n        homePhone: {\r\n            english: 'HOME PHONE',\r\n            español: 'TEL. CASA'\r\n        },\r\n        rfc: {\r\n            english: 'RFC',\r\n            español: 'RFC'\r\n        },\r\n        cellPhone: {\r\n            english: 'CELL PHONE',\r\n            español: 'CELULAR'\r\n        },\r\n        email: {\r\n            english: 'EMAIL',\r\n            español: 'EMAIL'\r\n        },\r\n        livingTime: {\r\n            english: 'TIME LIVING IN YOUR HOUSE',\r\n            español: 'TIEMPO HABITANDO SU CASA'\r\n        },\r\n        occupation: {\r\n            english: 'OCCUPATION',\r\n            español: 'PROFESIÓN'\r\n        },\r\n        livesInHouse: {\r\n            english: 'LIVES IN HOUSE',\r\n            español: 'VIVE EN CASA'\r\n        },\r\n        address: {\r\n            english: 'ADDRESS',\r\n            español: 'DOMICILIO PARTICULAR'\r\n        },\r\n        companyName: {\r\n            english: 'COMPANY NAME',\r\n            español: 'NOMBRE DE LA EMPRESA'\r\n        },\r\n        companyField: {\r\n            english: 'COMPANY FIELD',\r\n            español: 'GIRO DE LA EMPRESA'\r\n        },\r\n        companyAddress: {\r\n            english: 'COMPANY ADDRESS',\r\n            español: 'DOMICILIO DE LA EMPRESA'\r\n        },\r\n        companyTime: {\r\n            english: 'YEARS IN THE COMPANY',\r\n            español: 'AÑOS EN LA EMPRESA'\r\n        },\r\n        functionsDescription: {\r\n            english: 'DESCRIBE BRIEFLY YOUR FUNCTIONS',\r\n            español: 'DESCRIBE BREVEMENTE TUS FUNCIONES'\r\n        },\r\n        companyRole: {\r\n            english: 'COMPANY ROLE',\r\n            español: 'PUESTO TRABAJO'\r\n        },\r\n        academicLevel: {\r\n            english: 'ACADEMIC LEVEL',\r\n            español: 'NIVEL ACADÉMICO'\r\n        },\r\n        economicDependants: {\r\n            english: 'ECONOMIC DEPENDANTS',\r\n            español: 'DEPENDIENTES ECONÓMICOS'\r\n        },\r\n        height: {\r\n            english: 'HEIGHT (CM)',\r\n            español: 'ESTATURA (CM)'\r\n        },\r\n        weight: {\r\n            english: 'WEIGHT (KG)',\r\n            español: 'PESO (KG)'\r\n        },\r\n        ssn: {\r\n            english: 'SSN',\r\n            español: 'NO. IMSS'\r\n        },\r\n        carBrand: {\r\n            english: 'CAR BRAND',\r\n            español: 'AUTOMÓVIL (MARCA)'\r\n        },\r\n        carValue: {\r\n            english: 'ESTIMATED CAR(S) VALUE',\r\n            español: 'VALOR ESTIMADO AUTO(S)'\r\n        },\r\n        realStateNumber: {\r\n            english: 'REAL ESTATE OWNED (HOUSES, APARTMENTS)',\r\n            español: 'INMUEBLES A SU NOMBRE (CASAS, DEPTOS)'\r\n        },\r\n        realStateValue: {\r\n            english: 'REAL ESTATE VALUE',\r\n            español: 'VALOR ESTIMADO INMUEBLES'\r\n        },\r\n        contactName: {\r\n            english: 'COMPLETE NAME',\r\n            español: 'NOMBRE COMPLETO'\r\n        },\r\n        contactAddress: {\r\n            english: 'ADDRESS',\r\n            español: 'DIRECCIÓN'\r\n        },\r\n        contactPhone: {\r\n            english: 'PHONE',\r\n            español: 'TELÉFONO'\r\n        },\r\n        agent: {\r\n            english: 'Your application is under the review of your agent. We will notify you when it is approved',\r\n            español: 'Tu solicitud está siendo revisada por tu agente. Te notificaremos cuando sea aprobado.'\r\n        },\r\n        notification: {\r\n            english: 'Application sent',\r\n            español: 'Aplicación enviada'\r\n        }\r\n    },\r\n    propietaryServices: {\r\n        hoa: {\r\n            english: 'HOA',\r\n            español: 'HOA'\r\n        },\r\n        houseCleaning: {\r\n            english: 'HOUSE CLEANING',\r\n            español: 'LIMPIEZA DE CASA'\r\n        },\r\n        manteinanceServices: {\r\n            english: 'MANTEINANCE SERVICES',\r\n            español: 'SERVICIOS DE MANTENIMIENTO'\r\n        },\r\n        cable: {\r\n            english: 'CABLE / INTERNET',\r\n            español: 'CABLE / INTERNET'\r\n        },\r\n        publicServices: {\r\n            english: 'PUBLIC SERVICES',\r\n            español: 'SERVICIOS PÚBLICOS'\r\n        },\r\n        interiorDesign: {\r\n            english: 'INTERIOR DECORATION',\r\n            español: 'DECORACIÓN DE INTERIORES'\r\n        },\r\n        community: {\r\n            english: 'YOUR COMMUNITY',\r\n            español: 'TU COMUNIDAD'\r\n        },\r\n        importantPhones: {\r\n            english: 'IMPORTANT PHONES',\r\n            español: 'TELÉFONOS IMPORTANTES'\r\n        }\r\n    },\r\n    help: {\r\n        title: {\r\n            english: 'DESCRIBE YOUR PROBLEM AND WE WILL BE IN TOUCH',\r\n            español: 'DESCRIBE TU PROBLEMA Y NOS PONDREMOS EN CONTACTO CONTIGO'\r\n        }\r\n    },\r\n    interiorDesign: {\r\n        area: {\r\n            english: 'AREA',\r\n            español: 'AREA'\r\n        },\r\n        options: {\r\n            english: 'OPTIONS',\r\n            español: 'OPCIONES'\r\n        },\r\n        kitchen: {\r\n            english: 'KITCHEN',\r\n            español: 'COCINA'\r\n        },\r\n        closet: {\r\n            english: 'BATHROOM AND CLOSET',\r\n            español: 'BAÑO Y CLOSET'\r\n        },\r\n        floors: {\r\n            english: 'FLOORS',\r\n            español: 'PISOS'\r\n        },\r\n        showerTile: {\r\n            english: 'SHOWER TILE',\r\n            español: 'AZULEJO BAÑO'\r\n        },\r\n        livingRoom: {\r\n            english: 'LIVINGROOM',\r\n            español: 'SALA'\r\n        },\r\n        floor: {\r\n            english: 'FLOOR',\r\n            español: 'PISO'\r\n        },\r\n        walls: {\r\n            english: 'WALLS',\r\n            español: 'MUROS'\r\n        },\r\n        sameTile: {\r\n            english: 'SAME AS FLOOR',\r\n            español: 'MISMA QUE EL PISO'\r\n        },\r\n        missingFloorSelect: {\r\n            english: 'You must select a floor first',\r\n            español: 'Debes seleccionar antes un piso'\r\n        },\r\n        missingSelection: {\r\n            english: 'You must select an option for all areas',\r\n            español: 'Debes seleccionar una opción en cada area'\r\n        },\r\n        warning: {\r\n            english: 'By continuing, you approve ordering your finishes in the options you chose. You understand that any changes hereon will incur additional charges.',\r\n            español: 'Al continuar, usted aprueba ordenar sus acabados en las opciones que eligió. Usted comprende que cualquier cambio en este documento incurrirá en cargos adicionales.'\r\n        }\r\n    },\r\n    docHandler: {\r\n        title: {\r\n            english: 'DOCUMENTS',\r\n            español: 'DOCUMENTOS'\r\n        }\r\n    },\r\n    modal: {\r\n        title: {\r\n            english: 'CONFIRM',\r\n            español: 'CONFIRMAR'\r\n        },\r\n        okButton: {\r\n            english: 'AGREE',\r\n            español: 'DE ACUERDO'\r\n        },\r\n        cancelButton: {\r\n            english: 'CANCEL',\r\n            español: 'CANCELAR'\r\n        },\r\n        confirmText: {\r\n            english: 'Please confirm that this information is correct',\r\n            español: 'Por favor, confirma que la información es correcta'\r\n        }\r\n    },\r\n    admin: {\r\n        selectUser: {\r\n            english: 'Select a client',\r\n            español: 'Selecciona un cliente'\r\n        },\r\n        approveFinancing: {\r\n            english: 'APPROVE FINANCING',\r\n            español: 'APROBAR FINANCIAMIENTO'\r\n        },\r\n        approved: {\r\n            english: 'Financement approved, client notified',\r\n            español: 'Financiamiento aprobado, cliente notificado'\r\n        },\r\n        purchasePriceApproved: {\r\n            english: 'Client approved the price',\r\n            español: 'El cliente aprobó el precio'\r\n        },\r\n        blueprintsApproved: {\r\n            english: 'Client approved the blueprints',\r\n            español: 'El cliente aprobó los planos'\r\n        }\r\n    },\r\n    documents: {\r\n        genDocs: {\r\n            english: 'General documents',\r\n            español: 'Documentos generales'\r\n        },\r\n        financialDocs: {\r\n            english: 'Financial Documents',\r\n            español: 'Documentos financieros'\r\n        },\r\n        noFinancial: {\r\n            english: \"Didn't choose financement\",\r\n            español: 'No eligió financiamiento'\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { changeLangAction } from '../../redux/appDuck'\r\nimport { logoutAction } from '../../redux/userDuck'\r\nimport { withRouter } from 'react-router-dom'\r\nimport text from '../text'\r\nimport { Dropdown, Menu } from 'antd'\r\n\r\nconst AuthNav = ({location, language, info, logout}) => {\r\n\r\n    let menu = () => (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <p className='menu-item-p' onClick={logout}>{text.navbar.logout[language]}</p>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <div className='auth-nav'>\r\n            <div className=\"top-nav\">\r\n                <Dropdown overlay={menu} trigger={['click']}>\r\n                    <img style={{cursor: 'pointer'}} src=\"/img/navbar/profile.svg\" alt=\"profile\"/>\r\n                </Dropdown>\r\n\r\n            </div>\r\n            <div className=\"left-nav\">\r\n                <img className='sidebar-logo' src=\"/img/common/logo-dark.png\" alt=\"PP logo black\"/>\r\n                <div className=\"sidebar-nav\">\r\n                    <Link to='/profile' className={`sidebar-element${location.pathname === '/profile' || location.pathname === '/' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/profile${location.pathname === '/profile' || location.pathname ===  '/' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.profile[language]}</p>\r\n                    </Link>\r\n                    <Link to='/documentation' className={`${info.step > 0 ? '' : 'link-disabled'} sidebar-element${location.pathname === '/documentation' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/documents${location.pathname === '/documentation' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.documentation[language]}</p>\r\n                    </Link>\r\n                    <Link to='/choose' className={`${info.step > 1 ? '' : 'link-disabled'} sidebar-element${location.pathname === '/choose' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/choose${location.pathname === '/choose' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.chooseHouse[language]}</p>\r\n                    </Link>\r\n                    {\r\n                        info.wantFinance &&\r\n                            <Link to='/financing' className={`${info.step > 2 ? '' : 'link-disabled'} sidebar-element${location.pathname.indexOf('/financing') !== -1 ? '-active' : ''}`}>\r\n                                <img src={`/img/sidebar/finance${location.pathname.indexOf('/financing') !== -1 ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                                <p>{text.sidebar.financing[language]}</p>\r\n                            </Link>\r\n                    }\r\n                    <Link to='/buy' className={`${info.step > 3 ? '' : 'link-disabled'} sidebar-element${location.pathname === '/buy' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/buy${location.pathname === '/buy' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.buyHouse[language]}</p>\r\n                    </Link>\r\n                    <Link to='/interior-design' className={`${info.step > 4 ? '' : 'link-disabled'} sidebar-element${location.pathname === '/interior-design' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/intDesign${location.pathname === '/interior-design' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.interiorDesign[language]}</p>\r\n                    </Link>\r\n                    <Link to='/propietary-service' className={`sidebar-element${location.pathname.indexOf('/propietary-service') !== -1 ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/ownerServ${location.pathname.indexOf('/propietary-service') !== -1 ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.propietaryService[language]}</p>\r\n                    </Link>\r\n                    <Link to='/faq' className={`sidebar-element${location.pathname.indexOf('/faq') !== -1 ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/faq${location.pathname.indexOf('/faq') !== -1 ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.faq[language]}</p>\r\n                    </Link>\r\n                    <Link to='/help' className={`sidebar-element${location.pathname === '/help' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/help${location.pathname === '/help' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.help[language]}</p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {info}\r\n}) => ({\r\n    language,\r\n    info\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        toggleLanguage: changeLangAction,\r\n        logout: logoutAction\r\n    }\r\n)(withRouter(AuthNav))\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { changeLangAction } from '../../redux/appDuck'\r\nimport { logoutAction } from '../../redux/userDuck'\r\nimport { withRouter } from 'react-router-dom'\r\nimport text from '../text'\r\nimport { Dropdown, Menu } from 'antd'\r\n\r\nconst AdminNav = ({location, language, info, logout}) => {\r\n\r\n    let menu = () => (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <p className='menu-item-p' onClick={logout}>{text.navbar.logout[language]}</p>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <div className='auth-nav'>\r\n            <div className=\"top-nav\">\r\n                <Dropdown overlay={menu} trigger={['click']}>\r\n                    <img style={{cursor: 'pointer'}} src=\"/img/navbar/profile.svg\" alt=\"profile\"/>\r\n                </Dropdown>\r\n\r\n            </div>\r\n            <div className=\"left-nav\">\r\n                <img className='sidebar-logo' src=\"/img/common/logo-dark.png\" alt=\"PP logo black\"/>\r\n                <div className=\"sidebar-nav\">\r\n                    <Link to='/admin/select-client' className={`sidebar-element${location.pathname === '/admin/select-client' || location.pathname === '/' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/profile${location.pathname === '/admin/select-client' || location.pathname ===  '/' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.chooseUser[language]}</p>\r\n                    </Link>\r\n                    <Link to='/admin/data' className={`sidebar-element${location.pathname === '/admin/data' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/data${location.pathname === '/data' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.userProfile[language]}</p>\r\n                    </Link>\r\n                    <Link to='/admin/documentation' className={`sidebar-element${location.pathname === '/admin/documentation' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/documents${location.pathname === '/documentation' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.clientDocuments[language]}</p>\r\n                    </Link>\r\n                    <Link to='/admin/choose' className={`sidebar-element${location.pathname === '/admin/choose' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/choose${location.pathname === '/admin/choose' ? '' : '-gray'}.png`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.userChosenVilla[language]}</p>\r\n                    </Link>\r\n                    <Link to='/admin/financing' className={`sidebar-element${location.pathname.indexOf('/admin/financing') !== -1 ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/finance${location.pathname.indexOf('/admin/financing') !== -1 ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.userFinance[language]}</p>\r\n                    </Link>\r\n                    <Link to='/admin/buy' className={`sidebar-element${location.pathname === '/admin/buy' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/buy${location.pathname === '/admin/buy' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.userBoughtVilla[language]}</p>\r\n                    </Link>\r\n                    <Link to='/admin/interior-design' className={`sidebar-element${location.pathname === '/admin/interior-design' ? '-active' : ''}`}>\r\n                        <img src={`/img/sidebar/intDesign${location.pathname === '/admin/interior-design' ? '' : '-gray'}.svg`} alt=\"nav element\"/>\r\n                        <p>{text.sidebar.clientFinishes[language]}</p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {info}\r\n}) => ({\r\n    language,\r\n    info\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        toggleLanguage: changeLangAction,\r\n        logout: logoutAction\r\n    }\r\n)(withRouter(AdminNav))\r\n","import React, { useState } from 'react'\r\nimport { Dropdown, Menu, PageHeader } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { logoutAction } from '../../redux/userDuck'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\nimport { changeLangAction } from '../../redux/appDuck'\r\nimport { HamburgerCollapse } from 'react-animated-burgers'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport AuthNav from './AuthNav'\r\nimport AdminNav from './AdminNav'\r\n\r\nconst Navbar = ({info, logged, language, logout, toggleLanguage}) => {\r\n\r\n    let [activeBurger, setActiveBurger] = useState(false)\r\n\r\n    let isDesktop = useMediaQuery({query: '(min-device-width: 950px)'})\r\n    let menu = (\r\n        <Menu>\r\n            <Menu.Item key='0'>\r\n                <Link to='/'>{text.navbar.index[language]}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='1'>\r\n                <Link to='/us'>{text.navbar.aboutUs[language]}</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='2'>\r\n                <Link to='/amenities'>{text.navbar.amenities[language]}</Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    let loggedMenu = (\r\n        <Menu>\r\n            <Menu.Item key='0'>\r\n                <li onClick={logout}>Logout</li>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !logged ?  \r\n                    <PageHeader className='navbar-container'>\r\n                        <Link to='/'><img src=\"/logo.png\" alt=\"Logo\"/></Link>\r\n                        {\r\n                            isDesktop ?\r\n                                <div className='right-nav'>\r\n                                    <ul>\r\n                                        <li><Link to='/'>{text.navbar.index[language]}</Link></li>\r\n                                        <li><Link to='/us'>{text.navbar.aboutUs[language]}</Link></li>\r\n                                        <li><Link to='/amenities'>{text.navbar.amenities[language]}</Link></li>\r\n                                        <li><Link to='/contact'>{text.navbar.contact[language]}</Link></li>\r\n                                    </ul>\r\n                                    <p className='language-selector' onClick={toggleLanguage}>\r\n                                        {language}\r\n                                    </p>\r\n                                </div>\r\n                            :\r\n                                <div className='mobile-right-nav'>\r\n                                    <p className='language-selector' onClick={toggleLanguage}>\r\n                                        {language}\r\n                                    </p>\r\n                                    <Dropdown overlay={menu} trigger={['click']}>\r\n                                        <HamburgerCollapse isActive={activeBurger} onClick={() => setActiveBurger(!activeBurger)} className='hamburger' buttonWidth={30}/>\r\n                                    </Dropdown>\r\n                                </div>\r\n                        }\r\n                    </PageHeader>\r\n                : info.userType === 'buyer' ? \r\n                    <AuthNav/>\r\n                : info.userType === 'admin' || info.userType === 'agent' ? \r\n                    <AdminNav/>\r\n                :\r\n                    <AuthNav/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {logged, info}, \r\n    app: {language}\r\n}) => ({\r\n    logged, \r\n    language,\r\n    info\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        logout: logoutAction,\r\n        toggleLanguage: changeLangAction\r\n    }\r\n)(Navbar)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\n\r\nconst Footer = ({language}) => {\r\n    return (\r\n        <div className='footer-container'>\r\n            <div className=\"footer-left\">\r\n               <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quam similique corporis eligendi nostrum perspiciatis dolores nobis, officiis dolorem. Iure cumque tempora ab officia officiis assumenda qui, doloremque cupiditate fugiat suscipit?</p>\r\n            </div>\r\n            <div className=\"footer-right\">\r\n                <img src=\"/img/common/logo-compact.svg\" alt=\"Punta Piedra\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n\r\n    }\r\n)(Footer)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Input, Form, message } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { loginAction } from '../../redux/userDuck'\r\nimport text from '../text'\r\n\r\nlet LoginForm = ({history, language, info, fetching, error, login}) => {\r\n\r\n    let [data, setData] = useState({})\r\n\r\n    let onFinish = () => {\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if(!data.email || !rex.test(data.email.toLowerCase())) return message.warning(text.messages.incorrectEmail[language])\r\n        if(!data.password) return message.error(text.messages.incorrectPassword[language])\r\n        login(data)\r\n    }\r\n\r\n    let handleData = e => setData({...data, [e.target.name]: e.target.value})\r\n\r\n    useEffect(() => {\r\n        if(error.status === 403) return message.error(text.messages.wrongPassword[language])\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n        if(info.step){\r\n            switch(info.step){\r\n                case 0:\r\n                    if(info.userType === 'admin' || info.userType === 'agent') return history.push('/admin/select-client')\r\n                    return history.push('/profile')\r\n                case 1:\r\n                    return history.push('/choose')\r\n                case 2:\r\n                    return history.push('/financing')\r\n                case 3:\r\n                    return history.push('/buy')\r\n                case 4:\r\n                    return history.push('/data')\r\n                case 5:\r\n                    return history.push('/documentation')\r\n                case 6:\r\n                    return history.push('/interior-design')\r\n                default: \r\n                    return\r\n            }\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[info, error])\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: text.form.required[language],\r\n                },\r\n                ]}\r\n            >\r\n                <Input name='email' onChange={handleData} placeholder={text.login.emailPlaceholder[language]}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                {\r\n                    required: true,\r\n                    message: text.form.required[language],\r\n                },\r\n                ]}\r\n            >\r\n                <Input.Password name='password' onChange={handleData} placeholder={text.login.passwordPlaceholder[language]}/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button loading={fetching} className='nav-button' type=\"primary\" htmlType=\"submit\">\r\n                    {text.button.login[language]}\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapState = ({\r\n    user: {info, fetching, error},\r\n    app: {language}\r\n}) => ({\r\n    language,\r\n    info,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState, \r\n    {\r\n        login: loginAction\r\n    }\r\n)(LoginForm)\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport LoginForm from './LoginForm'\r\nimport text from '../text'\r\n\r\nlet Login = ({language}) => {\r\n    return (\r\n        <div className='padded-container'>\r\n            <div className='auth-container'>\r\n                <div className=\"left-register register-bg\">\r\n                    <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n                </div>\r\n                <div className=\"auth-right-content\">\r\n                    <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                    <p className='title'>{text.login.portalTitle[language]}</p>\r\n                    <p className='subtitle'>{text.login.portalSubtitle[language]}</p>\r\n                    <br/>\r\n                    <LoginForm/>\r\n                    <div className=\"auth-bottom-text\">\r\n                        <p>{text.form.forgotPassword[language]} <Link to='/recover-password'>{text.form.forgotPasswordLink[language]}</Link></p>\r\n                        <p>{text.form.register[language]} <Link to='/register/buyer'>{text.form.registerLink[language]}</Link></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        \r\n    }\r\n)(Login)","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, message, Select, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signupAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\nimport { changeLangAction } from '../../../redux/appDuck'\r\n\r\nlet { Option } = Select\r\n\r\nlet AgentData = ({fetching, language, error, info, signup, history, changeLanguage}) => {\r\n\r\n    let [data, setData] = useState({\r\n        userType: 'agent'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'español') ||\r\n             !data.company ||\r\n             !data.email ||\r\n             !data.phone\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        if(!data.consent) return message.warn(text.messages.consent[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/profile')\r\n    }, [error, info])\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                {language === 'español' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n            </div>\r\n            <Input onChange={handleData} value={data.company} name='company' placeholder={text.register.company[language]}/>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                <Input className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n            </div>\r\n            <div className=\"multiple-inputs\">\r\n                <Select className='agent-selector' onChange={value => {setData({...data, language: value}); changeLanguage(value)}} placeholder={text.register.language[language]} value={data.language} defaultValue={data.language}>\r\n                    <Option value='english'>English</Option>\r\n                    <Option value='español'>Español</Option>\r\n                </Select>\r\n            </div>\r\n            <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n            <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n            <br/><br/>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.consent}\r\n                    onChange={e => setData({...data, consent: e.target.checked})}\r\n                >\r\n                    {text.register.confirm[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.allowNewsletter}\r\n                    onChange={e => setData({...data, allowNewsletter: e.target.checked})}\r\n                >\r\n                    {text.register.allowNewsletter[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <br/><br/>\r\n            <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n            <div className=\"auth-bottom-text\">\r\n                <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language}\r\n}) => ({\r\n    fetching,\r\n    error, \r\n    info,\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction,\r\n        changeLanguage: changeLangAction\r\n    }\r\n)(AgentData)","import { getAgents } from \"../services/api\"\r\n\r\nlet initialState = {\r\n    fetchingGeneral: false,\r\n    errorGeneral: {},\r\n    agents: []\r\n}\r\n\r\nlet GET_AGENTS = 'GET_AGENTS'\r\nlet GET_AGENTS_SUCCESS = 'GET_AGENTS_SUCCESS'\r\nlet GET_AGENTS_ERROR = 'GET_AGENTS_ERROR'\r\n\r\nlet reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_AGENTS:\r\n            return {...state, fetchingGeneral: true, error: {}}\r\n        case GET_AGENTS_SUCCESS:\r\n            return {...state, fetchingGeneral: false,  agents: action.payload}\r\n        case GET_AGENTS_ERROR:\r\n            return {...state, fetchingGeneral: false, error: action.payload}\r\n        default: \r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let getAgentsAction = () => dispatch => {\r\n    dispatch({\r\n        type: GET_AGENTS\r\n    })\r\n    getAgents()\r\n        .then(res => dispatch({\r\n            type: GET_AGENTS_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_AGENTS_ERROR,\r\n            payload: err.response\r\n        }))\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, message, Select, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signupAction } from '../../../redux/userDuck'\r\nimport { getAgentsAction } from '../../../redux/generalDataDuck'\r\nimport text from '../../text'\r\nimport { changeLangAction } from '../../../redux/appDuck'\r\nlet { Option } = Select\r\n\r\nlet BasicData = ({fetching, language, error, info, fetchingGeneral, errorGeneral, agents, signup, history, getAgents, changeLanguage}) => {\r\n\r\n    let [data, setData] = useState({\r\n        userType: 'buyer'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'español') ||\r\n             !data.email ||\r\n             !data.phone\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        if(!data.consent) return message.warn(text.messages.consent[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/profile')\r\n    }, [error, info])\r\n\r\n    useEffect(() => {\r\n        getAgents()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                {language === 'español' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n            </div>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                <Input maxLength='15' className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n            </div>\r\n            <div className=\"multiple-inputs\">\r\n                <Select className='agent-selector' loading={fetchingGeneral} onChange={value => setData({...data, customerAgent: value})} placeholder={text.register.selectAgent[language]} value={data.customerAgent}>\r\n                    {agents.map(\r\n                        agent => \r\n                            <Option key={agent._id} value={agent._id}>\r\n                                {agent.name}\r\n                            </Option>\r\n                    )}\r\n                </Select>\r\n                &nbsp;\r\n                <Select className='agent-selector' onChange={value => {setData({...data, language: value}); changeLanguage(value)}} placeholder={text.register.language[language]} value={data.language} defaultValue={data.language}>\r\n                    <Option value='english'>English</Option>\r\n                    <Option value='español'>Español</Option>\r\n                </Select>\r\n            </div>\r\n            <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n            <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n            <div className=\"align-checkbox\">\r\n                <div className=\"checkbox-input\">\r\n                    <Checkbox\r\n                        checked={data.wantFinance}\r\n                        onChange={e => setData({...data, wantFinance: e.target.checked})}\r\n                    >\r\n                        {text.register.wantFinance[language]}\r\n                    </Checkbox>\r\n                </div>\r\n                <div className=\"checkbox-input\">\r\n                    <Checkbox\r\n                        checked={data.consent}\r\n                        onChange={e => setData({...data, consent: e.target.checked})}\r\n                    >\r\n                        {text.register.confirm[language]}\r\n                    </Checkbox>\r\n                </div>\r\n                <div className=\"checkbox-input\">\r\n                    <Checkbox\r\n                        checked={data.allowNewsletter}\r\n                        onChange={e => setData({...data, allowNewsletter: e.target.checked})}\r\n                    >\r\n                        {text.register.allowNewsletter[language]}\r\n                    </Checkbox>\r\n                </div>\r\n            </div>\r\n            <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n            <div className=\"auth-bottom-text\">\r\n                <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language},\r\n    general: {fetchingGeneral, errorGeneral, agents}\r\n}) => ({\r\n    fetching,\r\n    error, \r\n    info,\r\n    language,\r\n    fetchingGeneral,\r\n    errorGeneral,\r\n    agents\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction,\r\n        getAgents: getAgentsAction,\r\n        changeLanguage: changeLangAction\r\n    }\r\n)(BasicData)","import React, { useEffect, useState } from 'react'\r\nimport { Input, Button, message, Select, Checkbox } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signupAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nlet ProviderData = ({fetching, language, error, info, signup, history}) => {\r\n\r\n    let [data, setData] = useState({\r\n        userType: 'provider'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'español') ||\r\n             !data.company ||\r\n             !data.email ||\r\n             !data.phone\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        if(!data.consent) return message.warn(text.messages.consent[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/profile')\r\n    }, [error, info])\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                {language === 'español' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n            </div>\r\n            <Input onChange={handleData} value={data.company} name='company' placeholder={text.register.company[language]}/>\r\n            <div className=\"multiple-inputs\">\r\n                <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                <Input className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n            </div>\r\n            <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n            <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.consent}\r\n                    onChange={e => setData({...data, consent: e.target.checked})}\r\n                >\r\n                    {text.register.confirm[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <div className=\"checkbox-input\">\r\n                <Checkbox\r\n                    checked={data.allowNewsletter}\r\n                    onChange={e => setData({...data, allowNewsletter: e.target.checked})}\r\n                >\r\n                    {text.register.allowNewsletter[language]}\r\n                </Checkbox>\r\n            </div>\r\n            <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n            <div className=\"auth-bottom-text\">\r\n                <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language}\r\n}) => ({\r\n    fetching,\r\n    error, \r\n    info,\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction\r\n    }\r\n)(ProviderData)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\nimport AgentData from './registerComponents/AgentData'\r\nimport BasicData from './registerComponents/BasicData'\r\nimport ProviderData from './registerComponents/ProviderData'\r\n\r\nlet RegisterForm = ({match, language}) => {\r\n    \r\n    let { params } = match\r\n    \r\n    return (\r\n        <div className='padded-container register-container'>\r\n            <div className=\"left-register register-form-bg\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register-block\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>\r\n                    {params.type === 'buyer' && text.register.portalSubtitleBuyer[language]}\r\n                    {params.type === 'agent' && text.register.portalSubtitleAgent[language]}\r\n                    {params.type === 'provider' && text.register.portalSubtitleProvider[language]}\r\n                </p>\r\n                {params.type === 'buyer' && <BasicData/>}\r\n                {params.type === 'agent' && <AgentData/>}\r\n                {params.type === 'provider' && <ProviderData/>}\r\n                {/* <div className=\"auth-bottom-text\">\r\n                    {params.type !== 'buyer' && <p><Link to='/register/buyer'>{text.register.signLinkBuyer[language]}</Link></p>}\r\n                    {params.type !== 'agent' && <p><Link to='/register/agent'>{text.register.signLinkAgent[language]}</Link></p>}\r\n                    {params.type !== 'provider' && <p><Link to='/register/provider'>{text.register.signLinkProvider[language]}</Link></p>}\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n\r\n    }\r\n)(RegisterForm)","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { sendTokenAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nconst ForgotPassword = ({history, language, tokenSent, fetching, error, sendToken}) => {\r\n\r\n    let [email, setEmail] = useState('')\r\n\r\n    let handleSubmit = () => {\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if(!email || !rex.test(email.toLowerCase())) return message.warning(text.messages.incorrectEmail[language])\r\n        sendToken(email)\r\n    }\r\n\r\n    let checkEnter = e => e.key === 'Enter' && handleSubmit()\r\n\r\n    useEffect(() => {\r\n        if(tokenSent) return history.push('/recover-password/token')\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n        if(error.status === 404) return message.error(text.messages.requestError[language])\r\n    }, [tokenSent, error])\r\n\r\n    return (\r\n        <div className='padded-container register-container'>\r\n            <div className=\"left-register register-bg\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>{text.register.forgotSubtitle[language]}</p>\r\n                <div className=\"recover-password-text\">\r\n                    <h2>{text.recoverPassword.title[language]}</h2>\r\n                    <h3>{text.recoverPassword.message[language]}</h3>\r\n                </div>        \r\n                <div className=\"recover-password-input\">\r\n                    <Input onKeyPress={checkEnter} onChange={e => setEmail(e.target.value)} value={email} placeholder={text.login.emailPlaceholder[language]}/>\r\n                    <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.next[language]}</Button>\r\n                </div>\r\n                <div className=\"auth-bottom-text\">\r\n                    <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n                    <p>{text.form.register[language]} <Link to='/register/buyer'>{text.form.registerLink[language]}</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {tokenSent, fetching, error} \r\n}) => ({\r\n    language,\r\n    tokenSent,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        sendToken: sendTokenAction\r\n    }\r\n)(ForgotPassword)\r\n","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Cookies } from 'react-cookie'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { changePasswordAction, checkTokenAction } from '../../../redux/userDuck'\r\nimport text from '../../text'\r\n\r\nconst ForgotPasswordToken = ({history, language, validCode, passwordChanged, fetching, error, checkCode, changePassword}) => {\r\n\r\n    let [token, setToken] = useState('')\r\n    let [password, setPassword] = useState('')\r\n    let email = new Cookies().get('recoveryEmail')\r\n\r\n    let handleSubmit = () => {\r\n        if(!email) return history.push('/recover-password')\r\n        if(!token) return message.warning(text.messages.enterTokenError[language])\r\n        checkCode(token)\r\n    }\r\n\r\n    let handleNewPassword = () => {\r\n        if(!email) return history.push('/recover-password')\r\n        if(!password || password.length < 6 || !/\\d/.test(password)) return message.warning(text.recoverPassword.pwdError[language])\r\n        changePassword(password)\r\n    }\r\n\r\n    let checkEnter = e => e.key === 'Enter' && handleSubmit()\r\n    let checkEnterPassword = e => e.key === 'Enter' && handleNewPassword()\r\n\r\n    useEffect(() => {\r\n        if(passwordChanged){\r\n            message.success(text.recoverPassword.pwdSuccess[language])\r\n            setTimeout(() => {\r\n                history.push('/login')\r\n            }, 3000)\r\n        }\r\n        if(validCode) return message.success(text.recoverPassword.successToken[language])\r\n        if(error.status === 500) return message.error(text.messages.requestError[language])\r\n    }, [passwordChanged, validCode, error])\r\n\r\n    return (\r\n        <div className='padded-container register-container'>\r\n            <div className=\"left-register register-bg\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.portalTitle[language]}</p>\r\n                <p className='subtitle'>{text.register.forgotSubtitle[language]}</p>\r\n                {\r\n                    !validCode ? \r\n                        <>\r\n                            <div className=\"recover-password-text\">\r\n                                <h2>{text.recoverPassword.recoverMessage[language]}</h2>\r\n                                <h3>{text.recoverPassword.successEmail[language]}</h3>\r\n                                <small>{}</small>\r\n                            </div>        \r\n                            <div className=\"recover-password-input\">\r\n                                <Input onKeyPress={checkEnter} onChange={e => setToken(e.target.value)} value={token} placeholder={text.recoverPassword.enterToken[language]}/>\r\n                                <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.next[language]}</Button>\r\n                            </div>\r\n                        </>\r\n                    :\r\n                        <>\r\n                            <div className=\"recover-password-text\">\r\n                                <h2>{text.recoverPassword.recoverMessage[language]}</h2>\r\n                                <h3>{text.recoverPassword.pwdIndicator[language]}</h3>\r\n                            </div>        \r\n                            <div className=\"recover-password-input\">\r\n                                <Input onKeyPress={checkEnterPassword} onChange={e => setPassword(e.target.value)} value={password} placeholder={text.recoverPassword.enterNewPassword[language]}/>\r\n                                <Button loading={fetching} onClick={handleNewPassword} className='nav-button'>{text.button.send[language]}</Button>\r\n                                {passwordChanged && <small>{text.recoverPassword.redirect[language]}</small>}\r\n                            </div>\r\n                        </>\r\n                }\r\n                \r\n                <div className=\"auth-bottom-text\">\r\n                    <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n                    <p>{text.form.register[language]} <Link to='/register/buyer'>{text.form.registerLink[language]}</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {validCode, passwordChanged,  fetching, error} \r\n}) => ({\r\n    language,\r\n    validCode,\r\n    passwordChanged,\r\n    fetching,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        checkCode: checkTokenAction,\r\n        changePassword: changePasswordAction\r\n    }\r\n)(ForgotPasswordToken)\r\n","import { Cookies } from \"react-cookie\"\r\nimport { linkAgent, updateClient, getClientData, deleteFile, getData, getFile, getHouseData, getHouses, getUserDocs, getUsers, sendNotification, updateUser, uploadFile } from \"../services/api\"\r\n\r\nlet initialData = {\r\n    info: {\r\n        creditRequest: {}\r\n    },\r\n    fetchingData: false,\r\n    fetchingHouse: true,\r\n    fetchingDocs: false,\r\n    error: {},\r\n    dataUpdated: false,\r\n    house: {},\r\n    houses: [],\r\n    docs: [],\r\n    files: {},\r\n    selectedFile: {},\r\n    notificationSent: false,\r\n    users: [],\r\n    selectedUser: '',\r\n    selectedUserData: {}\r\n}\r\n// ADMIN\r\nlet GET_USER_DATA = 'GET_DATA'\r\nlet GET_USER_DATA_SUCCESS = 'GET_USER_DATA_SUCCESS'\r\nlet GET_USER_DATA_ERROR = 'GET_USER_DATA_ERROR'\r\n\r\nlet GET_USERS = 'GET_USERS'\r\nlet GET_USERS_SUCCESS = 'GET_USERS_SUCCESS'\r\nlet GET_USERS_ERROR = 'GET_USERS_ERROR'\r\n\r\nlet HANDLE_SELECTED_USER = 'HANDLE_SELECTED_USER'\r\n\r\n// USERS\r\nlet GET_DATA = 'GET_DATA'\r\nlet GET_DATA_SUCCESS = 'GET_DATA_SUCCESS'\r\nlet GET_DATA_ERROR = 'GET_DATA_ERROR'\r\n\r\nlet GET_DOCS = 'GET_DOCS'\r\nlet GET_DOCS_SUCCESS = 'GET_DOCS_SUCCESS'\r\nlet GET_DOCS_ERROR = 'GET_DOCS_ERROR'\r\n\r\nlet GET_HOUSE = 'GET_HOUSE'\r\nlet GET_HOUSE_SUCCESS = 'GET_HOUSE_SUCCESS'\r\nlet GET_HOUSE_ERROR = 'GET_HOUSE_ERROR'\r\n\r\nlet GET_HOUSES = 'GET_HOUSES'\r\nlet GET_HOUSES_SUCCESS = 'GET_HOUSES_SUCCESS'\r\nlet GET_HOUSES_ERROR = 'GET_HOUSES_ERROR'\r\n\r\nlet UPDATE_USER = 'UPDATE_USER'\r\nlet UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\r\nlet UPDATE_USER_ERROR = 'UPDATE_USER_ERROR'\r\n\r\nlet HANDLE_INFO = 'HANDLE_INFO'\r\nlet HANDLE_HOUSE = 'HANDLE_HOUSE'\r\nlet HANDLE_FILE = 'HANDLE_FILE'\r\nlet GET_FILE = 'GET_FILE'\r\nlet DELETE_FILE = 'DELETE_FILE'\r\n\r\nlet SEND_NOTIFICATION = 'SEND_NOTIFICATION'\r\nlet SEND_NOTIFICATION_SUCCESS = 'SEND_NOTIFICATION_SUCCESS'\r\nlet SEND_NOTIFICATION_ERROR = 'SEND_NOTIFICATION_ERROR'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        // ADMIN\r\n        case GET_USER_DATA:\r\n            return {...state, fetchingData: true, selectedUserData: {}, error: {}}\r\n        case GET_USER_DATA_SUCCESS:\r\n            return {...state, fetchingData: false, selectedUserData: action.payload}\r\n        case GET_USER_DATA_ERROR:\r\n            return {...state, fetchingData: false, error: action.payload}\r\n\r\n        case GET_USERS:\r\n            return {...state, fetchingData: true, users: [], error: {}}\r\n        case GET_USERS_SUCCESS:\r\n            return {...state, fetchingData: false, users: action.payload}\r\n        case GET_USERS_ERROR:\r\n            return {...state, fetchingData: false, error: action.payload}\r\n\r\n        case HANDLE_SELECTED_USER:\r\n            return {...state, selectedUser: action.payload}\r\n        \r\n            // USERS\r\n        case GET_DATA:\r\n            return {...state, dataUpdated: false, fetchingData: true, info: {creditRequest: {}}, error: {}}\r\n        case GET_DATA_SUCCESS:\r\n            return {...state, dataUpdated: false, fetchingData: false, info: action.payload}\r\n        case GET_DATA_ERROR:\r\n            return {...state, dataUpdated: false, fetchingData: false, error: action.payload}\r\n            \r\n        case GET_DOCS:\r\n            return {...state, fetchingDocs: true, docs: {}, error: {}}\r\n        case GET_DOCS_SUCCESS:\r\n            return {...state, fetchingDocs: false, docs: action.payload}\r\n        case GET_DOCS_ERROR:\r\n            return {...state, fetchingDocs: false, error: action.payload}\r\n\r\n        case GET_HOUSE:\r\n            return {...state, fetchingHouse: true, house: {}, error: {}}\r\n        case GET_HOUSE_SUCCESS:\r\n            return {...state, fetchingHouse: false, house: action.payload}\r\n        case GET_HOUSE_ERROR:\r\n            return {...state, fetchingHouse: false, error: action.payload}\r\n\r\n        case GET_HOUSES:\r\n            return {...state, fetchingHouse: true, houses: [], error: {}}\r\n        case GET_HOUSES_SUCCESS:\r\n            return {...state, fetchingHouse: false, houses: action.payload}\r\n        case GET_HOUSES_ERROR:\r\n            return {...state, fetchingHouse: false, error: action.payload}\r\n\r\n        case UPDATE_USER:\r\n            return {...state, dataUpdated: false, fetching: true, error: {}}\r\n        case UPDATE_USER_SUCCESS:\r\n            return {...state, dataUpdated: true, fetching: false}\r\n        case UPDATE_USER_ERROR:\r\n            return {...state, fetching: false, error: action.payload, info: {}}\r\n\r\n        case HANDLE_INFO:\r\n            return {...state, info: action.payload}\r\n        case HANDLE_HOUSE:\r\n            return {...state, info: action.payload}\r\n        case GET_FILE:\r\n            return {...state, selectedFile: action.payload}\r\n        case HANDLE_FILE:\r\n            return {...state, info: action.payload}\r\n        case DELETE_FILE:\r\n            return {...state, info: action.payload}\r\n        \r\n        case SEND_NOTIFICATION:\r\n            return {...state, notificationSent: false}\r\n        case SEND_NOTIFICATION_SUCCESS:\r\n            return {...state, notificationSent: true, info: {...state.info, agentNotified: true}}\r\n        case SEND_NOTIFICATION_ERROR:\r\n            return {...state, notificationSent: false}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\n// ADMIN\r\nexport let approveFinancingAction = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: UPDATE_USER\r\n    })\r\n    let { selectedUser, selectedUserData } = getState().data\r\n    let completeData = {...selectedUserData, step: 4}\r\n    updateClient(selectedUser, completeData)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SEND_NOTIFICATION\r\n            })\r\n            if(selectedUser.language === 'english'){\r\n                sendNotification(selectedUserData.email, 'approved')\r\n                    .then(res => {\r\n                        console.log(res.data)\r\n                        dispatch({\r\n                            type: SEND_NOTIFICATION_SUCCESS\r\n                        })\r\n                    })\r\n                    .catch(err => dispatch({\r\n                        type: SEND_NOTIFICATION_ERROR\r\n                    }))\r\n                dispatch({\r\n                    type: UPDATE_USER_SUCCESS,\r\n                    payload: res.data\r\n                })\r\n                return\r\n            }\r\n            sendNotification(selectedUserData.email, 'approvedSPA')\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    dispatch({\r\n                        type: SEND_NOTIFICATION_SUCCESS\r\n                    })\r\n                })\r\n                .catch(err => dispatch({\r\n                    type: SEND_NOTIFICATION_ERROR\r\n                }))\r\n            dispatch({\r\n                type: UPDATE_USER_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => dispatch({\r\n            type: UPDATE_USER_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let getClientDataAction = () => (dispatch, getState) => {\r\n    let { selectedUser } = getState().data\r\n    dispatch({\r\n        type: GET_USER_DATA\r\n    })\r\n    getClientData({selectedUser})\r\n        .then(res => dispatch({\r\n            type: GET_USER_DATA_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_USER_DATA_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let handleSelectedUserAction = id => dispatch => {\r\n    dispatch({\r\n        type: HANDLE_SELECTED_USER,\r\n        payload: id\r\n    })\r\n}\r\n\r\nexport let getUsersAction = () => dispatch => {\r\n    dispatch({\r\n        type: GET_USERS\r\n    })\r\n    getUsers()\r\n        .then(res => dispatch({\r\n            type: GET_USERS_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_USERS_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\n// USER\r\n\r\nexport let sendNotificationAction = data => (dispatch, getState) => {\r\n    let { info: {email} } = getState().user\r\n    dispatch({\r\n        type: SEND_NOTIFICATION\r\n    })\r\n    sendNotification(email, data)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            dispatch({\r\n                type: SEND_NOTIFICATION_SUCCESS\r\n            })\r\n        })\r\n        .catch(err => dispatch({\r\n            type: SEND_NOTIFICATION_ERROR\r\n        }))\r\n}\r\n\r\nexport let deleteFileAction = name => (dispatch, getState) => {\r\n    let { info: {email} } = getState().user\r\n    deleteFile(name, email)\r\n        .then(user => dispatch({\r\n            type: DELETE_FILE,\r\n            payload: user.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_DATA_ERROR,\r\n            payload: err.response\r\n        }))\r\n\r\n}\r\n\r\nexport let getFileAction = name => (dispatch, getState) => {\r\n    let { info: {email} } = getState().user\r\n    let extension = name.substring(name.length - 3)\r\n    getFile(name, email)\r\n        .then(res => {\r\n            if(extension === 'pdf'){\r\n                let file = new Blob([res.data], {type: 'application/pdf'})\r\n                let fileURL = URL.createObjectURL(file)\r\n                return window.open(fileURL)\r\n            }\r\n            let file = new Blob([res.data], {type: `image/${extension}`})\r\n            let fileURL = URL.createObjectURL(file)\r\n            return window.open(fileURL)\r\n        })\r\n        .catch(err => dispatch({\r\n            type: GET_FILE,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let handleFileAction = e => (dispatch, getState) => {\r\n    let { info: {email} } = getState().user\r\n    let { info } = getState().data\r\n    let { files, name } = e.target\r\n    let file = new FormData()\r\n    file.append('file', files[0])\r\n    file.append('name', name)\r\n    uploadFile(file, email)\r\n    let newInfo = {...info, files: {...info.files, [name]: files[0].name}}\r\n    dispatch({\r\n        type: HANDLE_FILE,\r\n        payload: newInfo\r\n    })\r\n    sendNotification(email, 'document')\r\n}\r\n\r\nexport let handleDocAction = (incomingFile, type) => (dispatch, getState) => {\r\n    let { info: {email} } = getState().user\r\n    let { info } = getState().data\r\n    let file = new FormData()\r\n    file.append('file', incomingFile)\r\n    file.append('name', type)\r\n    uploadFile(file, email)\r\n    let newInfo = {...info, files: {...info.files, [type]: incomingFile.name}}\r\n    dispatch({\r\n        type: HANDLE_FILE,\r\n        payload: newInfo\r\n    })\r\n}\r\n\r\nexport let handleAdditionalHouseAction = (additionalBlock, additionalLotId) => (dispatch, getState) => {\r\n    let { info } = getState().data\r\n    if(additionalBlock === 'none'){\r\n        dispatch({\r\n            type: HANDLE_HOUSE,\r\n            payload: {...info, additionalBlock: null, additionalLotId: null}\r\n        })\r\n        return\r\n    }\r\n    if(!additionalBlock){\r\n        dispatch({\r\n            type: HANDLE_HOUSE,\r\n            payload: {...info, additionalLotId}\r\n        })\r\n        return\r\n    }\r\n    dispatch({\r\n        type: HANDLE_HOUSE,\r\n        payload: {...info, additionalBlock, additionalLotId: null}\r\n    })\r\n}\r\n\r\nexport let handleHouseAction = (block, lotId) => (dispatch, getState) => {\r\n    let { info } = getState().data\r\n    if(!block){\r\n        dispatch({\r\n            type: HANDLE_HOUSE,\r\n            payload: {...info, lotId}\r\n        })\r\n        return\r\n    }\r\n    dispatch({\r\n        type: HANDLE_HOUSE,\r\n        payload: {...info, block, lotId: null}\r\n    })\r\n}\r\n\r\nexport let handleStepAction = pageValue => (dispatch, getState) => {\r\n    dispatch({\r\n        type: UPDATE_USER\r\n    })\r\n    let { info } = getState().data\r\n    let completeData = {...info, step: pageValue}\r\n    updateUser(completeData)\r\n        .then(res => dispatch({\r\n            type: UPDATE_USER_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: UPDATE_USER_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let getHousesAction = () => dispatch => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: GET_HOUSES_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: GET_HOUSES\r\n    })\r\n    getHouses()\r\n        .then(res => dispatch({\r\n            type: GET_HOUSES_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_HOUSES_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let getHouseDataAction = () => (dispatch, getState) => {\r\n    let { info:{ lotId } } = getState().data\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: GET_HOUSE_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: GET_HOUSE\r\n    })\r\n    getHouseData({id, lotId})\r\n        .then(res => dispatch({\r\n            type: GET_HOUSE_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_HOUSE_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let updateUserAction = additionalData => (dispatch, getState) => {\r\n    dispatch({\r\n        type: UPDATE_USER\r\n    })\r\n    let { info } = getState().data\r\n    let completeData = {...info, ...additionalData}\r\n    updateUser(completeData)\r\n        .then(res => dispatch({\r\n            type: UPDATE_USER_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: UPDATE_USER_ERROR,\r\n            payload: err.response\r\n        }))\r\n    return 'done'\r\n}\r\n\r\nexport let handleHouseApprovalsAction = (blueprints, price) => (dispatch, getState) => {\r\n    let { info } = getState().data\r\n    if(!blueprints){\r\n        dispatch({\r\n            type: HANDLE_INFO,\r\n            payload: {...info, priceApproved: price.target.checked}\r\n        })\r\n        return\r\n    }\r\n    dispatch({\r\n        type: HANDLE_INFO,\r\n        payload: {...info, villaApproved: blueprints.target.checked}\r\n    })\r\n}\r\n\r\nexport let handleFinantialDataAction = event => (dispatch, getState) => {\r\n    let { info } = getState().data\r\n    let { target } = event\r\n    dispatch({\r\n        type: HANDLE_INFO,\r\n        payload: {...info, creditRequest: {...info.creditRequest, [target.name]:target.value}}\r\n    })\r\n}\r\n\r\nexport let handleInfoAction = (event, country, state) => (dispatch, getState) => {\r\n    let { info } = getState().data\r\n    let { target } = event\r\n    if(target) {\r\n        dispatch({\r\n            type: HANDLE_INFO,\r\n            payload: { ...info, [target.name]:target.value }\r\n        })\r\n        return\r\n    }\r\n    if(country){\r\n        dispatch({\r\n            type: HANDLE_INFO,\r\n            payload: { ...info, country:event }\r\n        })\r\n        return\r\n    }\r\n    if(state){\r\n        dispatch({\r\n            type: HANDLE_INFO,\r\n            payload: { ...info, state:event }\r\n        })\r\n        return\r\n    }\r\n    dispatch({\r\n        type: HANDLE_INFO,\r\n        payload: { ...info, birthDate:event }\r\n    })\r\n}\r\n\r\nexport let handleInteriorDesignAction = (area, value) => (dispatch, getState) => {\r\n    let { info } = getState().data\r\n    dispatch({\r\n        type: HANDLE_INFO,\r\n        payload: {...info, [area]: value}\r\n    })\r\n}\r\n\r\nexport let getUserDocsAction = () => dispatch => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: GET_DOCS_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: GET_DOCS\r\n    })\r\n    getUserDocs({id})\r\n        .then(res => dispatch({\r\n            type: GET_DOCS_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_DOCS_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let getDataAction = () => (dispatch, getState) => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: GET_DATA_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: GET_DATA\r\n    })\r\n    getData({id})\r\n        .then(res => dispatch({\r\n            type: GET_DATA_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_DATA_ERROR,\r\n            payload: err.response\r\n        }))\r\n}","export let usaStates = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'American Samoa',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'District of Columbia',\r\n    'Federated States of Micronesia',\r\n    'Florida',\r\n    'Georgia',\r\n    'Guam',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Marshall Islands',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Carolina',\r\n    'North Dakota',\r\n    'Northern Mariana Islands',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Palau',\r\n    'Pennsylvania',\r\n    'Puerto Rico',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virgin Island',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n]\r\n\r\nexport let mexStates = [\r\n    'Aguascalientes',\r\n    'Baja California',\r\n    'Baja California Sur',\r\n    'Campeche',\r\n    'Chiapas',\r\n    'Chihuahua',\r\n    'Coahuila de Zaragoza',\r\n    'Colima',\r\n    'Ciudad de México',\r\n    'Durango',\r\n    'Guanajuato',\r\n    'Guerrero',\r\n    'Hidalgo',\r\n    'Jalisco',\r\n    'Estado de México',\r\n    'Michoacán de Ocampo',\r\n    'Morelos',\r\n    'Nayarit',\r\n    'Nuevo León',\r\n    'Oaxaca',\r\n    'Puebla',\r\n    'Querétaro de Arteaga',\r\n    'Quintana Roo',\r\n    'San Luis Potosí',\r\n    'Sinaloa',\r\n    'Sonora',\r\n    'Tabasco',\r\n    'Tamaulipas',\r\n    'Tlaxcala',\r\n    'Veracruz',\r\n    'Yucatán',\r\n    'Zacatecas'\r\n  ]","import Modal from 'antd/lib/modal/Modal'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleConfirmationBoxAction } from '../../redux/appDuck'\r\nimport text from '../text'\r\n\r\nconst ConfirmationModal = ({confirmAction, language, confirmationBox, toggleBox, children}) => {\r\n    return (\r\n        <Modal\r\n            title={text.modal.confirmText[language]}\r\n            visible={confirmationBox}\r\n            onOk={confirmAction}\r\n            onCancel={toggleBox}\r\n            cancelText={text.modal.cancelButton[language]}\r\n            okText={text.modal.okButton[language]}\r\n        >\r\n            {children}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language, confirmationBox}\r\n}) => ({\r\n    language,\r\n    confirmationBox\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        toggleBox: handleConfirmationBoxAction\r\n    }\r\n)(ConfirmationModal)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Checkbox, DatePicker, Input, message, Select, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInfoAction, handleStepAction, sendNotificationAction, updateUserAction } from '../../redux/dataDuck'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport text from '../text'\r\nimport { usaStates, mexStates } from './profileData/States'\r\nimport ConfirmationModal from '../common/ConfirmationModal'\r\nimport { changeLangAction, handleConfirmationBoxAction } from '../../redux/appDuck'\r\n\r\nlet { Option } = Select\r\n\r\nconst Profile = ({sendNotification, history, info, fetching, dataUpdated, language, getData, handleInfo, updateUser, handleStep, toggleModal, changeLanguage}) => {\r\n\r\n    let [consent, setConsent] = useState(false)\r\n\r\n    let handleSubmit = () => {\r\n        if(!consent) return message.warning(text.messages.consent[language])\r\n        updateUser()\r\n    }\r\n\r\n    let checkCompleted = () => {\r\n        if(language === 'español' && !info.secondLastName) return message.warning(text.messages.missingFields[language])\r\n        if(\r\n            !info.country || \r\n            !info.state || \r\n            !info.ssn ||\r\n            !info.civilStatus ||\r\n            !info.occupation ||\r\n            !info.company ||\r\n            !info.position ||\r\n            !info.officePhone\r\n        ) return message.warning(text.messages.missingFields[language])\r\n        if(!consent) return message.warning(text.messages.consent[language])\r\n        toggleModal()\r\n    }\r\n\r\n    let submitAction = async () => {\r\n        await updateUser()\r\n        toggleModal()\r\n        if(info.step === 0) {\r\n            sendNotification('profile')\r\n            handleStep(1)\r\n        }\r\n        history.push('/documentation')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated) {\r\n            setConsent(false)\r\n            return message.success(text.messages.dataUpdated[language])\r\n        }\r\n    }, [dataUpdated])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/profile.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.profile[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.profile[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <p className='profile-form-subtitle2'>{text.profile.basicInfo[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                                <Input className={`${language === 'english' && 'last-input'}`} onChange={handleInfo} value={info.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                                {language === 'español' && <Input required onChange={handleInfo} value={info.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n                            </div>\r\n                            {info.userType !== 'buyer' && <Input id='company-app' onChange={handleInfo} value={info.company} name='company' placeholder={text.register.company[language]}/>}\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={info.email} name='email' placeholder={text.register.email[language]}/>\r\n                                <Input maxLength='15' className='last-input' onChange={handleInfo} value={info.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Select className='country-selector' onChange={e => handleInfo(e, 'country')} placeholder={text.profile.country[language]} value={info.country}>\r\n                                    <Option value='usa'>{text.profile.usa[language]}</Option>\r\n                                    <Option value='mex'>{text.profile.mex[language]}</Option>\r\n                                </Select>\r\n                                &nbsp;\r\n                                <Select disabled={!info.country} className='country-selector' onChange={e => handleInfo(e, null, 'state')} placeholder={text.profile.state[language]} value={info.state}>\r\n                                    {\r\n                                        info.country === 'usa' ? \r\n                                            usaStates.map(\r\n                                                state => <Option key={state} value={state}>{state}</Option>\r\n                                            )\r\n                                        :\r\n                                            mexStates.map(\r\n                                                state => <Option key={state} value={state}>{state}</Option>\r\n                                            )   \r\n                                    }\r\n                                </Select>\r\n                                &nbsp;\r\n                                <Select className='country-selector' onChange={e => {changeLanguage(e); handleInfo({target: {value: e, name: 'language'}})}} placeholder={text.register.language[language]} value={info.language} defaultValue={info.language}>\r\n                                    <Option value='english'>English</Option>\r\n                                    <Option value='español'>Español</Option>\r\n                                </Select>\r\n                            </div>\r\n                            {/* DIVISION */}\r\n                            <p className='profile-form-subtitle2'>{text.profile.workInfo[language]}</p>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">    \r\n                                    <Input maxLength='9' onChange={handleInfo} value={info.ssn} name='ssn' placeholder={text.userData.ssn[language]}/>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.civilStatus} name='civilStatus' placeholder={text.userData.civilStatus[language]}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.occupation} name='occupation' placeholder={text.userData.occupation[language]}/>\r\n                                    <p>{text.userData.occupationEx[language]}</p>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.company} name='company' placeholder={text.userData.company[language]}/>\r\n                                    <p>{text.userData.companyEx[language]}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.position} name='position' placeholder={text.userData.position[language]}/>\r\n                                    <p>{text.userData.positionEx[language]}</p>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.officePhone} name='officePhone' placeholder={text.userData.officePhone[language]}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"checkbox-input\">\r\n                            <Checkbox\r\n                                checked={consent}\r\n                                onChange={() => setConsent(!consent)}\r\n                            >\r\n                                {text.register.confirm[language]}\r\n                            </Checkbox>\r\n                        </div>\r\n                        <div className=\"small-buttons multiple-buttons\">\r\n                            <Button onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.save[language]}</Button>\r\n                            <Button onClick={checkCompleted} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <ConfirmationModal confirmAction={submitAction}>\r\n                <div className=\"modal-container-confirm\">\r\n                    <p className='profile-form-subtitle2'>{text.profile.basicInfo[language]}</p>\r\n                    <p>{text.profile.name[language]}: <span>{info.name} {info.lastName} {info.language === 'español' && info.secondLastName}</span></p>\r\n                    <p>{text.profile.email[language]}: <span>{info.email}</span></p>\r\n                    <p>{text.profile.phone[language]}: <span>{info.phone}</span></p>\r\n                    <p>{text.profile.countryInfo[language]}: <span>{info.country === 'mex' ? text.profile.mex[language] : text.profile.usa[language]}</span></p>\r\n                    <p>{text.profile.stateInfo[language]}: <span>{info.state}</span></p>\r\n                    <p className='profile-form-subtitle2'>{text.profile.workInfo[language]}</p>\r\n                    <p>{text.userData.ssn[language]}: <span>{info.ssn}</span></p>\r\n                    <p>{text.userData.civilStatus[language]}: <span>{info.civilStatus}</span></p>\r\n                    <p>{text.userData.occupation[language]}: <span>{info.occupation}</span></p>\r\n                    <p>{text.userData.company[language]}: <span>{info.company}</span></p>\r\n                    <p>{text.userData.position[language]}: <span>{info.position}</span></p>\r\n                    <p>{text.userData.officePhone[language]}: <span>{info.officePhone}</span></p>\r\n                </div>\r\n            </ConfirmationModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        updateUser: updateUserAction,\r\n        handleStep: handleStepAction,\r\n        toggleModal: handleConfirmationBoxAction,\r\n        sendNotification: sendNotificationAction,\r\n        changeLanguage: changeLangAction\r\n    }\r\n)(Profile)\r\n","import React, { useState } from 'react'\r\nimport ReactImageMagnify from 'react-image-magnify'\r\nimport text from '../../text'\r\n\r\nexport const ChooseHouseMap = ({selectedHouse, language}) => {\r\n    let [showImage, setShowImage] = useState(false)\r\n    return (\r\n        <>\r\n        <div className='house-map-container'>\r\n            <div onClick={() => setShowImage(true)} className=\"left-house-map\">\r\n                <ReactImageMagnify\r\n                {...{\r\n                    smallImage: {\r\n                        alt: 'Map',\r\n                        isFluidWidth: true,\r\n                        src: `/img/chooseHouse/${\r\n                            selectedHouse.villa ?\r\n                                selectedHouse.villa.includes('Crux') || selectedHouse.villa.includes('Aries') ? \r\n                                    'crux-aries'\r\n                                    :\r\n                                    'geminis-taurus'\r\n                            :   \r\n                                'crux-aries'\r\n                        }.jpg`\r\n                    },\r\n                    largeImage: {\r\n                        src: `/img/chooseHouse/${\r\n                            selectedHouse.villa ?\r\n                                selectedHouse.villa.includes('Crux') || selectedHouse.villa.includes('Aries') ? \r\n                                    'crux-aries'\r\n                                    :\r\n                                    'geminis-taurus'\r\n                            :   \r\n                                'crux-aries'\r\n                        }.jpg`,\r\n                        width: 1200,\r\n                        height: 1800\r\n                    },\r\n                    enlargedImageContainerDimensions: {\r\n                        width: '40%',\r\n                        height: '100%'\r\n                    }\r\n                }} \r\n                />\r\n            </div>\r\n            {\r\n                showImage && \r\n                <div className='image-dialog'>\r\n                    <div onClick={() => setShowImage(false)} className=\"close-button\">\r\n                        <p>x</p>\r\n                    </div>\r\n                    <img src={`/img/chooseHouse/${\r\n                                selectedHouse.villa ?\r\n                                    selectedHouse.villa.includes('Crux') || selectedHouse.villa.includes('Aries') ? \r\n                                        'crux-aries'\r\n                                        :\r\n                                        'geminis-taurus'\r\n                                :   \r\n                                    'crux-aries'\r\n                            }.jpg`} alt=\"full-map\"/>\r\n                </div>\r\n            }\r\n            <div className=\"right-house-map\">\r\n                <div className=\"right-house-map--img\">\r\n                    <div style={selectedHouse.villa ? {backgroundImage: `url(/img/chooseHouse/${selectedHouse.villa.toLowerCase()}1.jpg)`} : null} className=\"no-image\"/>\r\n                </div>\r\n                <div>\r\n                    <div className=\"map-color-description\">\r\n                        <div className=\"occupied-box\"/>\r\n                        <p>{text.chooseHouse.forSale[language]}</p>\r\n                    </div>\r\n                    <div className=\"map-color-description\">\r\n                        <div className=\"available-box\"/>\r\n                        <p>{text.chooseHouse.occupied[language]}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Input, message, Select, Spin } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { handleConfirmationBoxAction } from '../../redux/appDuck'\r\nimport { getDataAction, getHousesAction, handleAdditionalHouseAction, handleHouseAction, handleStepAction, sendNotificationAction, updateUserAction } from '../../redux/dataDuck'\r\nimport ConfirmationModal from '../common/ConfirmationModal'\r\nimport text from '../text'\r\nimport { ChooseHouseMap } from './chooseHouseComponents/ChooseHouseMap'\r\n\r\nlet { Option } = Select\r\n\r\nconst ChooseHouse = ({sendNotification, houses, dataUpdated, history, language, fetching, info, getData, handleHouse, updateUser, toggleModal, getHouses, handleStep, handleAddHouse}) => {\r\n\r\n    let [additionalLot, setAdditionalLot] = useState(false)\r\n    let [selectedHouse, setSelectedHouse] = useState({})\r\n    let [selectedAdditional, setSelectedAdditional] = useState({})\r\n\r\n    let handleSubmit = () => {\r\n        if(info.lotId === null || info.lotId === undefined || !info.block) return message.warning(text.messages.missingFields[language])\r\n        if(additionalLot){\r\n            if(info.additionalLotId === null || info.additionalLotId === undefined || !info.additionalBlock) return message.warning(text.messages.missingFields[language])\r\n            toggleModal()\r\n            return\r\n        }\r\n        toggleModal()\r\n    }\r\n\r\n    let confirmAction = async () => {\r\n        await updateUser()\r\n        toggleModal()\r\n        if(info.step === 2){\r\n            sendNotification('chooseHouse')\r\n            if(info.wantFinance){\r\n                await handleStep(3)\r\n                return history.push('/financing')\r\n            }\r\n            await handleStep(4)\r\n        }\r\n        history.push('/buy')\r\n    }\r\n\r\n    let saveData = () => {\r\n        updateUser()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(info.lotId !== null && info.lotId !== undefined && houses.length) setSelectedHouse(houses[info.lotId])\r\n        if(info.additionalLotId !== null && info.additionalLotId !== undefined && houses.length) {\r\n            setAdditionalLot(true)\r\n            setSelectedAdditional(houses[info.additionalLotId])\r\n        }\r\n    }, [info, houses])\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated) return message.success(text.messages.dataUpdated[language])\r\n    }, [dataUpdated])\r\n    \r\n    useEffect(() => {\r\n        getData()\r\n        getHouses()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n            {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/choose.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.chooseHouse[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.chooseHouse[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"multiple-inputs map-inputs\">\r\n                                <Select\r\n                                    style={{width: '350px'}}\r\n                                    className='select-input'\r\n                                    value={info.block}\r\n                                    placeholder={text.chooseHouse.block[language]}\r\n                                    onChange={e => {handleHouse(e); setSelectedHouse({})}}\r\n                                >\r\n                                    {\r\n                                        houses.filter((lot,index,self)=> self.findIndex(l=>(l.block === lot.block)) === index).map(lot => <Option key={lot.lotNumber} value={lot.block}>{text.chooseHouse.block[language]} {lot.block}</Option>)\r\n                                    }\r\n                                </Select>\r\n                                <Select\r\n                                    style={{width: '300px'}}\r\n                                    className='select-input'\r\n                                    value={info.lotId}\r\n                                    placeholder={text.chooseHouse.inputLotNumber[language]}\r\n                                    onChange={e => handleHouse(null, e)}\r\n                                >\r\n                                    {\r\n                                        houses.filter(lot=> lot.block === info.block).map(lot => <Option key={lot.lotId} value={lot.lotId}>{text.chooseHouse.inputLotNumber[language]} {lot.lotNumber}</Option>)\r\n                                    }\r\n                                </Select>\r\n                                <Input style={{width: '320px'}} value={selectedHouse.lotSize} suffix={<small>m<sup>2</sup></small>} name='lotSize' placeholder={text.chooseHouse.inputLotSize[language]}/>\r\n                                <Input style={{width: '320px'}} value={selectedHouse.villa ? `Villa ${selectedHouse.villa}` : null} name='villa' placeholder={text.chooseHouse.inputLotModel[language]}/>\r\n                                {!additionalLot && <Button onClick={() => setAdditionalLot(true)} className='solid-button'>+ {text.chooseHouse.addLot[language]}</Button>}\r\n                            </div>\r\n                            {\r\n                                additionalLot ? \r\n                                    <div className=\"multiple-inputs map-inputs\">\r\n                                        <Select\r\n                                            style={{width: '350px'}}\r\n                                            className='select-input'\r\n                                            value={info.additionalBlock}\r\n                                            placeholder={text.chooseHouse.block[language]}\r\n                                            onChange={e => {handleAddHouse(e); setSelectedAdditional({})}}\r\n                                        >\r\n                                            {\r\n                                                houses.filter((lot,index,self)=> self.findIndex(l=>(l.block === lot.block)) === index).map(lot => <Option key={lot.lotNumber} value={lot.block}>{text.chooseHouse.block[language]} {lot.block}</Option>)\r\n                                            }\r\n                                        </Select>\r\n                                        <Select\r\n                                            style={{width: '300px'}}\r\n                                            className='select-input'\r\n                                            value={info.additionalLotId}\r\n                                            placeholder={text.chooseHouse.inputLotNumber[language]}\r\n                                            onChange={e => handleAddHouse(null, e)}\r\n                                        >\r\n                                            {\r\n                                                houses.filter(lot=> lot.block === info.additionalBlock).map(lot => <Option key={lot.lotId} value={lot.lotId}>{text.chooseHouse.inputLotNumber[language]} {lot.lotNumber}</Option>)\r\n                                            }\r\n                                        </Select>\r\n                                        <Input style={{width: '320px'}} value={selectedAdditional.lotSize} suffix={<small>m<sup>2</sup></small>} name='lotSize' placeholder={text.chooseHouse.inputLotSize[language]}/>\r\n                                        <Input style={{width: '320px'}} value={selectedAdditional.villa ? `Villa ${selectedAdditional.villa}` : null} name='villa' placeholder={text.chooseHouse.inputLotModel[language]}/>\r\n                                        {additionalLot && <Button onClick={() => {setAdditionalLot(false); handleAddHouse('none'); setSelectedAdditional({})}} className='solid-button'>- {text.chooseHouse.addLot[language]}</Button>}\r\n                                    </div>\r\n                                :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                        <ChooseHouseMap language={language} selectedHouse={selectedHouse}/>\r\n                        <div className='multiple-buttons small-buttons'>\r\n                            <Link to='/profile'><Button loading={fetching} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button onClick={saveData} className='nav-button'>{text.button.save[language]}</Button>\r\n                            <Button onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <ConfirmationModal confirmAction={confirmAction}>\r\n                <div className=\"modal-container-confirm\">\r\n                    <p>{text.chooseHouse.block[language]}: <span>{info.block}</span></p>\r\n                    <p>{text.chooseHouse.inputLotNumber[language]}: <span>{selectedHouse.lotNumber}</span></p>\r\n                    <p>{text.chooseHouse.inputLotSize[language]}: <span>{selectedHouse.lotSize}</span> <small>m<sup>2</sup></small></p>\r\n                    <p>{text.chooseHouse.inputLotModel[language]}: <span>{selectedHouse.villa}</span></p>\r\n                    <p>{text.chooseHouse.addLot[language]}: <span>{additionalLot ? '' : 'No'}</span></p>\r\n                    {\r\n                        additionalLot ? \r\n                            <>\r\n                                <p>{text.chooseHouse.block[language]}: <span>{info.additionalBlock}</span></p>\r\n                                <p>{text.chooseHouse.inputLotNumber[language]}: <span>{selectedAdditional.lotNumber}</span></p>\r\n                                <p>{text.chooseHouse.inputLotSize[language]}: <span>{selectedAdditional.lotSize}</span> <small>m<sup>2</sup></small></p>\r\n                            </>\r\n                            :\r\n                            null\r\n                    }\r\n                </div>\r\n            </ConfirmationModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated, houses}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated,\r\n    houses\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleHouse: handleHouseAction,\r\n        handleAddHouse: handleAdditionalHouseAction,\r\n        updateUser: updateUserAction,\r\n        toggleModal: handleConfirmationBoxAction,\r\n        getHouses: getHousesAction,\r\n        handleStep: handleStepAction,\r\n        sendNotification: sendNotificationAction\r\n    }\r\n)(ChooseHouse)\r\n","import React, { useState } from 'react'\r\nimport { Checkbox } from 'antd'\r\nimport ReactImageMagnify from 'react-image-magnify'\r\nimport text from '../../text'\r\nimport { connect } from 'react-redux'\r\nimport { handleHouseApprovalsAction } from '../../../redux/dataDuck'\r\n\r\nconst BuyHouseMap = ({info, language, house, handleInfo}) => {\r\n\r\n    let [selectedImage, setSelectedImage] = useState(house.images[0])\r\n    let [showImage, setShowImage] = useState(false)\r\n\r\n    return (\r\n        <div className='buy-map-container'>\r\n            <div className=\"left-buy-map\">\r\n                <div className=\"description-thumbs\">\r\n                    {\r\n                        house.images.map((imageLink, ix) => \r\n                            <div style={{backgroundImage: `url(${imageLink})`}} key={ix} className={selectedImage === imageLink ? 'thumb-img-active' : 'thumb-img'} onClick={() => setSelectedImage(imageLink)} />\r\n                        )\r\n                    }\r\n                </div>\r\n                <div onClick={() => setShowImage(true)} className=\"description-big-image\">\r\n                    <ReactImageMagnify\r\n                        onClick={() => setShowImage(true)}\r\n                        {...{\r\n                            smallImage: {\r\n                                alt: 'Map',\r\n                                isFluidWidth: true,\r\n                                src: selectedImage\r\n                            },\r\n                            largeImage: {\r\n                                src: selectedImage,\r\n                                width: 1200,\r\n                                height: 1200\r\n                            },\r\n                            enlargedImageContainerDimensions: {\r\n                                width: 400,\r\n                                height: '100%'\r\n                            }\r\n                        }} \r\n                    />\r\n                </div>\r\n                <div className=\"description-attributes\">\r\n                    <div className=\"attributes-title-container\">\r\n                        <div className=\"house-title\">\r\n                            <h2>{house.name}</h2>\r\n                            <p>{text.buyHouse.titlePrice[language]}: {house.price.toLocaleString('en-US', {style: 'currency', currency: 'USD'})}</p>\r\n                        </div>\r\n                        <div className=\"house-availability\">\r\n                            <p>{house.available ? text.buyHouse.available[language] : text.buyHouse.notAvailable[language]}</p>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"house-properties-container\">\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/ruler.svg\" alt=\"ruler\"/>\r\n                            <p>{house.lotSize} {language === 'english' ? 'yd' : 'm'}<sup>2</sup></p>\r\n                        </div>\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/bed.svg\" alt=\"ruler\"/>\r\n                            <p>{house.bedrooms} {text.buyHouse.bedrooms[language]}</p>\r\n                        </div>\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/bathtub.svg\" alt=\"ruler\"/>\r\n                            <p>{house.bathrooms} {text.buyHouse.bathrooms[language]}</p>\r\n                        </div>\r\n                        <div className=\"house-property\">\r\n                            <img src=\"/img/buyHouse/car.svg\" alt=\"ruler\"/>\r\n                            <p>{house.cars} {text.buyHouse.cars[language]}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"house-description\">\r\n                        <p>\r\n                            {house[`${language}Description`]}\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Temporibus quae hic porro perspiciatis vel similique nam consequatur accusamus delectus fugiat recusandae tempore, illum amet numquam fuga vitae reiciendis in. A.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"price\">\r\n                        <p>{text.buyHouse.price[language]}</p>\r\n                        <h2>{house.price.toLocaleString('en-US', {style: 'currency', currency: 'USD'})} USD</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-buy-map\">\r\n                <div className=\"remember-container\">\r\n                    <div className=\"remember-title\">\r\n                        <img src=\"/img/buyHouse/bulb.svg\" alt=\"bulb\"/>\r\n                        <p>{text.buyHouse.remember[language]}</p>\r\n                    </div>\r\n                    <div className=\"remember-description\">\r\n                        <p>{text.buyHouse.docsDescription[language]}</p>\r\n                        <ul>\r\n                            <li>{text.buyHouse.doc1[language]}</li>\r\n                            <li>{text.buyHouse.doc2[language]}</li>\r\n                            <li>{text.buyHouse.doc3[language]}</li>\r\n                            <li>{text.buyHouse.doc4[language]}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"remember-container\">\r\n                    <div className=\"remember-title\">\r\n                        <img src=\"/img/buyHouse/bulb.svg\" alt=\"bulb\"/>\r\n                        <p>{text.buyHouse.approveTitle[language]}</p>\r\n                    </div>\r\n                    <div className=\"remember-description\">\r\n                        <p>{text.buyHouse.approvalDescription[language]}</p>\r\n                    </div>\r\n                    <div className=\"checkbox-input\">\r\n                        <Checkbox\r\n                            onChange={e => handleInfo(e)}\r\n                            checked={info.villaApproved}\r\n                        >\r\n                            {text.buyHouse.firstApproval[language]}\r\n                        </Checkbox>\r\n                    </div>\r\n                    <div className=\"checkbox-input\">\r\n                        <Checkbox\r\n                            onChange={e => handleInfo(null, e)}\r\n                            checked={info.priceApproved}\r\n                        >\r\n                            {text.buyHouse.secondApproval[language]}\r\n                        </Checkbox>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                showImage && \r\n                <div className='image-dialog'>\r\n                    <div onClick={() => setShowImage(false)} className=\"close-button\">\r\n                        <p>x</p>\r\n                    </div>\r\n                    <img src={selectedImage} alt=\"full-map\"/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    data: {info}\r\n}) => ({\r\n    info\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        handleInfo: handleHouseApprovalsAction\r\n    }\r\n)(BuyHouseMap)","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, getHouseDataAction, handleStepAction, sendNotificationAction, updateUserAction } from '../../redux/dataDuck'\r\nimport { Button, Input, message, Spin } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport text from '../text'\r\nimport BuyHouseMap from './buyHouseComponents/BuyHouseMap'\r\nimport ConfirmationModal from '../common/ConfirmationModal'\r\nimport { handleConfirmationBoxAction } from '../../redux/appDuck'\r\n\r\nconst BuyHouse = ({sendNotification, history,info, language, fetchingData, fetchingHouse, house, getHouse, getData, toggleModal, handleStep, updateUser}) => {\r\n\r\n\r\n    let handleSubmit = () => {\r\n        if(!info.villaApproved || !info.priceApproved) return message.warning(text.messages.needApprove[language])\r\n        toggleModal()\r\n    }\r\n\r\n    let confirmAction = async () => {\r\n        await updateUser()\r\n        toggleModal()\r\n        if(info.step === 3 || info.step === 4) {\r\n            sendNotification('buyHouse')\r\n            await handleStep(5)\r\n        }\r\n        history.push('/interior-design')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(info.lotId >= 0) getHouse()\r\n    }, [info.lotId])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n            {\r\n                fetchingData || fetchingHouse ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/buy.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.buyHouse[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.buyHouse[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"multiple-inputs map-inputs\">\r\n                                <Input disabled value={`${text.chooseHouse.inputLotNumber[language]}: ${house.lotNumber}`}/>\r\n                                <Input disabled value={`${text.chooseHouse.inputLotSize[language]}: ${house.lotSize}`} suffix={language === 'english' ? <small>yd<sup>2</sup></small> : <small>m<sup>2</sup></small>}/>\r\n                                <Input disabled value={`${text.chooseHouse.inputLotModel[language]}: ${house.villa}`} />\r\n                            </div>\r\n                        </div>\r\n                        {house.images && <BuyHouseMap language={language} house={house}/>}\r\n                        <div className='multiple-buttons'>\r\n                            <Link to={info.wantFinance ? '/financing' : '/choose'}><Button loading={false} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button onClick={handleSubmit} loading={false} className='nav-button'>{text.button.approve[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <ConfirmationModal confirmAction={confirmAction}>\r\n                <div className=\"modal-container-confirm\">\r\n                    <p>{text.chooseHouse.block[language]}: <span>{info.block}</span></p>\r\n                    <p>{text.chooseHouse.inputLotNumber[language]}: <span>{house.lotNumber}</span></p>\r\n                    <p>{text.chooseHouse.inputLotSize[language]}: <span>{house.lotSize}</span> <small>m<sup>2</sup></small></p>\r\n                    <p>{text.chooseHouse.inputLotModel[language]}: <span>{house.villa}</span></p>\r\n                </div>\r\n            </ConfirmationModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {fetchingData, info, house, fetchingHouse}\r\n}) => ({\r\n    language,\r\n    fetchingData,\r\n    fetchingHouse,\r\n    house,\r\n    info\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        getHouse: getHouseDataAction,\r\n        toggleModal: handleConfirmationBoxAction,\r\n        handleStep: handleStepAction,\r\n        updateUser: updateUserAction,\r\n        sendNotification: sendNotificationAction\r\n    }\r\n)(BuyHouse)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Checkbox, DatePicker, Input, message, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInfoAction, handleStepAction, sendNotificationAction, updateUserAction } from '../../redux/dataDuck'\r\nimport moment from 'moment'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\nimport ConfirmationModal from '../common/ConfirmationModal'\r\nimport { handleConfirmationBoxAction } from '../../redux/appDuck'\r\n\r\nconst UserData = ({sendNotification, history, info, fetching, dataUpdated, language, getData, handleInfo, updateUser, toggleModal, handleStep}) => {\r\n\r\n    let [consent, setConsent] = useState(false)\r\n\r\n    let handleSubmit = () => {\r\n        if(\r\n            !info.ssn ||\r\n            !info.civilStatus ||\r\n            !info.occupation ||\r\n            !info.company ||\r\n            !info.position ||\r\n            !info.officePhone\r\n        ) return message.warning(text.messages.missingFields[language])\r\n        toggleModal()\r\n    }\r\n\r\n    let confirmAction = async () => {\r\n        await updateUser()\r\n        toggleModal()\r\n        if(info.step === 4) {\r\n            sendNotification('finishProfile')\r\n            handleStep(5)\r\n        }\r\n        history.push('/documentation')\r\n    }\r\n\r\n    let handleUpdate = () => {\r\n        if(!consent) return message.error(text.messages.consent[language])\r\n        updateUser()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated) {\r\n            setConsent(false)\r\n            return message.success(text.messages.dataUpdated[language])\r\n        }\r\n    }, [dataUpdated])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/data.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.data[language]}</p>\r\n                            </div>\r\n                        <h2>{info.name}, {text.sidebarSubtitle.data[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">    \r\n                                    <Input onChange={handleInfo} value={info.ssn} name='ssn' placeholder={text.userData.ssn[language]}/>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.civilStatus} name='civilStatus' placeholder={text.userData.civilStatus[language]}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.occupation} name='occupation' placeholder={text.userData.occupation[language]}/>\r\n                                    <p>{text.userData.occupationEx[language]}</p>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.company} name='company' placeholder={text.userData.company[language]}/>\r\n                                    <p>{text.userData.companyEx[language]}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.position} name='position' placeholder={text.userData.position[language]}/>\r\n                                    <p>{text.userData.positionEx[language]}</p>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input onChange={handleInfo} value={info.officePhone} name='officePhone' placeholder={text.userData.officePhone[language]}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"checkbox-input\">\r\n                            <Checkbox\r\n                                checked={consent}\r\n                                onChange={() => setConsent(!consent)}\r\n                            >\r\n                                {text.register.confirm[language]}\r\n                            </Checkbox>\r\n                        </div>\r\n                        <div className=\"multiple-buttons bottom-buttons small-buttons\">\r\n                            <Link to='/buy'><Button className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button onClick={handleUpdate} loading={fetching} className='nav-button'>{text.button.save[language]}</Button>\r\n                            <Button onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <ConfirmationModal confirmAction={confirmAction}>\r\n                <div className=\"modal-container-confirm\">\r\n                    <p>{text.userData.ssn[language]}: <span>{info.ssn}</span></p>\r\n                    <p>{text.userData.civilStatus[language]}: <span>{info.civilStatus}</span></p>\r\n                    <p>{text.userData.occupation[language]}: <span>{info.occupation}</span></p>\r\n                    <p>{text.userData.company[language]}: <span>{info.company}</span></p>\r\n                    <p>{text.userData.position[language]}: <span>{info.position}</span></p>\r\n                    <p>{text.userData.officePhone[language]}: <span>{info.officePhone}</span></p>\r\n                </div>\r\n            </ConfirmationModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        toggleModal: handleConfirmationBoxAction,\r\n        handleStep: handleStepAction,\r\n        updateUser: updateUserAction,\r\n        sendNotification: sendNotificationAction\r\n    }\r\n)(UserData)\r\n","import { addHouse } from \"../services/api\"\r\nimport { Cookies } from 'react-cookie'\r\nimport { getHousesAction } from \"./dataDuck\"\r\n\r\nlet initialData = {\r\n    houseData: {},\r\n    fetching: false,\r\n    error: {},\r\n    houseUploaded: false\r\n}\r\n\r\nlet ADD_HOUSE = 'ADD_HOUSE'\r\nlet ADD_HOUSE_SUCCESS = 'ADD_HOUSE_SUCCESS'\r\nlet ADD_HOUSE_ERROR = 'ADD_HOUSE_ERROR'\r\n\r\nlet HANDLE_DATA = 'HANDLE_DATA'\r\n\r\nlet reducer = (state = initialData, action) => {\r\n    switch(action.type){\r\n        case ADD_HOUSE:\r\n            return {...state, houseUploaded: false, fetching: true, error: {}}\r\n        case ADD_HOUSE_SUCCESS:\r\n            return {...state, fetching: false, houseUploaded: true, houseData: {}}\r\n        case ADD_HOUSE_ERROR:\r\n            return {...state, fetching: false, error: action.payload}\r\n\r\n        case HANDLE_DATA:\r\n            return {...state, houseData: action.payload}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\nexport let addHouseAction = () => (dispatch, getState) => {\r\n    let id = new Cookies().get('id')\r\n    if(!id) return dispatch({\r\n        type: ADD_HOUSE_ERROR,\r\n        payload: {status: 403}\r\n    })\r\n    dispatch({\r\n        type: ADD_HOUSE\r\n    })\r\n    let { houseData } = getState().admin\r\n    addHouse({id, houseData})\r\n        .then(res => dispatch({\r\n            type: ADD_HOUSE_SUCCESS\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: ADD_HOUSE_ERROR,\r\n            payload: err.response\r\n        }))\r\n}\r\n\r\nexport let handleHouseDataAction = (event, images, lotId) => (dispatch, getState) => {\r\n    let { houseData } = getState().admin\r\n    if(!event && !images){\r\n        dispatch({\r\n            type: HANDLE_DATA,\r\n            payload: { ...houseData, lotId}\r\n        })\r\n        return\r\n    }\r\n    if(!event){\r\n        dispatch({\r\n            type: HANDLE_DATA,\r\n            payload: { ...houseData, images}\r\n        })\r\n        return\r\n    }\r\n    dispatch({\r\n        type: HANDLE_DATA,\r\n        payload: { ...houseData, [event.target.name]:event.target.value}\r\n    })\r\n}","import { Button, Input, message } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addHouseAction, handleHouseDataAction } from '../../redux/adminDuck'\r\nimport { getHousesAction } from '../../redux/dataDuck'\r\n\r\nconst AddHouse = ({houses, houseData, fetching, error, getHouses, houseUploaded, addHouse, handleHouseData}) => {\r\n\r\n    let submitHouse = () => {\r\n        if(!houseData.block || !houseData.lotNumber || !houseData.lotSize || !houseData.villa || !houseData.price) return message.error('Missing fields')\r\n        handleHouseData(null, null, houses.length)\r\n        let cruxImages = ['/img/chooseHouse/crux1.jpg', '/img/chooseHouse/crux2.jpg', '/img/chooseHouse/crux3.jpg']\r\n        let ariesImages = ['/img/chooseHouse/aries1.jpg', '/img/chooseHouse/aries2.jpg', '/img/chooseHouse/aries3.jpg']\r\n        let geminisImages = ['/img/chooseHouse/geminis1.jpg', '/img/chooseHouse/geminis2.jpg']\r\n        let taurusImages = ['/img/chooseHouse/taurus1.jpg', '/img/chooseHouse/taurus2.jpg']\r\n        switch(houseData.villa){\r\n            case 'Crux':\r\n                handleHouseData(null, cruxImages)\r\n                return addHouse()\r\n            case 'Aries':\r\n                handleHouseData(null, ariesImages)\r\n                return addHouse()\r\n            case 'Geminis':\r\n                handleHouseData(null, geminisImages)\r\n                return addHouse()\r\n            case 'Taurus':\r\n                handleHouseData(null, taurusImages)\r\n                return addHouse()\r\n            default:\r\n                return message.error('Villas: Crux, Aries, Geminis, Taurus')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(houseUploaded) {\r\n            getHouses()\r\n            return message.success('HOUSE UPLOADED')\r\n        }\r\n    }, [houseUploaded])\r\n\r\n    useEffect(() => {\r\n        getHouses()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n            <div className=\"application-content no-justify admin-container\">\r\n                <h2>ADD A HOUSE</h2>\r\n                <p>House ID</p>\r\n                <Input disabled value={houses.length}/>\r\n                <p>Block</p>\r\n                <Input onChange={handleHouseData} value={houseData.block} name='block'/>\r\n                <p>Lot Number</p>\r\n                <Input onChange={handleHouseData} value={houseData.lotNumber} name='lotNumber'/>\r\n                <p>Lot size</p>\r\n                <Input onChange={handleHouseData} value={houseData.lotSize} name='lotSize'/>\r\n                <p>Villa</p>\r\n                <Input onChange={handleHouseData} value={houseData.villa} name='villa'/>\r\n                <p>Price</p>\r\n                <Input type='number' onChange={handleHouseData} value={houseData.price} name='price'/>\r\n                <p>English Description</p>\r\n                <Input onChange={handleHouseData} value={houseData.englishDescription} name='englishDescription'/>\r\n                <p>Spanish Description</p>\r\n                <Input onChange={handleHouseData} value={houseData.españolDescription} name='españolDescription'/>\r\n                <p>Bathrooms</p>\r\n                <Input onChange={handleHouseData} value={houseData.bathrooms} name='bathrooms'/>\r\n                <p>Bedrooms</p>\r\n                <Input onChange={handleHouseData} value={houseData.berdrooms} name='bedrooms'/>\r\n                <p>Cars</p>\r\n                <Input onChange={handleHouseData} value={houseData.cars} name='cars'/>\r\n                <Button onClick={submitHouse}>Add house</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    admin: {houseData, fetching, error, houseUploaded},\r\n    data: {houses}\r\n}) => ({\r\n    houseData, \r\n    fetching, \r\n    error, \r\n    houseUploaded,\r\n    houses\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        addHouse: addHouseAction,\r\n        handleHouseData: handleHouseDataAction,\r\n        getHouses: getHousesAction\r\n    }\r\n)(AddHouse)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, message, Spin, Upload } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { deleteFileAction, getDataAction, getFileAction, handleDocAction, handleFileAction, handleInfoAction, handleStepAction, sendNotificationAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nlet { Dragger } = Upload\r\n\r\nconst Documentation = ({step, sendNotification, history, files={}, fetching, dataUpdated, language, getData, handleFile, getFile, deleteFile, handleStep}) => {\r\n\r\n    let handleSubmit = async () => {\r\n        if(!files.passport || !files.driversLicence || !files.addressProof) return message.error(text.messages.missingFiles[language])\r\n        if(step === 1) {\r\n            sendNotification('finishProfile')\r\n            await handleStep(2)\r\n        }\r\n        history.push('/choose')\r\n    }\r\n\r\n    let handleUpload = (info, type) => {\r\n        sendNotification(type)\r\n        handleFile(info.file.originFileObj, type)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated) return message.success(text.messages.fileUploaded[language])\r\n    }, [dataUpdated])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/documents.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.documentation[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.documentation[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"documents-box-container\">\r\n                                <div className=\"doc-box\">\r\n                                    <Dragger\r\n                                        accept='image/png, image/jpeg, .pdf'\r\n                                        onChange={info => handleUpload(info, 'passport')}\r\n                                        fileList={[]}\r\n                                        name='passport'\r\n                                    >\r\n                                        <div className='doc-box-elements'>\r\n                                            <p className='doc-box-title'>{text.documentation.firstDoc.title[language]}</p>\r\n                                            <img src={`/img/documentation/upload${files.passport ? 'ed' : ''}.png`} alt=\"upload\"/>\r\n                                            <p className='doc-box-instructions'>{text.documentation.firstDoc.inst[language]}</p>\r\n                                            <p className='doc-box-mb'>{text.documentation.mbText[language]}</p>\r\n                                            <Button className='upload-button'> <img src='/img/documentation/folder.svg' alt='folder'/> {text.documentation.blowseButon[language]}</Button>\r\n                                        </div>\r\n                                    </Dragger>\r\n                                </div>\r\n                                <div className=\"doc-box\">\r\n                                    <Dragger\r\n                                        accept='image/png, image/jpeg, .pdf'\r\n                                        onChange={info => handleUpload(info, 'driversLicence')}\r\n                                        fileList={[]}\r\n                                        name='driversLicence'\r\n                                    >\r\n                                        <div className='doc-box-elements'>\r\n                                            <p className='doc-box-title'>{text.documentation.secondDoc.title[language]}</p>\r\n                                            <img src={`/img/documentation/upload${files.driversLicence ? 'ed' : ''}.png`} alt=\"upload\"/>\r\n                                            <p className='doc-box-instructions'>{text.documentation.secondDoc.inst[language]}</p>\r\n                                            <p className='doc-box-mb'>{text.documentation.mbText[language]}</p>\r\n                                            <Button className='upload-button'> <img src='/img/documentation/folder.svg' alt='folder'/> {text.documentation.blowseButon[language]}</Button>\r\n                                        </div>\r\n                                    </Dragger>\r\n                                </div>\r\n                                <div className=\"doc-box\">\r\n                                    <Dragger\r\n                                        accept='image/png, image/jpeg, .pdf'\r\n                                        onChange={info => handleUpload(info, 'addressProof')}\r\n                                        fileList={[]}\r\n                                        name='addressProof'\r\n                                    >\r\n                                        <div className='doc-box-elements'>\r\n                                            <p className='doc-box-title'>{text.documentation.thirdDoc.title[language]}</p>\r\n                                            <img src={`/img/documentation/upload${files.addressProof ? 'ed' : ''}.png`} alt=\"upload\"/>\r\n                                            <p className='doc-box-instructions'>{text.documentation.thirdDoc.inst[language]}</p>\r\n                                            <p className='doc-box-mb'>{text.documentation.mbText[language]}</p>\r\n                                            <Button className='upload-button'> <img src='/img/documentation/folder.svg' alt='folder'/> {text.documentation.blowseButon[language]}</Button>\r\n                                        </div>\r\n                                    </Dragger>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ul className='docs-list-ul'>\r\n                            {files.passport && <li>{text.documentation.firstDoc.title[language]}: <strong>{files.passport}</strong> <img onClick={() => deleteFile(files.passport)} src='/img/files/delete.svg' alt='delete'/></li>}\r\n                            {files.driversLicence && <li>{text.documentation.secondDoc.title[language]}: <strong>{files.driversLicence}</strong> <img onClick={() => deleteFile(files.driversLicence)} src='/img/files/delete.svg' alt='delete'/></li>}\r\n                            {files.addressProof && <li>{text.documentation.thirdDoc.title[language]}: <strong>{files.addressProof}</strong> <img onClick={() => deleteFile(files.addressProof)} src='/img/files/delete.svg' alt='delete'/></li>}\r\n                        </ul>\r\n                        <div className=\"bottom-buttons multiple-buttons\">\r\n                            <Link to='/profile'><Button className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info: {files, step}, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    files,\r\n    dataUpdated,\r\n    step\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        updateUser: updateUserAction,\r\n        handleFile: handleDocAction,\r\n        getFile: getFileAction,\r\n        deleteFile: deleteFileAction,\r\n        handleStep: handleStepAction,\r\n        sendNotification: sendNotificationAction\r\n    }\r\n)(Documentation)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Finance = ({info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n\r\n    let [type, setType] = useState('')\r\n\r\n    let handleSubmit = typeInput => {\r\n        updateUser({economicProfile: typeInput})\r\n        setType(typeInput)\r\n    }\r\n\r\n    useEffect(() => {\r\n            if(!fetching && info.economicProfile) return history.push(`/financing/${info.economicProfile}`)\r\n    }, [info])\r\n\r\n    useEffect(() => {\r\n            if(dataUpdated && type) history.push(`/financing/${type}`)\r\n    }, [dataUpdated])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/finance.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.financing[language]}</p>\r\n                            </div>\r\n                        <h2>{text.sidebarSubtitle.financing[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <p onClick={() => handleSubmit('nat-salaried')} className='economic-profile-selector'>{text.financing.nationalSalaried[language]}</p>\r\n                            <p onClick={() => handleSubmit('nat-independent')} className='economic-profile-selector'>{text.financing.nationalIndependent[language]}</p>\r\n                            <p onClick={() => handleSubmit('ame-salaried')} className='economic-profile-selector'>{text.financing.northAmericanSalaried[language]}</p>\r\n                            <p onClick={() => handleSubmit('ame-independent')} className='economic-profile-selector'>{text.financing.northAmericanIndependent[language]}</p>\r\n                            <p onClick={() => handleSubmit('company')} className='economic-profile-selector'>{text.financing.company[language]}</p>\r\n                        </div>\r\n                        <div className=\"multiple-buttons\">\r\n                            <Link to='/choose'><Button className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(Finance)\r\n","import Modal from 'antd/lib/modal/Modal'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getUserDocsAction } from '../../../redux/dataDuck'\r\nimport { Tree } from 'antd'\r\nimport text from '../../text'\r\n\r\nlet { DirectoryTree } = Tree\r\n\r\nlet treeData = [\r\n    {\r\n        title: 'Documents',\r\n        key: '0',\r\n        children: [\r\n            {\r\n                title: 'Document 1',\r\n                key: '0-0',\r\n                isLeaf: true,\r\n            },\r\n            {\r\n                title: 'Document 2',\r\n                key: '0-1',\r\n                isLeaf: true,\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nconst DocHandler = ({visible, setVisible, fetchingDocs, language, docs, getDocs}) => {\r\n    return (\r\n        <Modal\r\n          visible={visible}\r\n          onCancel={() => setVisible(false)}\r\n        >\r\n            <div className=\"directory-container\">\r\n                <DirectoryTree\r\n                    multiple\r\n                    defaultExpandAll\r\n                    treeData={treeData}\r\n                />\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {fetchingDocs, docs, dataUpdated}\r\n}) => ({\r\n    language,\r\n    docs,\r\n    dataUpdated,\r\n    fetchingDocs\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getDocs: getUserDocsAction,\r\n    }\r\n)(DocHandler)\r\n","import Modal from 'antd/lib/modal/Modal'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleConfirmationBoxAction } from '../../redux/appDuck'\r\nimport text from '../text'\r\n\r\nconst PreviewModal = ({language, visible, children, setVisible}) => {\r\n    return (\r\n        <Modal\r\n            title={text.modal.confirmText[language]}\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okText={text.modal.okButton[language]}\r\n            onOk={() => setVisible(false)}\r\n            className='preview-modal'\r\n        >\r\n            {children}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language}\r\n}) => ({\r\n    language\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        toggleBox: handleConfirmationBoxAction\r\n    }\r\n)(PreviewModal)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Input, message, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInfoAction, updateUserAction, handleFileAction, getFileAction, deleteFileAction, handleFinantialDataAction, sendNotificationAction, handleStepAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\nimport { Link } from 'react-router-dom'\r\nimport DocHandler from '../docHandler/DocHandler'\r\nimport PreviewModal from '../../common/PreviewModal'\r\nimport ConfirmationModal from '../../common/ConfirmationModal'\r\nimport { handleConfirmationBoxAction } from '../../../redux/appDuck'\r\n\r\nconst FinanctialProfilesData = ({notificationSent, getFile, match, history, info, fetching, dataUpdated, language, getData, handleInfo, updateUser, handleFile, deleteFile, handleFinancialInfo, toggleModal, sendNotification, handleStep}) => {\r\n\r\n    let { creditRequest } = info\r\n\r\n    let [loading, setLoading] = useState(false)\r\n    let [visibleDocs, setVisibleDocs] = useState(false)\r\n    let [visible, setVisible] = useState(false)\r\n    let [numDocs, setNumDocs] = useState(0)\r\n    // params.profile\r\n    let { params } = match\r\n\r\n    let saveData = () => {\r\n        updateUser()\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(\r\n            !creditRequest.officePhone ||\r\n            !creditRequest.homePhone ||\r\n            !creditRequest.rfc ||\r\n            !creditRequest.cellPhone ||\r\n            !creditRequest.livingTime ||\r\n            !creditRequest.occupation ||\r\n            !creditRequest.address ||\r\n            !creditRequest.companyName ||\r\n            !creditRequest.companyField ||\r\n            !creditRequest.companyAddress ||\r\n            !creditRequest.companyTime ||\r\n            !creditRequest.functionsDescription ||\r\n            !creditRequest.companyRole ||\r\n            !creditRequest.academicLevel ||\r\n            !creditRequest.economicDependants ||\r\n            !creditRequest.height ||\r\n            !creditRequest.weight ||\r\n            !creditRequest.ssn ||\r\n            !creditRequest.carBrand ||\r\n            !creditRequest.carValue ||\r\n            !creditRequest.realStateNumber ||\r\n            !creditRequest.realStateValue ||\r\n            !creditRequest.contact1Name ||\r\n            !creditRequest.contact1Address ||\r\n            !creditRequest.contact1Phone ||\r\n            !creditRequest.contact2Name ||\r\n            !creditRequest.contact2Address ||\r\n            !creditRequest.contact2Phone ||\r\n            !creditRequest.contact3Name ||\r\n            !creditRequest.contact3Address ||\r\n            !creditRequest.contact3Phone\r\n        ) return message.error(text.messages.missingFields[language])\r\n        if(Object.keys(info.files).filter(\r\n            key => info.files[key] !== false && key !== 'passport' && key !== 'driversLicence' && key !== 'addressProof'\r\n        ).length < numDocs) return message.error(text.messages.missingFiles[language])\r\n        toggleModal()\r\n    }\r\n\r\n    let confirmAction = () => {\r\n        toggleModal()\r\n        sendNotification('financeForm')\r\n    }\r\n\r\n    let changeProfile = () => {\r\n        updateUser({economicProfile: null})\r\n        setLoading(true)\r\n    }\r\n\r\n    let downloadFile = name => {\r\n        getFile(name)\r\n    }\r\n\r\n    let checkDocs = () => {\r\n        switch(params.profile){\r\n            case 'nat-salaried':\r\n                return setNumDocs(text.financing.nationalSalariedDocs.length)\r\n            case 'nat-independent':\r\n                return setNumDocs(text.financing.nationalIndependentDocs.length)\r\n            case 'ame-salaried':\r\n                return setNumDocs(text.financing.americanSalariedDocs.length)\r\n            case 'ame-independent':\r\n                return setNumDocs(text.financing.americanIndependentDocs.length)\r\n            case 'company':\r\n                return setNumDocs(text.financing.companyDocs.length)\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if( !fetching && info.economicProfile === null) return history.push(`/financing`)\r\n    }, [info])\r\n\r\n    useEffect(() => {\r\n        if(notificationSent) return message.success(text.financingForm.notification[language])\r\n        if(dataUpdated) return message.success(text.messages.dataUpdated[language])\r\n        if(dataUpdated && loading) return history.push('/financing')\r\n    }, [dataUpdated, notificationSent])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        checkDocs()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/finance.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.financing[language]}</p>\r\n                            </div>\r\n                        <h2>{text.financing.putDataTitle[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <p className='finance-form-subtitle1'>{text.financingForm.fillInputs[language]}</p>\r\n                            <p className='finance-form-subtitle2'>{text.financingForm.primaryApplicant[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input maxLength='15' onChange={handleFinancialInfo} value={creditRequest.officePhone} name='officePhone' placeholder={text.financingForm.officePhone[language]}/>\r\n                                <Input maxLength='15' onChange={handleFinancialInfo} value={creditRequest.homePhone} name='homePhone' placeholder={text.financingForm.homePhone[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.rfc} name='rfc' placeholder={text.financingForm.rfc[language]}/>\r\n                                <Input maxLength='15' onChange={handleFinancialInfo} value={creditRequest.cellPhone} name='cellPhone' placeholder={text.financingForm.cellPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.email} name='email' placeholder={text.financingForm.email[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.livingTime} name='livingTime' placeholder={text.financingForm.livingTime[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.occupation} name='occupation' placeholder={text.financingForm.occupation[language]}/>\r\n                            </div>\r\n                            <p className='finance-form-subtitle2'>{text.financingForm.livesInHouse[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input.TextArea rows='2' onChange={handleFinancialInfo} value={creditRequest.address} name='address' placeholder={text.financingForm.address[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.companyName} name='companyName' placeholder={text.financingForm.companyName[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.companyField} name='companyField' placeholder={text.financingForm.companyField[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.companyAddress} name='companyAddress' placeholder={text.financingForm.companyAddress[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.companyTime} name='companyTime' placeholder={text.financingForm.companyTime[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.functionsDescription} name='functionsDescription' placeholder={text.financingForm.functionsDescription[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.companyRole} name='companyRole' placeholder={text.financingForm.companyRole[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.academicLevel} name='academicLevel' placeholder={text.financingForm.academicLevel[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.economicDependants} name='economicDependants' placeholder={text.financingForm.economicDependants[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.height} name='height' placeholder={text.financingForm.height[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.weight} name='weight' placeholder={text.financingForm.weight[language]}/>\r\n                                <Input maxLength='9' onChange={handleFinancialInfo} value={creditRequest.ssn} name='ssn' placeholder={text.financingForm.ssn[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.carBrand} name='carBrand' placeholder={text.financingForm.carBrand[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.carValue} name='carValue' placeholder={text.financingForm.carValue[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.realStateNumber} name='realStateNumber' placeholder={text.financingForm.realStateNumber[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.realStateValue} name='realStateValue' placeholder={text.financingForm.realStateValue[language]}/>\r\n                            </div>\r\n                            <p className='finance-form-subtitle1'>{text.financingForm.referenceTitle[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.contact1Name} name='contact1Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.contact1Address} name='contact1Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' onChange={handleFinancialInfo} value={creditRequest.contact1Phone} name='contact1Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.contact2Name} name='contact2Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.contact2Address} name='contact2Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' onChange={handleFinancialInfo} value={creditRequest.contact2Phone} name='contact2Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.contact3Name} name='contact3Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.contact3Address} name='contact3Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' onChange={handleFinancialInfo} value={creditRequest.contact3Phone} name='contact3Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.contact4Name} name='contact4Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleFinancialInfo} value={creditRequest.contact4Address} name='contact4Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' onChange={handleFinancialInfo} value={creditRequest.contact4Phone} name='contact4Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                          <p className=\"finance-docs-title\">{\r\n                            params.profile === 'nat-salaried' ? \r\n                                text.financing.nationalSalaried[language]\r\n                            : params.profile === 'nat-independent' ? \r\n                                text.financing.nationalIndependent[language]\r\n                            : params.profile === 'ame-salaried' ? \r\n                                text.financing.northAmericanSalaried[language]\r\n                            : params.profile === 'ame-independent' ? \r\n                                text.financing.northAmericanIndependent[language]\r\n                            : params.profile === 'foreign' ? \r\n                                text.financing.foreign[language]\r\n                            : params.profile === 'company' ? \r\n                                text.financing.company[language]\r\n                            :\r\n                                null\r\n                          }</p>\r\n                          <ol className='finance-docs-list'>\r\n                            {\r\n                                params.profile === 'nat-salaried' ? \r\n                                    text.financing.nationalSalariedDocs.map((doc, ix) => \r\n                                        <li key={ix}>\r\n                                            {doc[language]} {\r\n                                                info.files && info.files[doc['id']] ?\r\n                                                    <p>{info.files[doc['id']]} <img onClick={() => downloadFile(info.files[doc['id']])} src=\"/img/files/open.svg\" alt=\"Open\"/> <img onClick={() => deleteFile(info.files[doc['id']])} src=\"/img/files/delete.svg\" alt=\"Delete\"/></p>\r\n                                                :\r\n                                                    <input onChange={handleFile} name={doc['id']} type=\"file\" accept='application/pdf, image/*'/>\r\n                                            }\r\n                                        </li>\r\n                                    )\r\n                                : params.profile === 'nat-independent' ? \r\n                                    text.financing.nationalIndependentDocs.map((doc, ix) => \r\n                                        <li key={ix}>\r\n                                            {doc[language]} {\r\n                                                info.files && info.files[doc['id']] ?\r\n                                                    <p>{info.files[doc['id']]} <img onClick={() => downloadFile(info.files[doc['id']])} src=\"/img/files/open.svg\" alt=\"Open\"/> <img onClick={() => deleteFile(info.files[doc['id']])} src=\"/img/files/delete.svg\" alt=\"Delete\"/></p>\r\n                                                :\r\n                                                    <input onChange={handleFile} name={doc['id']} type=\"file\" accept='application/pdf, image/*'/>\r\n                                            }\r\n                                        </li>\r\n                                    )\r\n                                : params.profile === 'ame-salaried' ? \r\n                                    text.financing.americanSalariedDocs.map((doc, ix) => \r\n                                        <li key={ix}>\r\n                                            {doc[language]} {\r\n                                                info.files && info.files[doc['id']] ?\r\n                                                    <p>{info.files[doc['id']]} <img onClick={() => downloadFile(info.files[doc['id']])} src=\"/img/files/open.svg\" alt=\"Open\"/> <img onClick={() => deleteFile(info.files[doc['id']])} src=\"/img/files/delete.svg\" alt=\"Delete\"/></p>\r\n                                                :\r\n                                                    <input onChange={handleFile} name={doc['id']} type=\"file\" accept='application/pdf, image/*'/>\r\n                                            }\r\n                                        </li>\r\n                                    )\r\n                                : params.profile === 'ame-independent' ? \r\n                                    text.financing.americanIndependentDocs.map((doc, ix) => \r\n                                        <li key={ix}>\r\n                                            {doc[language]} {\r\n                                                info.files && info.files[doc['id']] ?\r\n                                                    <p>{info.files[doc['id']]} <img onClick={() => downloadFile(info.files[doc['id']])} src=\"/img/files/open.svg\" alt=\"Open\"/> <img onClick={() => deleteFile(info.files[doc['id']])} src=\"/img/files/delete.svg\" alt=\"Delete\"/></p>\r\n                                                :\r\n                                                    <input onChange={handleFile} name={doc['id']} type=\"file\" accept='application/pdf, image/*'/>\r\n                                            }\r\n                                        </li>\r\n                                    )\r\n                                : params.profile === 'company' ? \r\n                                    text.financing.companyDocs.map((doc, ix) => \r\n                                        <li key={ix}>\r\n                                            {doc[language]} {\r\n                                                info.files && info.files[doc['id']] ?\r\n                                                    <p>{info.files[doc['id']]} <img onClick={() => downloadFile(info.files[doc['id']])} src=\"/img/files/open.svg\" alt=\"Open\"/> <img onClick={() => deleteFile(info.files[doc['id']])} src=\"/img/files/delete.svg\" alt=\"Delete\"/></p>\r\n                                                :\r\n                                                    <input onChange={handleFile} name={doc['id']} type=\"file\" accept='application/pdf, image/*'/>\r\n                                            }\r\n                                        </li>\r\n                                    )\r\n                                :\r\n                                    null\r\n                            }\r\n                          </ol>\r\n                        </div>\r\n                        {info.agentNotified && <small>{text.financingForm.agent[language]}</small>}\r\n                        <div className=\"multiple-buttons small-buttons\">\r\n                            <Button onClick={changeProfile} className='nav-button'>{text.button.returnCaps[language]}</Button>\r\n                            <Button onClick={saveData} className='nav-button'>{text.button.save[language]}</Button>\r\n                            <Button onClick={() => setVisible(true)} className='nav-button'>{text.button.preview[language]}</Button>\r\n                            <Button disabled={info.agentNotified} onClick={handleSubmit} loading={fetching} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                        <DocHandler setVisible={setVisibleDocs} visible={visibleDocs} />\r\n                    </div>\r\n            }\r\n            <div className='preview-modal'>\r\n                <PreviewModal visible={visible} setVisible={setVisible}>\r\n                    <div className=\"modal-container-confirm\">\r\n                        <p>{text.financingForm.officePhone[language]}: <span>{creditRequest.officePhone}</span></p>\r\n                        <p>{text.financingForm.homePhone[language]}: <span>{creditRequest.homePhone}</span></p>\r\n                        <p>{text.financingForm.rfc[language]}: <span>{creditRequest.rfc}</span></p>\r\n                        <p>{text.financingForm.cellPhone[language]}: <span>{creditRequest.cellPhone}</span></p>\r\n                        <p>{text.financingForm.livingTime[language]}: <span>{creditRequest.livingTime}</span></p>\r\n                        <p>{text.financingForm.occupation[language]}: <span>{creditRequest.occupation}</span></p>\r\n                        <p>{text.financingForm.address[language]}: <span>{creditRequest.address}</span></p>\r\n                        <p>{text.financingForm.companyName[language]}: <span>{creditRequest.companyName}</span></p>\r\n                        <p>{text.financingForm.companyField[language]}: <span>{creditRequest.companyField}</span></p>\r\n                        <p>{text.financingForm.companyAddress[language]}: <span>{creditRequest.companyAddress}</span></p>\r\n                        <p>{text.financingForm.companyTime[language]}: <span>{creditRequest.companyTime}</span></p>\r\n                        <p>{text.financingForm.functionsDescription[language]}: <span>{creditRequest.functionsDescription}</span></p>\r\n                        <p>{text.financingForm.companyRole[language]}: <span>{creditRequest.companyRole}</span></p>\r\n                        <p>{text.financingForm.academicLevel[language]}: <span>{creditRequest.academicLevel}</span></p>\r\n                        <p>{text.financingForm.economicDependants[language]}: <span>{creditRequest.economicDependants}</span></p>\r\n                        <p>{text.financingForm.height[language]}: <span>{creditRequest.height}</span></p>\r\n                        <p>{text.financingForm.weight[language]}: <span>{creditRequest.weight}</span></p>\r\n                        <p>{text.financingForm.ssn[language]}: <span>{creditRequest.ssn}</span></p>\r\n                        <p>{text.financingForm.carBrand[language]}: <span>{creditRequest.carBrand}</span></p>\r\n                        <p>{text.financingForm.carValue[language]}: <span>{creditRequest.carValue}</span></p>\r\n                        <p>{text.financingForm.realStateNumber[language]}: <span>{creditRequest.realStateNumber}</span></p>\r\n                        <p>{text.financingForm.realStateValue[language]}: <span>{creditRequest.realStateValue}</span></p>\r\n                        <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact1Name}</span></p>\r\n                        <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact1Address}</span></p>\r\n                        <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact1Phone}</span></p>\r\n                        <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact2Name}</span></p>\r\n                        <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact2Address}</span></p>\r\n                        <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact2Phone}</span></p>\r\n                        <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact3Name}</span></p>\r\n                        <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact3Address}</span></p>\r\n                        <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact3Phone}</span></p>\r\n                    </div>\r\n                </PreviewModal>\r\n            </div>\r\n            <ConfirmationModal confirmAction={confirmAction}>\r\n                <div className=\"modal-container-confirm\">\r\n                    <p>{text.financingForm.officePhone[language]}: <span>{creditRequest.officePhone}</span></p>\r\n                    <p>{text.financingForm.homePhone[language]}: <span>{creditRequest.homePhone}</span></p>\r\n                    <p>{text.financingForm.rfc[language]}: <span>{creditRequest.rfc}</span></p>\r\n                    <p>{text.financingForm.cellPhone[language]}: <span>{creditRequest.cellPhone}</span></p>\r\n                    <p>{text.financingForm.livingTime[language]}: <span>{creditRequest.livingTime}</span></p>\r\n                    <p>{text.financingForm.occupation[language]}: <span>{creditRequest.occupation}</span></p>\r\n                    <p>{text.financingForm.address[language]}: <span>{creditRequest.address}</span></p>\r\n                    <p>{text.financingForm.companyName[language]}: <span>{creditRequest.companyName}</span></p>\r\n                    <p>{text.financingForm.companyField[language]}: <span>{creditRequest.companyField}</span></p>\r\n                    <p>{text.financingForm.companyAddress[language]}: <span>{creditRequest.companyAddress}</span></p>\r\n                    <p>{text.financingForm.companyTime[language]}: <span>{creditRequest.companyTime}</span></p>\r\n                    <p>{text.financingForm.functionsDescription[language]}: <span>{creditRequest.functionsDescription}</span></p>\r\n                    <p>{text.financingForm.companyRole[language]}: <span>{creditRequest.companyRole}</span></p>\r\n                    <p>{text.financingForm.academicLevel[language]}: <span>{creditRequest.academicLevel}</span></p>\r\n                    <p>{text.financingForm.economicDependants[language]}: <span>{creditRequest.economicDependants}</span></p>\r\n                    <p>{text.financingForm.height[language]}: <span>{creditRequest.height}</span></p>\r\n                    <p>{text.financingForm.weight[language]}: <span>{creditRequest.weight}</span></p>\r\n                    <p>{text.financingForm.ssn[language]}: <span>{creditRequest.ssn}</span></p>\r\n                    <p>{text.financingForm.carBrand[language]}: <span>{creditRequest.carBrand}</span></p>\r\n                    <p>{text.financingForm.carValue[language]}: <span>{creditRequest.carValue}</span></p>\r\n                    <p>{text.financingForm.realStateNumber[language]}: <span>{creditRequest.realStateNumber}</span></p>\r\n                    <p>{text.financingForm.realStateValue[language]}: <span>{creditRequest.realStateValue}</span></p>\r\n                    <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact1Name}</span></p>\r\n                    <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact1Address}</span></p>\r\n                    <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact1Phone}</span></p>\r\n                    <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact2Name}</span></p>\r\n                    <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact2Address}</span></p>\r\n                    <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact2Phone}</span></p>\r\n                    <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact3Name}</span></p>\r\n                    <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact3Address}</span></p>\r\n                    <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact3Phone}</span></p>\r\n                </div>\r\n            </ConfirmationModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated, notificationSent}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated,\r\n    notificationSent\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        handleInfo: handleInfoAction,\r\n        updateUser: updateUserAction,\r\n        handleFile: handleFileAction,\r\n        getFile: getFileAction,\r\n        deleteFile: deleteFileAction,\r\n        handleFinancialInfo: handleFinantialDataAction,\r\n        toggleModal: handleConfirmationBoxAction,\r\n        sendNotification: sendNotificationAction,\r\n        handleStep: handleStepAction\r\n    }\r\n)(FinanctialProfilesData)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Input, message, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleFinantialDataAction, handleStepAction, sendNotificationAction, updateUserAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\nimport { Link } from 'react-router-dom'\r\nimport ConfirmationModal from '../../common/ConfirmationModal'\r\nimport { handleConfirmationBoxAction } from '../../../redux/appDuck'\r\nimport PreviewModal from '../../common/PreviewModal'\r\n\r\nconst FinancialForm = ({creditRequest = {}, dataUpdated, notificationSent, fetching, language, getData, updateUser, handleInfo, handleStep, toggleModal, sendNotification}) => {\r\n\r\n    let [visible, setVisible] = useState(false)\r\n\r\n    let saveData = () => {\r\n        updateUser()\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(\r\n            !creditRequest.officePhone ||\r\n            !creditRequest.homePhone ||\r\n            !creditRequest.rfc ||\r\n            !creditRequest.cellPhone ||\r\n            !creditRequest.livingTime ||\r\n            !creditRequest.occupation ||\r\n            !creditRequest.address ||\r\n            !creditRequest.companyName ||\r\n            !creditRequest.companyField ||\r\n            !creditRequest.companyAddress ||\r\n            !creditRequest.companyTime ||\r\n            !creditRequest.functionsDescription ||\r\n            !creditRequest.companyRole ||\r\n            !creditRequest.academicLevel ||\r\n            !creditRequest.economicDependants ||\r\n            !creditRequest.height ||\r\n            !creditRequest.weight ||\r\n            !creditRequest.ssn ||\r\n            !creditRequest.carBrand ||\r\n            !creditRequest.carValue ||\r\n            !creditRequest.realStateNumber ||\r\n            !creditRequest.realStateValue ||\r\n            !creditRequest.contact1Name ||\r\n            !creditRequest.contact1Address ||\r\n            !creditRequest.contact1Phone ||\r\n            !creditRequest.contact2Name ||\r\n            !creditRequest.contact2Address ||\r\n            !creditRequest.contact2Phone ||\r\n            !creditRequest.contact3Name ||\r\n            !creditRequest.contact3Address ||\r\n            !creditRequest.contact3Phone\r\n        ) return message.error(text.messages.missingFields[language])\r\n        toggleModal()\r\n    }\r\n\r\n    let confirmAction = () => {\r\n        toggleModal()\r\n        sendNotification('financeForm')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(notificationSent) return message.success(text.financingForm.notification[language])\r\n    }, [notificationSent])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated) return message.success(text.messages.dataUpdated[language])\r\n    }, [dataUpdated])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/finance.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.financing[language]}</p>\r\n                            </div>\r\n                            <h2 className='small-title'>{text.financingForm.title[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <p className='finance-form-subtitle1'>{text.financingForm.fillInputs[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input maxLength='15' onChange={handleInfo} value={creditRequest.officePhone} name='officePhone' placeholder={text.financingForm.officePhone[language]}/>\r\n                                <Input maxLength='15' onChange={handleInfo} value={creditRequest.homePhone} name='homePhone' placeholder={text.financingForm.homePhone[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.rfc} name='rfc' placeholder={text.financingForm.rfc[language]}/>\r\n                                <Input maxLength='15' onChange={handleInfo} value={creditRequest.cellPhone} name='cellPhone' placeholder={text.financingForm.cellPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.email} name='email' placeholder={text.financingForm.email[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.livingTime} name='livingTime' placeholder={text.financingForm.livingTime[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.occupation} name='occupation' placeholder={text.financingForm.occupation[language]}/>\r\n                            </div>\r\n                            <p className='finance-form-subtitle2'>{text.financingForm.livesInHouse[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.address} name='address' placeholder={text.financingForm.address[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.companyName} name='companyName' placeholder={text.financingForm.companyName[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.companyField} name='companyField' placeholder={text.financingForm.companyField[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.companyAddress} name='companyAddress' placeholder={text.financingForm.companyAddress[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.companyTime} name='companyTime' placeholder={text.financingForm.companyTime[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.functionsDescription} name='functionsDescription' placeholder={text.financingForm.functionsDescription[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.companyRole} name='companyRole' placeholder={text.financingForm.companyRole[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.academicLevel} name='academicLevel' placeholder={text.financingForm.academicLevel[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.economicDependants} name='economicDependants' placeholder={text.financingForm.economicDependants[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.height} name='height' placeholder={text.financingForm.height[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.weight} name='weight' placeholder={text.financingForm.weight[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.ssn} name='ssn' placeholder={text.financingForm.ssn[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.carBrand} name='carBrand' placeholder={text.financingForm.carBrand[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.carValue} name='carValue' placeholder={text.financingForm.carValue[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.realStateNumber} name='realStateNumber' placeholder={text.financingForm.realStateNumber[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.realStateValue} name='realStateValue' placeholder={text.financingForm.realStateValue[language]}/>\r\n                            </div>\r\n                            <p className='finance-form-subtitle1'>{text.financingForm.referenceTitle[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.contact1Name} name='contact1Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.contact1Address} name='contact1Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' onChange={handleInfo} value={creditRequest.contact1Phone} name='contact1Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.contact2Name} name='contact2Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.contact2Address} name='contact2Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' onChange={handleInfo} value={creditRequest.contact2Phone} name='contact2Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.contact3Name} name='contact3Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.contact3Address} name='contact3Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' onChange={handleInfo} value={creditRequest.contact3Phone} name='contact3Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input onChange={handleInfo} value={creditRequest.contact4Name} name='contact4Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input onChange={handleInfo} value={creditRequest.contact4Address} name='contact4Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' onChange={handleInfo} value={creditRequest.contact4Phone} name='contact4Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"multiple-buttons small-buttons\">\r\n                            <Button onClick={saveData} className='nav-button'>{text.button.save[language]}</Button>\r\n                            <Button onClick={() => setVisible(true)} className='nav-button'>{text.button.preview[language]}</Button>\r\n                            <Button onClick={handleSubmit} className='nav-button'>{text.button.print[language]}</Button>\r\n                        </div>\r\n                        {notificationSent && <small className='small-info'>{text.financingForm.notification[language]}</small>}\r\n                        <small className='small-info'>{text.financingForm.agent[language]}</small>\r\n                    </div>\r\n            }\r\n            <div className='preview-modal'>\r\n                <PreviewModal visible={visible} setVisible={setVisible}>\r\n                    <div className=\"modal-container-confirm\">\r\n                        <p>{text.financingForm.officePhone[language]}: <span>{creditRequest.officePhone}</span></p>\r\n                        <p>{text.financingForm.homePhone[language]}: <span>{creditRequest.homePhone}</span></p>\r\n                        <p>{text.financingForm.rfc[language]}: <span>{creditRequest.rfc}</span></p>\r\n                        <p>{text.financingForm.cellPhone[language]}: <span>{creditRequest.cellPhone}</span></p>\r\n                        <p>{text.financingForm.livingTime[language]}: <span>{creditRequest.livingTime}</span></p>\r\n                        <p>{text.financingForm.occupation[language]}: <span>{creditRequest.occupation}</span></p>\r\n                        <p>{text.financingForm.address[language]}: <span>{creditRequest.address}</span></p>\r\n                        <p>{text.financingForm.companyName[language]}: <span>{creditRequest.companyName}</span></p>\r\n                        <p>{text.financingForm.companyField[language]}: <span>{creditRequest.companyField}</span></p>\r\n                        <p>{text.financingForm.companyAddress[language]}: <span>{creditRequest.companyAddress}</span></p>\r\n                        <p>{text.financingForm.companyTime[language]}: <span>{creditRequest.companyTime}</span></p>\r\n                        <p>{text.financingForm.functionsDescription[language]}: <span>{creditRequest.functionsDescription}</span></p>\r\n                        <p>{text.financingForm.companyRole[language]}: <span>{creditRequest.companyRole}</span></p>\r\n                        <p>{text.financingForm.academicLevel[language]}: <span>{creditRequest.academicLevel}</span></p>\r\n                        <p>{text.financingForm.economicDependants[language]}: <span>{creditRequest.economicDependants}</span></p>\r\n                        <p>{text.financingForm.height[language]}: <span>{creditRequest.height}</span></p>\r\n                        <p>{text.financingForm.weight[language]}: <span>{creditRequest.weight}</span></p>\r\n                        <p>{text.financingForm.ssn[language]}: <span>{creditRequest.ssn}</span></p>\r\n                        <p>{text.financingForm.carBrand[language]}: <span>{creditRequest.carBrand}</span></p>\r\n                        <p>{text.financingForm.carValue[language]}: <span>{creditRequest.carValue}</span></p>\r\n                        <p>{text.financingForm.realStateNumber[language]}: <span>{creditRequest.realStateNumber}</span></p>\r\n                        <p>{text.financingForm.realStateValue[language]}: <span>{creditRequest.realStateValue}</span></p>\r\n                        <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact1Name}</span></p>\r\n                        <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact1Address}</span></p>\r\n                        <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact1Phone}</span></p>\r\n                        <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact2Name}</span></p>\r\n                        <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact2Address}</span></p>\r\n                        <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact2Phone}</span></p>\r\n                        <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact3Name}</span></p>\r\n                        <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact3Address}</span></p>\r\n                        <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact3Phone}</span></p>\r\n                    </div>\r\n                </PreviewModal>\r\n            </div>\r\n            <ConfirmationModal confirmAction={confirmAction}>\r\n                <div className=\"modal-container-confirm\">\r\n                    <p>{text.financingForm.officePhone[language]}: <span>{creditRequest.officePhone}</span></p>\r\n                    <p>{text.financingForm.homePhone[language]}: <span>{creditRequest.homePhone}</span></p>\r\n                    <p>{text.financingForm.rfc[language]}: <span>{creditRequest.rfc}</span></p>\r\n                    <p>{text.financingForm.cellPhone[language]}: <span>{creditRequest.cellPhone}</span></p>\r\n                    <p>{text.financingForm.livingTime[language]}: <span>{creditRequest.livingTime}</span></p>\r\n                    <p>{text.financingForm.occupation[language]}: <span>{creditRequest.occupation}</span></p>\r\n                    <p>{text.financingForm.address[language]}: <span>{creditRequest.address}</span></p>\r\n                    <p>{text.financingForm.companyName[language]}: <span>{creditRequest.companyName}</span></p>\r\n                    <p>{text.financingForm.companyField[language]}: <span>{creditRequest.companyField}</span></p>\r\n                    <p>{text.financingForm.companyAddress[language]}: <span>{creditRequest.companyAddress}</span></p>\r\n                    <p>{text.financingForm.companyTime[language]}: <span>{creditRequest.companyTime}</span></p>\r\n                    <p>{text.financingForm.functionsDescription[language]}: <span>{creditRequest.functionsDescription}</span></p>\r\n                    <p>{text.financingForm.companyRole[language]}: <span>{creditRequest.companyRole}</span></p>\r\n                    <p>{text.financingForm.academicLevel[language]}: <span>{creditRequest.academicLevel}</span></p>\r\n                    <p>{text.financingForm.economicDependants[language]}: <span>{creditRequest.economicDependants}</span></p>\r\n                    <p>{text.financingForm.height[language]}: <span>{creditRequest.height}</span></p>\r\n                    <p>{text.financingForm.weight[language]}: <span>{creditRequest.weight}</span></p>\r\n                    <p>{text.financingForm.ssn[language]}: <span>{creditRequest.ssn}</span></p>\r\n                    <p>{text.financingForm.carBrand[language]}: <span>{creditRequest.carBrand}</span></p>\r\n                    <p>{text.financingForm.carValue[language]}: <span>{creditRequest.carValue}</span></p>\r\n                    <p>{text.financingForm.realStateNumber[language]}: <span>{creditRequest.realStateNumber}</span></p>\r\n                    <p>{text.financingForm.realStateValue[language]}: <span>{creditRequest.realStateValue}</span></p>\r\n                    <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact1Name}</span></p>\r\n                    <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact1Address}</span></p>\r\n                    <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact1Phone}</span></p>\r\n                    <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact2Name}</span></p>\r\n                    <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact2Address}</span></p>\r\n                    <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact2Phone}</span></p>\r\n                    <p>{text.financingForm.contactName[language]}: <span>{creditRequest.contact3Name}</span></p>\r\n                    <p>{text.financingForm.contactAddress[language]}: <span>{creditRequest.contact3Address}</span></p>\r\n                    <p>{text.financingForm.contactPhone[language]}: <span>{creditRequest.contact3Phone}</span></p>\r\n                </div>\r\n            </ConfirmationModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info: {creditRequest}, dataUpdated, notificationSent}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    creditRequest,\r\n    dataUpdated,\r\n    notificationSent\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction,\r\n        handleInfo: handleFinantialDataAction,\r\n        handleStep: handleStepAction,\r\n        toggleModal: handleConfirmationBoxAction,\r\n        sendNotification: sendNotificationAction\r\n    }\r\n)(FinancialForm)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Input, message, Select, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, handleInteriorDesignAction, sendNotificationAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactImageMagnify from 'react-image-magnify'\r\nimport ConfirmationModal from '../common/ConfirmationModal'\r\nimport { handleConfirmationBoxAction } from '../../redux/appDuck'\r\nlet { Option } = Select\r\n\r\nconst InteriorDesign = ({sendNotification, info, dataUpdated, history, fetching, language, getData, updateUser, handleInfo, toggleModal}) => {\r\n\r\n    let [option, setOption] = useState('floor')\r\n    let [background, setBackground] = useState('/img/intDesign/demo/floorDemoA.webp')\r\n\r\n    let handleSubmit = () => {\r\n        if(!info.floor || !info.showerTile) return message.error(text.interiorDesign.missingSelection[language])\r\n        toggleModal()\r\n    }\r\n\r\n    let confirmAction = async () => {\r\n        sendNotification('intDesign')\r\n        await updateUser()\r\n        toggleModal()\r\n        history.push('/propietary-service')\r\n    }\r\n\r\n    let handleOption = opt => {\r\n        switch(opt){\r\n            case 'floor':\r\n                if(info.floor) handleBackground(info.floor)\r\n                else setBackground('/img/intDesign/demo/floorDemoA.webp')\r\n                return setOption(opt)\r\n            case 'showerTile':\r\n                if(info.kitchenCabinet) handleBackground(info.kitchenCabinet)\r\n                else setBackground('/img/intDesign/demo/tileExtra.webp')\r\n                return setOption(opt)\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n    let handleBackground = value => {\r\n        switch(value){\r\n            case 'Aspen Beige':\r\n                handleInfo(option, value)\r\n                return setBackground('/img/intDesign/demo/floorDemoA.webp')\r\n            case 'Nevada Gris':\r\n                handleInfo(option, value)\r\n                return setBackground('/img/intDesign/demo/floorDemoB.webp')\r\n            case 'Emblem Grey':\r\n                handleInfo(option, value)\r\n                return setBackground('/img/intDesign/demo/floorDemoC.webp')\r\n            case 'Emblem Brown':\r\n                handleInfo(option, value)\r\n                return setBackground('/img/intDesign/demo/floorDemoD.webp')\r\n            case 'Khalos':\r\n                handleInfo(option, value)\r\n                return setBackground('/img/intDesign/demo/tileExtraDemo.webp')\r\n            case 'sameAsFloor':\r\n                if(info.floor) {\r\n                    handleInfo(option, info.floor)\r\n                    return handleBackground(info.floor)\r\n                }\r\n                return message.error(text.interiorDesign.missingFloorSelect[language])\r\n            default: \r\n                return\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/intDesign.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.interiorDesign[language]}</p>\r\n                            </div>\r\n                        <h2>{text.sidebarSubtitle.interiorDesign[language]}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"multiple-inputs map-inputs int-design-input\">\r\n                                <Input disabled value={info.kitchenCabinet ? `${text.interiorDesign.kitchen[language]}: ${info.kitchenCabinet}` : ` ${text.interiorDesign.kitchen[language]}:`}/>\r\n                                <Input disabled value={info.closetCabinet ? `${text.interiorDesign.closet[language]}: ${info.closetCabinet}` :  ` ${text.interiorDesign.closet[language]}:`}/>\r\n                                <Input disabled value={info.floor ? `${text.interiorDesign.floors[language]}: ${info.floor}` :  ` ${text.interiorDesign.floors[language]}:`}/>\r\n                                <Input disabled value={info.showerTile ? `${text.interiorDesign.showerTile[language]}: ${info.showerTile}` :  ` ${text.interiorDesign.showerTile[language]}:`}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"int-design-container\">\r\n                                <div className=\"int-design-left\">\r\n                                    <ReactImageMagnify\r\n                                    {...{\r\n                                        smallImage: {\r\n                                            alt: 'Demo',\r\n                                            isFluidWidth: true,\r\n                                            src: background\r\n                                        },\r\n                                        largeImage: {\r\n                                            src: background,\r\n                                            width: 1200,\r\n                                            height: 1800\r\n                                        },\r\n                                        enlargedImageContainerDimensions: {\r\n                                            width: 300,\r\n                                            height: '100%'\r\n                                        }\r\n                                    }} \r\n                                    />\r\n                                </div>\r\n                                <div className=\"int-design-right\">\r\n                                    <div className=\"int-design-select\">\r\n                                        <p>{text.interiorDesign.area[language]}: </p>\r\n                                        <Select\r\n                                            defaultValue='floor'\r\n                                            onChange={handleOption}\r\n                                        >\r\n                                            {/* <Option value='kitchenCabinet'>{text.interiorDesign.kitchen[language]}</Option>\r\n                                            <Option value='closetCabinet'>{text.interiorDesign.closet[language]}</Option> */}\r\n                                            <Option value='floor'>{text.interiorDesign.floors[language]}</Option>\r\n                                            <Option value='showerTile'>{text.interiorDesign.showerTile[language]}</Option>\r\n                                        </Select>\r\n                                    </div>\r\n                                    {\r\n                                        option === 'floor' ? \r\n                                            <div className=\"sample-container\">\r\n                                                <img className={info.floor === 'Aspen Beige' ? 'active-sample' : ''} onClick={() => handleBackground('Aspen Beige')} src=\"/img/intDesign/demo/floorA.webp\" alt=\"floor\"/>\r\n                                                <img className={info.floor === 'Nevada Gris' ? 'active-sample' : ''} onClick={() => handleBackground('Nevada Gris')} src=\"/img/intDesign/demo/floorB.webp\" alt=\"floor\"/>\r\n                                                <img className={info.floor === 'Emblem Grey' ? 'active-sample' : ''} onClick={() => handleBackground('Emblem Grey')} src=\"/img/intDesign/demo/floorC.webp\" alt=\"floor\"/>\r\n                                                <img className={info.floor === 'Emblem Brown' ? 'active-sample' : ''} onClick={() => handleBackground('Emblem Brown')} src=\"/img/intDesign/demo/floorD.webp\" alt=\"floor\"/>\r\n                                            </div>\r\n                                        :\r\n                                        option === 'showerTile' ? \r\n                                            <div className=\"sample-container sample-with-text\">\r\n                                                <p className={info.showerTile && info.showerTile !== 'Khalos' ? 'sample-with-text-active' : ''} onClick={() => handleBackground('sameAsFloor')}>{text.interiorDesign.sameTile[language]}</p>\r\n                                                <img className={info.showerTile === 'Khalos' ? 'active-sample' : ''} onClick={() => handleBackground('Khalos')} src=\"/img/intDesign/demo/tileExtra.webp\" alt=\"floor\"/>\r\n                                            </div>\r\n                                        :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='multiple-buttons intd-buttons'>\r\n                            <Link to='/buy'><Button loading={false} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Button onClick={handleSubmit} loading={false} className='nav-button'>{text.button.continue[language]}</Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <ConfirmationModal confirmAction={confirmAction}>\r\n                <div className=\"modal-container-confirm\">\r\n                    <p>{text.interiorDesign.kitchen[language]}: <span>{info.kitchenCabinet}</span></p>\r\n                    <p>{text.interiorDesign.closet[language]}: <span>{info.closetCabinet}</span></p>\r\n                    <p>{text.interiorDesign.floors[language]}: <span>{info.floor}</span></p>\r\n                    <p>{text.interiorDesign.showerTile[language]}: <span>{info.showerTile}</span></p>\r\n                    <h3>{text.interiorDesign.warning[language]}</h3>\r\n                </div>\r\n            </ConfirmationModal>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction,\r\n        handleInfo: handleInteriorDesignAction,\r\n        toggleModal: handleConfirmationBoxAction,\r\n        sendNotification: sendNotificationAction\r\n    }\r\n)(InteriorDesign)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PropietaryService = ({info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n    let handleSubmit = typeInput => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div style={{marginBottom: '2rem'}}>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/ownerServ.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.propietaryService[language]}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"propietary-cards-container\">\r\n                                <Link to='/propietary-service/hoa' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/hoa.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.hoa[language]}</p>\r\n                                </Link>\r\n                                <Link to='/propietary-service/house-cleaning' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/cleaning.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.houseCleaning[language]}</p>\r\n                                </Link>\r\n                                <Link to='/propietary-service/manteinance' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/manteinance.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.manteinanceServices[language]}</p>\r\n                                </Link>\r\n                                <Link to='/propietary-service/cable' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/cable.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.cable[language]}</p>\r\n                                </Link>\r\n                                <Link to='/propietary-service/public-services' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/public.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.publicServices[language]}</p>\r\n                                </Link>\r\n                                <Link to='/propietary-service/interior-design' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/decoration.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.interiorDesign[language]}</p>\r\n                                </Link>\r\n                                <Link to='/propietary-service/community' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/community.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.community[language]}</p>\r\n                                </Link>\r\n                                <Link to='/propietary-service/important-phones' className=\"propietary-card\">\r\n                                    <img src=\"/img/propietary/phone.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.importantPhones[language]}</p>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(PropietaryService)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FAQ = ({fetching, language}) => {\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/faq.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.faq[language]}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"propietary-cards-container\">\r\n                                <Link to='/faq/services' className=\"propietary-card\">\r\n                                    <img src=\"/img/faq/FAQ-servicios.svg\" alt=\"propietary\"/>\r\n                                    <p>{text.propietaryServices.publicServices[language]}</p>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching}\r\n}) => ({\r\n    language,\r\n    fetching\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        \r\n    }\r\n)(FAQ)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Input, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../redux/dataDuck'\r\nimport text from '../text'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Help = ({info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n    let handleSubmit = typeInput => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/help.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.help[language]}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"help-container\">\r\n                                <p className='help-title'>{text.help.title[language]}</p>\r\n                                <Input.TextArea rows='4' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(Help)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Collapse, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\nimport { Link } from 'react-router-dom'\r\nlet { Panel } = Collapse\r\n\r\nconst Faqinfo = ({match, info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n    let { params } = match\r\n    let [title, setTitle] = useState('')\r\n\r\n    let handleTitle = () => {\r\n        switch(params.module){\r\n            case 'services':\r\n                return setTitle(text.propietaryServices.publicServices[language])\r\n            default: \r\n                return\r\n        }\r\n    }\r\n\r\n    let handleSubmit = typeInput => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        handleTitle()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/faq.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.faq[language]}</p>\r\n                            </div>\r\n                            <p className='subpage-title'>{title}</p>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <div className=\"accordion-container\">\r\n                                <Collapse defaultActiveKey={['1']}>\r\n                                    <Panel header=\"QUESTION 1\" key=\"1\">\r\n                                        <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aspernatur, tenetur velit. Distinctio possimus veniam dicta error in quas, dolorem est molestias, totam obcaecati ducimus, illum maiores dolorum. Sequi, alias ullam.</p>\r\n                                    </Panel>\r\n                                    <Panel header=\"QUESTION 2\" key=\"2\">\r\n                                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. A cupiditate reprehenderit hic, natus at quisquam aliquam cumque commodi nesciunt porro quaerat laboriosam officia repellendus quidem repudiandae eius exercitationem molestias ad.</p>\r\n                                    </Panel>\r\n                                    <Panel header=\"QUESTION 3\" key=\"3\">\r\n                                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati, iure eius est, eos ab neque minima exercitationem nostrum ut dicta debitis rerum sequi dolore, error vero consectetur quas corrupti. Minima.</p>\r\n                                    </Panel>\r\n                                </Collapse>\r\n                            </div>\r\n                            <Link to='/faq'><Button className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(Faqinfo)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Collapse, Spin } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getDataAction, updateUserAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\nimport { Link } from 'react-router-dom'\r\nlet { Panel } = Collapse\r\n\r\nconst PropietaryDetails = ({match, info, dataUpdated, history, fetching, language, getData, updateUser}) => {\r\n\r\n    let { params } = match\r\n    let [title, setTitle] = useState('')\r\n\r\n    let handleTitle = () => {\r\n        switch(params.service){\r\n            case 'hoa':\r\n                return setTitle(text.propietaryServices.hoa[language])\r\n            case 'house-cleaning':\r\n                return setTitle(text.propietaryServices.houseCleaning[language])\r\n            case 'manteinance':\r\n                return setTitle(text.propietaryServices.manteinanceServices[language])\r\n            case 'cable':\r\n                return setTitle(text.propietaryServices.cable[language])\r\n            case 'public-services':\r\n                return setTitle(text.propietaryServices.publicServices[language])\r\n            case 'interior-design':\r\n                return setTitle(text.propietaryServices.interiorDesign[language])\r\n            case 'community':\r\n                return setTitle(text.propietaryServices.community[language])\r\n            case 'important-phones':\r\n                return setTitle(text.propietaryServices.importantPhones[language])\r\n            default: \r\n                return\r\n        }\r\n    }\r\n\r\n    let handleSubmit = typeInput => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        handleTitle()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/ownerServ.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.propietaryService[language]}</p>\r\n                            </div>\r\n                            <p className='subpage-title'>{title}</p>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <div className=\"accordion-container\">\r\n                                <Collapse defaultActiveKey={['1']}>\r\n                                    <Panel header=\"Empresa 1\" key=\"1\">\r\n                                        <p>Nombre del representante</p>\r\n                                        <p>correo@correo.com</p>\r\n                                        <p>Teléfono: xxx-xxx-xxx</p>\r\n                                        <p>http://homepage.com</p>\r\n                                    </Panel>\r\n                                    <Panel header=\"Empresa 2\" key=\"2\">\r\n                                    <p>Nombre del representante</p>\r\n                                        <p>correo@correo.com</p>\r\n                                        <p>Teléfono: xxx-xxx-xxx</p>\r\n                                        <p>http://homepage.com</p>\r\n                                    </Panel>\r\n                                    <Panel header=\"Empresa 3\" key=\"3\">\r\n                                    <p>Nombre del representante</p>\r\n                                        <p>correo@correo.com</p>\r\n                                        <p>Teléfono: xxx-xxx-xxx</p>\r\n                                        <p>http://homepage.com</p>\r\n                                    </Panel>\r\n                                </Collapse>\r\n                            </div>\r\n                            <Link to='/propietary-service'><Button className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    user: {fetching},\r\n    data: {info, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    info,\r\n    dataUpdated\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getDataAction,\r\n        updateUser: updateUserAction\r\n    }\r\n)(PropietaryDetails)\r\n","import { Button, Input, message, Select } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { changeLangAction } from '../../redux/appDuck'\r\nimport { signupAction } from '../../redux/userDuck'\r\nimport text from '../text'\r\n\r\nlet { Option } = Select\r\n\r\nlet AdminRegister = ({history, fetching, language, error, info, signup, changeLanguage}) => {\r\n\r\n    let [data, setData] = useState({\r\n        userType: 'admin'\r\n    })\r\n\r\n    let handleData = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    let handleSubmit = () => {\r\n        if(!data.name ||\r\n             !data.lastName ||\r\n             (!data.secondLastName && language === 'español') ||\r\n             !data.email\r\n            ) \r\n            return message.warning(text.messages.missingFields[language])\r\n        let rex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(!rex.test(data.email.toLowerCase())) return message.warn(text.messages.incorrectEmail[language])\r\n        if(!data.password || data.password.length < 6) return message.warn(text.messages.incorrectPassword[language])\r\n        if(data.password !== data.repeatPassword) return message.warn(text.messages.repeatedPasswordError[language])\r\n        signup(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(error.status === 500) return message.error('Ingresa todos los campos')\r\n        if(info.name) return history.push('/admin/select-client')\r\n    }, [error, info])\r\n    \r\n    return (\r\n        <div className='padded-container register-container'>\r\n            <div className=\"left-register register-form-bg\">\r\n                <img src=\"/img/common/logo-white.png\" alt=\"punta piedra logo\"/>\r\n            </div>\r\n            <div className=\"right-register-block\">\r\n                <img className='title-icon' src=\"/img/register/profile.png\" alt=\"Perfil\"/>\r\n                <p className='title'>{text.register.adminPortal[language]}</p>\r\n                <p className='subtitle'>{text.register.adminPortalRegister[language]}</p>\r\n                <div className='form-container'>\r\n                    <div className=\"multiple-inputs\">\r\n                        <Input onChange={handleData} value={data.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                        <Input className={`${language === 'english' && 'last-input'}`} onChange={handleData} value={data.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                        {language === 'español' && <Input required onChange={handleData} value={data.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n                    </div>\r\n                    <div className=\"multiple-inputs\">\r\n                        <Input onChange={handleData} value={data.email} name='email' placeholder={text.register.email[language]}/>\r\n                        <Input maxLength='15' className='last-input' onChange={handleData} value={data.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n                    </div>\r\n                    <div className=\"multiple-inputs\">\r\n                        <Select className='agent-selector' onChange={value => {setData({...data, language: value}); changeLanguage(value)}} placeholder={text.register.language[language]} value={data.language} defaultValue={data.language}>\r\n                            <Option value='english'>English</Option>\r\n                            <Option value='español'>Español</Option>\r\n                        </Select>\r\n                    </div>\r\n                    <Input.Password onChange={handleData} value={data.password} name='password' placeholder={text.register.password[language]}/>\r\n                    <Input.Password onChange={handleData} value={data.repeatPassword} name='repeatPassword' placeholder={text.register.repeatPassword[language]}/>\r\n                    <br/><br/>\r\n                    <Button loading={fetching} onClick={handleSubmit} className='nav-button'>{text.button.register[language]}</Button>\r\n                    <div className=\"auth-bottom-text\">\r\n                        <p>{text.register.login[language]} <Link to='/login'>{text.register.loginLink[language]}</Link></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    user: {fetching, error, info},\r\n    app: {language}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    error, \r\n    info\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        signup: signupAction,\r\n        changeLanguage: changeLangAction\r\n    }\r\n)(AdminRegister)","import { Select, Spin } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getUsersAction, handleSelectedUserAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\n\r\nlet { Option } = Select\r\n\r\nconst SelectClient = ({selectedUser, fetching, users, language, getUsers, handleSelectedUser}) => {\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/profile.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.chooseUser[language]}</p>\r\n                            </div>\r\n                            <h2>{text.sidebarSubtitle.chooseUser[language]}</h2>\r\n                            <br/><br/>\r\n                            <p>{text.admin.selectUser[language]}</p>\r\n                            <div style={{maxWidth: '300px', margin: '0 auto'}} className=\"multiple-inputs\">\r\n                                <Select  className='country-selector' onChange={handleSelectedUser} value={selectedUser}>\r\n                                    {\r\n                                        users.filter(user => user.userType === 'buyer').map(\r\n                                            user => <Option key={user._id} value={user._id}>{user.name} {user.lastName}</Option>\r\n                                        )\r\n                                    }\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    data: {info, fetching, users, selectedUser},\r\n    app: {language}\r\n}) => ({\r\n    language,\r\n    info, \r\n    fetching,\r\n    users,\r\n    selectedUser\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getUsers: getUsersAction,\r\n        handleSelectedUser: handleSelectedUserAction\r\n    }\r\n)(SelectClient)\r\n","import { Button, Input, Spin } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getClientDataAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\n\r\nconst AdminUserProfile = ({language, fetching, selectedUserData, error, getData}) => {\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/profile.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.userProfile[language]}</p>\r\n                            </div>\r\n                            <h2>{selectedUserData.name} {selectedUserData.lastName}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <p className='profile-form-subtitle2'>{text.profile.basicInfo[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={selectedUserData.name} name='name' placeholder={text.register.firstName[language]}/>\r\n                                <Input className={`${language === 'english' && 'last-input'}`} value={selectedUserData.lastName} name='lastName' placeholder={text.register.lastName[language]}/>\r\n                                {language === 'español' && <Input required value={selectedUserData.secondLastName} name='secondLastName' placeholder={text.register.secondLastName[language]}/>}\r\n                            </div>\r\n                            {selectedUserData.userType !== 'buyer' && <Input id='company-app' value={selectedUserData.company} name='company' placeholder={text.register.company[language]}/>}\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={selectedUserData.email} name='email' placeholder={text.register.email[language]}/>\r\n                                <Input maxLength='15' className='last-input' value={selectedUserData.phone} name='phone' placeholder={text.register.phone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                            <Input value={selectedUserData.country} name='country' placeholder={text.profile.country[language]}/>\r\n                            <Input className='last-input' value={selectedUserData.state} name='state' placeholder={text.profile.state[language]}/>\r\n                            </div>\r\n                            {/* DIVISION */}\r\n                            <p className='profile-form-subtitle2'>{text.profile.workInfo[language]}</p>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">    \r\n                                    <Input value={selectedUserData.ssn} name='ssn' placeholder={text.userData.ssn[language]}/>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input value={selectedUserData.civilStatus} name='civilStatus' placeholder={text.userData.civilStatus[language]}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">\r\n                                    <Input value={selectedUserData.occupation} name='occupation' placeholder={text.userData.occupation[language]}/>\r\n                                    <p>{text.userData.occupationEx[language]}</p>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input value={selectedUserData.company} name='company' placeholder={text.userData.company[language]}/>\r\n                                    <p>{text.userData.companyEx[language]}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"multiple-inputs-with-message\">\r\n                                <div className=\"input-with-message\">\r\n                                    <Input value={selectedUserData.position} name='position' placeholder={text.userData.position[language]}/>\r\n                                    <p>{text.userData.positionEx[language]}</p>\r\n                                </div>\r\n                                <div className=\"input-with-message\">\r\n                                    <Input value={selectedUserData.officePhone} name='officePhone' placeholder={text.userData.officePhone[language]}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"small-buttons multiple-buttons\">\r\n                            <Link to='/admin/select-client'><Button loading={fetching} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Link to='/admin/documentation'><Button className='nav-button'>{text.button.continue[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {fetching, selectedUserData, error}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    selectedUserData,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getClientDataAction\r\n    }\r\n)(AdminUserProfile)\r\n","import { Button, Input, Spin } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getClientDataAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\n\r\nconst AdminDocuments = ({language, fetching, selectedUserData, error, getData}) => {\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/documents.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.clientDocuments[language]}</p>\r\n                            </div>\r\n                            <h2>{selectedUserData.name} {selectedUserData.lastName}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container'>\r\n                            <div className=\"file-manager\">\r\n                                <p><img src=\"/img/files/folder.svg\" alt=\"folder\"/> {text.documents.genDocs[language]}</p>\r\n                                <ul className='file-manager-files'>\r\n                                    <li><p>{text.documentation.firstDoc.title[language]}: {selectedUserData.files && <span>{selectedUserData.files.passport} <img src=\"/img/files/open.svg\" alt=\"open\"/></span>}</p></li>\r\n                                    <li><p>{text.documentation.secondDoc.title[language]}: {selectedUserData.files && <span>{selectedUserData.files.driversLicence} <img src=\"/img/files/open.svg\" alt=\"open\"/></span>}</p></li>\r\n                                    <li><p>{text.documentation.thirdDoc.title[language]}: {selectedUserData.files && <span>{selectedUserData.files.addressProof} <img src=\"/img/files/open.svg\" alt=\"open\"/></span>}</p></li>\r\n                                </ul>\r\n                                <br/>\r\n                                <p><img src=\"/img/files/folder.svg\" alt=\"folder\"/> {text.documents.financialDocs[language]}</p>\r\n                                <ul className='file-manager-files'>\r\n                                    {\r\n                                        !selectedUserData.wantFinance ? \r\n                                            <li><p>{text.documents.noFinancial[language]}</p></li>\r\n                                        : \r\n                                            null\r\n                                    }\r\n                                    {\r\n                                        selectedUserData.economicProfile === 'nat-salaried' ? \r\n                                            text.financing.nationalSalariedDocs.map(doc => \r\n                                                <li key={doc.id}><span>{selectedUserData.files && selectedUserData.files[doc.id]} {selectedUserData.files && selectedUserData.files[doc.id] && <img src=\"/img/files/open.svg\" alt=\"open\"/>}</span></li>\r\n                                            )\r\n                                        :\r\n                                            null\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"small-buttons multiple-buttons\">\r\n                            <Link to='/admin/data'><Button loading={fetching} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Link to='/admin/choose'><Button className='nav-button'>{text.button.continue[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {fetching, selectedUserData, error}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    selectedUserData,\r\n    error\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getClientDataAction\r\n    }\r\n)(AdminDocuments)\r\n","import { Button, Input, Spin } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getClientDataAction, getHousesAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\n\r\nconst AdminChoose = ({houses, language, fetching, selectedUserData, error, getData, getHouses}) => {\r\n\r\n    let [selectedHouse, setSelectedHouse] = useState({})\r\n    let [selectedAdditional, setSelectedAdditional] = useState({})\r\n\r\n    useEffect(() => {\r\n        getHouses()\r\n        getData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(selectedUserData.lotId !== null && selectedUserData.lotId !== undefined && houses.length) setSelectedHouse(houses[selectedUserData.lotId])\r\n        if(selectedUserData.additionalLotId !== null && selectedUserData.additionalLotId !== undefined && houses.length) setSelectedAdditional(houses[selectedUserData.additionalLotId])\r\n    }, [selectedUserData, houses])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/choose.png\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.userChosenVilla[language]}</p>\r\n                            </div>\r\n                            <h2>{selectedUserData.name} {selectedUserData.lastName}</h2>\r\n                        </div>\r\n                        <div className=\"admin-house-choose\">\r\n                            <p>{text.chooseHouse.block[language]}</p>\r\n                            <Input style={{width: '320px'}} value={selectedUserData.block} name='lotBlock' placeholder={text.chooseHouse.inputLotSize[language]}/>\r\n                            <p>{text.chooseHouse.inputLotNumber[language]}</p>\r\n                            <Input style={{width: '320px'}} value={selectedHouse.lotNumber} name='lotNumber' placeholder={text.chooseHouse.inputLotNumber[language]}/>\r\n                            <p>{text.chooseHouse.inputLotSize[language]}</p>\r\n                            <Input style={{width: '320px'}} value={selectedHouse.lotSize} suffix={<small>m<sup>2</sup></small>} name='lotSize' placeholder={text.chooseHouse.inputLotSize[language]}/>\r\n                            <p>{text.chooseHouse.inputLotModel[language]}</p>\r\n                            <Input style={{width: '320px'}} value={selectedHouse.villa ? `Villa ${selectedHouse.villa}` : null} name='villa' placeholder={text.chooseHouse.inputLotModel[language]}/>\r\n                            {\r\n                                selectedUserData.additionalLotId ? \r\n                                    <>\r\n                                    <p className='divider-word'>{text.chooseHouse.addLot[language]}</p>\r\n                                    <p>{text.chooseHouse.block[language]}</p>\r\n                                    <Input style={{width: '320px'}} value={selectedUserData.additionalBlock} name='lotBlock' placeholder={text.chooseHouse.inputLotSize[language]}/>\r\n                                    <p>{text.chooseHouse.inputLotNumber[language]}</p>\r\n                                    <Input style={{width: '320px'}} value={selectedAdditional.lotNumber} name='lotNumber' placeholder={text.chooseHouse.inputLotNumber[language]}/>\r\n                                    <br/><br/>\r\n                                    </>\r\n                                :\r\n                                    null\r\n                            }\r\n                        </div>\r\n                        <div className=\"multiple-buttons\">\r\n                            <Link to='/admin/documentation'><Button loading={fetching} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Link to='/admin/financing'><Button className='nav-button'>{text.button.continue[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {fetching, selectedUserData, error, houses}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    selectedUserData,\r\n    error,\r\n    houses\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getClientDataAction,\r\n        getHouses: getHousesAction\r\n    }\r\n)(AdminChoose)\r\n","import { Button, Input, message, Spin } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getClientDataAction, getHousesAction, approveFinancingAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\n\r\nconst AdminFinance = ({dataUpdated, name, lastName, language, fetching, creditRequest = {}, error, getData, approveFinance}) => {\r\n\r\n    useEffect(() => {\r\n        if(dataUpdated) return message.success(text.admin.approved[language])\r\n    }, [dataUpdated])\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content no-justify\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/finance.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.userFinance[language]}</p>\r\n                            </div>\r\n                            <h2>{name} {lastName}</h2>\r\n                        </div>\r\n                        <div className='padded-app-container form-container condensed-inputs'>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input maxLength='15' value={creditRequest.officePhone} name='officePhone' placeholder={text.financingForm.officePhone[language]}/>\r\n                                <Input maxLength='15' value={creditRequest.homePhone} name='homePhone' placeholder={text.financingForm.homePhone[language]}/>\r\n                                <Input value={creditRequest.rfc} name='rfc' placeholder={text.financingForm.rfc[language]}/>\r\n                                <Input maxLength='15' value={creditRequest.cellPhone} name='cellPhone' placeholder={text.financingForm.cellPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.email} name='email' placeholder={text.financingForm.email[language]}/>\r\n                                <Input value={creditRequest.livingTime} name='livingTime' placeholder={text.financingForm.livingTime[language]}/>\r\n                                <Input value={creditRequest.occupation} name='occupation' placeholder={text.financingForm.occupation[language]}/>\r\n                            </div>\r\n                            <p className='finance-form-subtitle2'>{text.financingForm.livesInHouse[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.address} name='address' placeholder={text.financingForm.address[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.companyName} name='companyName' placeholder={text.financingForm.companyName[language]}/>\r\n                                <Input value={creditRequest.companyField} name='companyField' placeholder={text.financingForm.companyField[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.companyAddress} name='companyAddress' placeholder={text.financingForm.companyAddress[language]}/>\r\n                                <Input value={creditRequest.companyTime} name='companyTime' placeholder={text.financingForm.companyTime[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.functionsDescription} name='functionsDescription' placeholder={text.financingForm.functionsDescription[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.companyRole} name='companyRole' placeholder={text.financingForm.companyRole[language]}/>\r\n                                <Input value={creditRequest.academicLevel} name='academicLevel' placeholder={text.financingForm.academicLevel[language]}/>\r\n                                <Input value={creditRequest.economicDependants} name='economicDependants' placeholder={text.financingForm.economicDependants[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.height} name='height' placeholder={text.financingForm.height[language]}/>\r\n                                <Input value={creditRequest.weight} name='weight' placeholder={text.financingForm.weight[language]}/>\r\n                                <Input value={creditRequest.ssn} name='ssn' placeholder={text.financingForm.ssn[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.carBrand} name='carBrand' placeholder={text.financingForm.carBrand[language]}/>\r\n                                <Input value={creditRequest.carValue} name='carValue' placeholder={text.financingForm.carValue[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.realStateNumber} name='realStateNumber' placeholder={text.financingForm.realStateNumber[language]}/>\r\n                                <Input value={creditRequest.realStateValue} name='realStateValue' placeholder={text.financingForm.realStateValue[language]}/>\r\n                            </div>\r\n                            <p className='finance-form-subtitle1'>{text.financingForm.referenceTitle[language]}</p>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.contact1Name} name='contact1Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input value={creditRequest.contact1Address} name='contact1Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' value={creditRequest.contact1Phone} name='contact1Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.contact2Name} name='contact2Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input value={creditRequest.contact2Address} name='contact2Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' value={creditRequest.contact2Phone} name='contact2Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.contact3Name} name='contact3Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input value={creditRequest.contact3Address} name='contact3Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' value={creditRequest.contact3Phone} name='contact3Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <div className=\"multiple-inputs\">\r\n                                <Input value={creditRequest.contact4Name} name='contact4Name' placeholder={text.financingForm.contactName[language]}/>\r\n                                <Input value={creditRequest.contact4Address} name='contact4Address' placeholder={text.financingForm.contactAddress[language]}/>\r\n                                <Input maxLength='15' value={creditRequest.contact4Phone} name='contact4Phone' placeholder={text.financingForm.contactPhone[language]}/>\r\n                            </div>\r\n                            <Button onClick={approveFinance} className='nav-button'>{text.admin.approveFinancing[language]}</Button>\r\n                        </div>\r\n                        <div className=\"multiple-buttons\">\r\n                            <Link to='/admin/choose'><Button loading={fetching} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Link to='/admin/buy'><Button className='nav-button'>{text.button.continue[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {fetching, selectedUserData: {creditRequest, name, lastName}, error, dataUpdated}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    creditRequest,\r\n    error,\r\n    dataUpdated,\r\n    name,\r\n    lastName\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getClientDataAction,\r\n        getHouses: getHousesAction,\r\n        approveFinance: approveFinancingAction\r\n    }\r\n)(AdminFinance)\r\n","import { Button, Input, Spin } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getClientDataAction, getHousesAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\n\r\nconst AdminChoose = ({houses, language, fetching, selectedUserData, error, getData, getHouses}) => {\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/buy.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.userBoughtVilla[language]}</p>\r\n                            </div>\r\n                            <h2>{selectedUserData.name} {selectedUserData.lastName}</h2>\r\n                        </div>\r\n                        <div className=\"admin-house-choose\">\r\n                            <p>{text.admin.purchasePriceApproved[language]}:</p>\r\n                            <p className='admin-response'>{selectedUserData.priceApproved ? text.responses.yes[language] : text.responses.no[language]}</p>\r\n                            <p>{text.admin.blueprintsApproved[language]}:</p>\r\n                            <p className='admin-response'>{selectedUserData.villaApproved ? text.responses.yes[language] : text.responses.no[language]}</p>\r\n                        </div>\r\n                        <div className=\"multiple-buttons\">\r\n                            <Link to='/admin/financing'><Button loading={fetching} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                            <Link to='/admin/interior-design'><Button className='nav-button'>{text.button.continue[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {fetching, selectedUserData, error, houses}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    selectedUserData,\r\n    error,\r\n    houses\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getClientDataAction,\r\n        getHouses: getHousesAction\r\n    }\r\n)(AdminChoose)\r\n","import { Button, Input, Spin } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getClientDataAction, getHousesAction } from '../../../redux/dataDuck'\r\nimport text from '../../text'\r\n\r\nconst AdminFinishes = ({houses, language, fetching, selectedUserData, error, getData, getHouses}) => {\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='application-container'>\r\n             {\r\n                fetching ? \r\n                    <div className='spinner-full-page'><Spin size='large'/></div>\r\n                    :\r\n                    <div className=\"application-content\">\r\n                        <div>\r\n                            <div className=\"app-top-icon\">\r\n                                <img src=\"/img/sidebar/intDesign.svg\" alt=\"profile\"/>\r\n                                <p>{text.sidebar.clientFinishes[language]}</p>\r\n                            </div>\r\n                            <h2>{selectedUserData.name} {selectedUserData.lastName}</h2>\r\n                        </div>\r\n                        <div className=\"admin-house-choose\">\r\n                            <p>{text.interiorDesign.kitchen[language]}:</p>\r\n                            <p className='admin-response'>{selectedUserData.kitchenCabinet}</p>\r\n                            <p>{text.interiorDesign.closet[language]}:</p>\r\n                            <p className='admin-response'>{selectedUserData.closetCabinet}</p>\r\n                            <p>{text.interiorDesign.floors[language]}:</p>\r\n                            <p className='admin-response'>{selectedUserData.floor}</p>\r\n                            <p>{text.interiorDesign.showerTile[language]}:</p>\r\n                            <p className='admin-response'>{selectedUserData.showerTile}</p>\r\n                        </div>\r\n                        <div className=\"multiple-buttons\">\r\n                            <Link to='/admin/buy'><Button loading={fetching} className='nav-button'>{text.button.returnCaps[language]}</Button></Link>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapState = ({\r\n    app: {language},\r\n    data: {fetching, selectedUserData, error, houses}\r\n}) => ({\r\n    language,\r\n    fetching,\r\n    selectedUserData,\r\n    error,\r\n    houses\r\n})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        getData: getClientDataAction,\r\n        getHouses: getHousesAction\r\n    }\r\n)(AdminFinishes)\r\n","import React, { useEffect } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { checkSessionAction } from './redux/userDuck'\r\nimport Login from './components/auth/Login'\r\nimport RegisterFormLayout from './components/auth/RegisterFormLayout'\r\nimport ForgotPassword from './components/auth/forgotPassword/ForgotPassword'\r\nimport ForgotPasswordToken from './components/auth/forgotPassword/ForgotPasswordToken'\r\nimport Profile from './components/home/Profile'\r\nimport ChooseHouse from './components/home/ChooseHouse'\r\nimport BuyHouse from './components/home/BuyHouse'\r\nimport UserData from './components/home/UserData'\r\nimport AddHouse from './components/admin/AddHouse'\r\nimport Documentation from './components/home/Documentation'\r\nimport Finance from './components/home/Finance'\r\nimport FinantialProfilesData from './components/home/financeProfiles/FinantialProfilesData'\r\nimport FinancialForm from './components/home/financeProfiles/FinancialForm'\r\nimport InteriorDesign from './components/home/InteriorDesign'\r\nimport PropietaryService from './components/home/PropietaryService'\r\nimport FAQ from './components/home/FAQ'\r\nimport Help from './components/home/Help'\r\nimport FaqInfo from './components/home/faqComponents/FaqInfo'\r\nimport PropietaryDetails from './components/home/propietaryComponent/PropietaryDetails'\r\nimport { getLanguageAction } from './redux/appDuck'\r\nimport AdminRegister from './components/auth/AdminRegister'\r\nimport SelectClient from './components/home/adminComponents/SelectClient'\r\nimport AdminUserProfile from './components/home/adminComponents/AdminUserProfile'\r\nimport AdminDocuments from './components/home/adminComponents/AdminDocuments'\r\nimport AdminChoose from './components/home/adminComponents/AdminChoose'\r\nimport AdminFinance from './components/home/adminComponents/AdminFinance'\r\nimport AdminPurchase from './components/home/adminComponents/AdminPurchase'\r\nimport AdminFinishes from './components/home/adminComponents/AdminFinishes'\r\n\r\nlet PrivateRoute = ({logged, path, component, ...remainingProps}) => {\r\n    if(logged) return <Route path={path} component={component} {...remainingProps}/>\r\n    return <Redirect to='/login' {...remainingProps}/>\r\n}\r\n\r\nlet AdminRoute = ({userType, logged, path, component, ...remainingProps}) => {\r\n    if(logged && (userType === 'admin' || userType === 'agent') ) return <Route path={path} component={component} {...remainingProps}/>\r\n    return <Redirect to='/login' {...remainingProps}/>\r\n}\r\n\r\nlet AuthRoute = ({logged, path, component, ...remainingProps}) => {\r\n    if(logged) return <Redirect to='/' {...remainingProps}/>\r\n    return <Route path={path} component={component} {...remainingProps}/> \r\n}\r\n\r\nlet Routes = ({info, logged, checkSession, getLanguage}) => {\r\n\r\n    let { userType } = info\r\n\r\n    useEffect(() => {\r\n        checkSession()\r\n        // eslint-disable-next-line\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(info.language) getLanguage()\r\n    }, [info])\r\n\r\n    return <Switch>\r\n        <AuthRoute path='/login' logged={logged} component={Login}/>\r\n        <AuthRoute path='/register/:type' logged={logged} component={RegisterFormLayout}/>\r\n        <AuthRoute path='/admin-register' logged={logged} component={AdminRegister}/>\r\n        <AuthRoute exact path='/recover-password' logged={logged} component={ForgotPassword}/>\r\n        <AuthRoute path='/recover-password/token' logged={logged} component={ForgotPasswordToken}/>\r\n        <PrivateRoute exact path='/' logged={logged} component={userType === 'agent' || userType === 'admin' ? SelectClient : Profile}/>\r\n        <PrivateRoute path='/profile' logged={logged} component={Profile}/>\r\n        <PrivateRoute path='/choose' logged={logged} component={ChooseHouse}/>\r\n        <PrivateRoute path='/buy' logged={logged} component={BuyHouse}/>\r\n        <PrivateRoute path='/data' logged={logged} component={UserData}/>\r\n        <PrivateRoute path='/documentation' logged={logged} component={Documentation}/>\r\n        <PrivateRoute exact path='/financing' logged={logged} component={Finance}/>\r\n        <PrivateRoute path='/financing/:profile' logged={logged} component={FinantialProfilesData}/>\r\n        <PrivateRoute path='/financing-form' logged={logged} component={FinancialForm}/>\r\n        <PrivateRoute path='/interior-design' logged={logged} component={InteriorDesign}/>\r\n        <PrivateRoute exact path='/propietary-service' logged={logged} component={PropietaryService}/>\r\n        <PrivateRoute path='/propietary-service/:service' logged={logged} component={PropietaryDetails}/>\r\n        <PrivateRoute exact path='/faq' logged={logged} component={FAQ}/>\r\n        <PrivateRoute path='/faq/:module' logged={logged} component={FaqInfo}/>\r\n        <PrivateRoute path='/help' logged={logged} component={Help}/>\r\n        <AdminRoute path='/admin/addHouse' userType={userType} logged={logged} component={AddHouse}/>\r\n        <AdminRoute path='/admin/select-client' userType={userType} logged={logged} component={SelectClient}/>\r\n        <AdminRoute path='/admin/data' userType={userType} logged={logged} component={AdminUserProfile}/>\r\n        <AdminRoute path='/admin/documentation' userType={userType} logged={logged} component={AdminDocuments}/>\r\n        <AdminRoute path='/admin/choose' userType={userType} logged={logged} component={AdminChoose}/>\r\n        <AdminRoute path='/admin/financing' userType={userType} logged={logged} component={AdminFinance}/>\r\n        <AdminRoute path='/admin/buy' userType={userType} logged={logged} component={AdminPurchase}/>\r\n        <AdminRoute path='/admin/interior-design' userType={userType} logged={logged} component={AdminFinishes}/>\r\n    </Switch>\r\n}\r\n\r\nlet mapState = ({user: {logged, info}}) => ({logged, info})\r\n\r\nexport default connect(\r\n    mapState,\r\n    {\r\n        checkSession: checkSessionAction,\r\n        getLanguage: getLanguageAction\r\n    }\r\n)(Routes)","import React from 'react';\r\nimport Navbar from './components/common/Navbar';\r\nimport Footer from './components/common/Footer';\r\nimport Routes from './Routes';\r\nimport { Layout } from 'antd';\r\nconst { Content } = Layout\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <Navbar/>\r\n      <Content>\r\n        <Routes/>\r\n      </Content>\r\n      <Footer/>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport userReducer from './userDuck'\r\nimport appReducer from './appDuck'\r\nimport dataReducer from './dataDuck'\r\nimport adminReducer from './adminDuck'\r\nimport generalReducer from './generalDataDuck'\r\n\r\nlet rootReducer = combineReducers({\r\n    app: appReducer,\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    admin: adminReducer,\r\n    general: generalReducer\r\n})\r\n\r\nlet composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nlet middlewares = [thunk]\r\n\r\nlet generateStore = () => createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n)\r\n\r\nlet generateStoreProduction = () => createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middlewares)\r\n)\r\n\r\nexport default process.env.NODE_ENV === 'development' ? generateStore : generateStoreProduction","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { CookiesProvider } from 'react-cookie'\r\nimport { Provider } from 'react-redux'\r\nimport generateStore from './redux/store'\r\nimport 'antd/dist/antd.css';\r\nimport './styles.scss';\r\nlet store = generateStore()\r\n\r\nlet WithRouter = () => <BrowserRouter><App/></BrowserRouter>\r\nlet WithStore = () => <Provider store={store}><WithRouter/></Provider>\r\nlet WithCookies = () => <CookiesProvider><WithStore/></CookiesProvider>\r\n\r\nReactDOM.render(\r\n    <WithCookies/>, document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}